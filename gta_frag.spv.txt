; SPIR-V
; Version: 1.3
; Generator: Khronos; 0
; Bound: 6735
; Schema: 0
               OpCapability Shader
               OpCapability ImageQuery
               OpCapability DerivativeControl
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %clip_distances %v0 %v1 %v2 %v3 %v4 %v5 %v6 %o0 %o1 %o2 %ps_frag_coord
               OpExecutionMode %main OriginUpperLeft
          %3 = OpString "FS_59e71f42ec88c7930d01e574ba54a93dfa7f65a1"
               OpSource Unknown 0 %3
               OpName %shader_in "shader_in"
               OpName %clip_distances "clip_distances"
               OpName %ps_main "ps_main"
               OpName %cb1_t "cb1_t"
               OpMemberName %cb1_t 0 "m"
               OpName %cb1 "cb1"
               OpName %cb1_bound "cb1_bound"
               OpName %cb2_t "cb2_t"
               OpMemberName %cb2_t 0 "m"
               OpName %cb2 "cb2"
               OpName %cb2_bound "cb2_bound"
               OpName %cb3_t "cb3_t"
               OpMemberName %cb3_t 0 "m"
               OpName %cb3 "cb3"
               OpName %cb3_bound "cb3_bound"
               OpName %cb5_t "cb5_t"
               OpMemberName %cb5_t 0 "m"
               OpName %cb5 "cb5"
               OpName %cb5_bound "cb5_bound"
               OpName %cb12_t "cb12_t"
               OpMemberName %cb12_t 0 "m"
               OpName %cb12 "cb12"
               OpName %cb12_bound "cb12_bound"
               OpName %cb6_t "cb6_t"
               OpMemberName %cb6_t 0 "m"
               OpName %cb6 "cb6"
               OpName %cb6_bound "cb6_bound"
               OpName %s0 "s0"
               OpName %s2 "s2"
               OpName %s3 "s3"
               OpName %s4 "s4"
               OpName %s11 "s11"
               OpName %s15 "s15"
               OpName %t0 "t0"
               OpName %t0_bound "t0_bound"
               OpName %t2 "t2"
               OpName %t2_bound "t2_bound"
               OpName %t3 "t3"
               OpName %t3_bound "t3_bound"
               OpName %t4 "t4"
               OpName %t4_bound "t4_bound"
               OpName %t11 "t11"
               OpName %t11_bound "t11_bound"
               OpName %t15 "t15"
               OpName %t15_bound "t15_bound"
               OpName %v0 "v0"
               OpName %v1 "v1"
               OpName %v2 "v2"
               OpName %v3 "v3"
               OpName %v4 "v4"
               OpName %v5 "v5"
               OpName %v6 "v6"
               OpName %o0 "o0"
               OpName %o1 "o1"
               OpName %o2 "o2"
               OpName %x0 "x0"
               OpName %r0 "r0"
               OpName %r1 "r1"
               OpName %r2 "r2"
               OpName %r3 "r3"
               OpName %r4 "r4"
               OpName %r5 "r5"
               OpName %r6 "r6"
               OpName %r7 "r7"
               OpName %r8 "r8"
               OpName %r9 "r9"
               OpName %r10 "r10"
               OpName %r11 "r11"
               OpName %r12 "r12"
               OpName %r13 "r13"
               OpName %r14 "r14"
               OpName %r15 "r15"
               OpName %r16 "r16"
               OpName %r17 "r17"
               OpName %r18 "r18"
               OpName %r19 "r19"
               OpName %r20 "r20"
               OpName %r21 "r21"
               OpName %r22 "r22"
               OpName %r23 "r23"
               OpName %r24 "r24"
               OpName %r25 "r25"
               OpName %r26 "r26"
               OpName %ps_frag_coord "ps_frag_coord"
               OpName %omap0_r "omap0.r"
               OpName %omap0_g "omap0.g"
               OpName %omap0_b "omap0.b"
               OpName %omap0_a "omap0.a"
               OpName %main "main"
               OpDecorate %clip_distances BuiltIn ClipDistance
               OpDecorate %_arr_v4float_uint_16 ArrayStride 16
               OpDecorate %cb1_t Block
               OpMemberDecorate %cb1_t 0 Offset 0
               OpDecorate %cb1 DescriptorSet 0
               OpDecorate %cb1 Binding 4
               OpDecorate %cb1_bound SpecId 4
               OpDecorate %_arr_v4float_uint_20 ArrayStride 16
               OpDecorate %cb2_t Block
               OpMemberDecorate %cb2_t 0 Offset 0
               OpDecorate %cb2 DescriptorSet 0
               OpDecorate %cb2 Binding 5
               OpDecorate %cb2_bound SpecId 5
               OpDecorate %_arr_v4float_uint_59 ArrayStride 16
               OpDecorate %cb3_t Block
               OpMemberDecorate %cb3_t 0 Offset 0
               OpDecorate %cb3 DescriptorSet 0
               OpDecorate %cb3 Binding 6
               OpDecorate %cb3_bound SpecId 6
               OpDecorate %_arr_v4float_uint_8 ArrayStride 16
               OpDecorate %cb5_t Block
               OpMemberDecorate %cb5_t 0 Offset 0
               OpDecorate %cb5 DescriptorSet 0
               OpDecorate %cb5 Binding 7
               OpDecorate %cb5_bound SpecId 7
               OpDecorate %_arr_v4float_uint_3 ArrayStride 16
               OpDecorate %cb12_t Block
               OpMemberDecorate %cb12_t 0 Offset 0
               OpDecorate %cb12 DescriptorSet 0
               OpDecorate %cb12 Binding 8
               OpDecorate %cb12_bound SpecId 8
               OpDecorate %_arr_v4float_uint_15 ArrayStride 16
               OpDecorate %cb6_t Block
               OpMemberDecorate %cb6_t 0 Offset 0
               OpDecorate %cb6 DescriptorSet 0
               OpDecorate %cb6 Binding 9
               OpDecorate %cb6_bound SpecId 9
               OpDecorate %s0 DescriptorSet 0
               OpDecorate %s0 Binding 10
               OpDecorate %s2 DescriptorSet 0
               OpDecorate %s2 Binding 11
               OpDecorate %s3 DescriptorSet 0
               OpDecorate %s3 Binding 12
               OpDecorate %s4 DescriptorSet 0
               OpDecorate %s4 Binding 13
               OpDecorate %s11 DescriptorSet 0
               OpDecorate %s11 Binding 14
               OpDecorate %s15 DescriptorSet 0
               OpDecorate %s15 Binding 15
               OpDecorate %t0 DescriptorSet 0
               OpDecorate %t0 Binding 16
               OpDecorate %t0_bound SpecId 16
               OpDecorate %t2 DescriptorSet 0
               OpDecorate %t2 Binding 17
               OpDecorate %t2_bound SpecId 17
               OpDecorate %t3 DescriptorSet 0
               OpDecorate %t3 Binding 18
               OpDecorate %t3_bound SpecId 18
               OpDecorate %t4 DescriptorSet 0
               OpDecorate %t4 Binding 19
               OpDecorate %t4_bound SpecId 19
               OpDecorate %t11 DescriptorSet 0
               OpDecorate %t11 Binding 20
               OpDecorate %t11_bound SpecId 20
               OpDecorate %t15 DescriptorSet 0
               OpDecorate %t15 Binding 21
               OpDecorate %t15_bound SpecId 21
               OpDecorate %v0 Location 0
               OpDecorate %v0 Centroid
               OpDecorate %v1 Location 1
               OpDecorate %v2 Location 2
               OpDecorate %v3 Location 3
               OpDecorate %v4 Location 4
               OpDecorate %v5 Location 5
               OpDecorate %v6 Location 6
               OpDecorate %o0 Location 0
               OpDecorate %o0 Index 0
               OpDecorate %o1 Location 1
               OpDecorate %o1 Index 0
               OpDecorate %o2 Location 2
               OpDecorate %o2 Index 0
               OpDecorate %ps_frag_coord BuiltIn FragCoord
               OpDecorate %omap0_r SpecId 1216
               OpDecorate %omap0_g SpecId 1217
               OpDecorate %omap0_b SpecId 1218
               OpDecorate %omap0_a SpecId 1219
       %uint = OpTypeInt 32 0
     %uint_9 = OpConstant %uint 9
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_arr_v4float_uint_9 = OpTypeArray %v4float %uint_9
%_ptr_Private__arr_v4float_uint_9 = OpTypePointer Private %_arr_v4float_uint_9
     %uint_4 = OpConstant %uint 4
%_arr_float_uint_4 = OpTypeArray %float %uint_4
%_ptr_Input__arr_float_uint_4 = OpTypePointer Input %_arr_float_uint_4
       %void = OpTypeVoid
         %17 = OpTypeFunction %void
    %uint_16 = OpConstant %uint 16
%_arr_v4float_uint_16 = OpTypeArray %v4float %uint_16
      %cb1_t = OpTypeStruct %_arr_v4float_uint_16
%_ptr_Uniform_cb1_t = OpTypePointer Uniform %cb1_t
       %bool = OpTypeBool
  %cb1_bound = OpSpecConstantTrue %bool
    %uint_20 = OpConstant %uint 20
%_arr_v4float_uint_20 = OpTypeArray %v4float %uint_20
      %cb2_t = OpTypeStruct %_arr_v4float_uint_20
%_ptr_Uniform_cb2_t = OpTypePointer Uniform %cb2_t
  %cb2_bound = OpSpecConstantTrue %bool
    %uint_59 = OpConstant %uint 59
%_arr_v4float_uint_59 = OpTypeArray %v4float %uint_59
      %cb3_t = OpTypeStruct %_arr_v4float_uint_59
%_ptr_Uniform_cb3_t = OpTypePointer Uniform %cb3_t
  %cb3_bound = OpSpecConstantTrue %bool
     %uint_8 = OpConstant %uint 8
%_arr_v4float_uint_8 = OpTypeArray %v4float %uint_8
      %cb5_t = OpTypeStruct %_arr_v4float_uint_8
%_ptr_Uniform_cb5_t = OpTypePointer Uniform %cb5_t
  %cb5_bound = OpSpecConstantTrue %bool
     %uint_3 = OpConstant %uint 3
%_arr_v4float_uint_3 = OpTypeArray %v4float %uint_3
     %cb12_t = OpTypeStruct %_arr_v4float_uint_3
%_ptr_Uniform_cb12_t = OpTypePointer Uniform %cb12_t
 %cb12_bound = OpSpecConstantTrue %bool
    %uint_15 = OpConstant %uint 15
%_arr_v4float_uint_15 = OpTypeArray %v4float %uint_15
      %cb6_t = OpTypeStruct %_arr_v4float_uint_15
%_ptr_Uniform_cb6_t = OpTypePointer Uniform %cb6_t
  %cb6_bound = OpSpecConstantTrue %bool
         %56 = OpTypeSampler
%_ptr_UniformConstant_56 = OpTypePointer UniformConstant %56
         %64 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_64 = OpTypePointer UniformConstant %64
   %t0_bound = OpSpecConstantTrue %bool
         %68 = OpTypeImage %float 2D 1 0 0 1 Unknown
   %t2_bound = OpSpecConstantTrue %bool
   %t3_bound = OpSpecConstantTrue %bool
   %t4_bound = OpSpecConstantTrue %bool
  %t11_bound = OpSpecConstantTrue %bool
  %t15_bound = OpSpecConstantTrue %bool
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_float = OpTypePointer Output %float
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%_ptr_Private__arr_v4float_uint_4 = OpTypePointer Private %_arr_v4float_uint_4
        %int = OpTypeInt 32 1
      %int_1 = OpConstant %int 1
%_ptr_Private_v4float = OpTypePointer Private %v4float
    %v2float = OpTypeVector %float 2
        %105 = OpTypeSampledImage %64
%uint_1073741824 = OpConstant %uint 1073741824
     %v2uint = OpTypeVector %uint 2
        %124 = OpConstantComposite %v2uint %uint_1073741824 %uint_1073741824
%uint_3212836864 = OpConstant %uint 3212836864
        %127 = OpConstantComposite %v2uint %uint_3212836864 %uint_3212836864
%uint_1065353216 = OpConstant %uint 1065353216
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
      %int_0 = OpConstant %int 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
%uint_981668463 = OpConstant %uint 981668463
      %int_5 = OpConstant %int 5
      %int_4 = OpConstant %int 4
      %int_2 = OpConstant %int 2
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
      %int_3 = OpConstant %int 3
        %330 = OpConstantComposite %v2uint %uint_1065353216 %uint_1065353216
%uint_3204448256 = OpConstant %uint 3204448256
        %338 = OpConstantComposite %v2uint %uint_3204448256 %uint_3204448256
     %int_12 = OpConstant %int 12
%uint_4294967295 = OpConstant %uint 4294967295
      %int_6 = OpConstant %int 6
     %int_15 = OpConstant %int 15
%uint_3287941120 = OpConstant %uint 3287941120
%uint_1141604352 = OpConstant %uint 1141604352
%uint_1077936128 = OpConstant %uint 1077936128
     %int_14 = OpConstant %int 14
      %int_8 = OpConstant %int 8
      %int_9 = OpConstant %int 9
     %int_10 = OpConstant %int 10
      %int_7 = OpConstant %int 7
     %int_11 = OpConstant %int 11
%uint_3199284112 = OpConstant %uint 3199284112
%uint_1051209681 = OpConstant %uint 1051209681
        %732 = OpConstantComposite %v2uint %uint_3199284112 %uint_1051209681
%uint_1069547520 = OpConstant %uint 1069547520
%uint_1056964608 = OpConstant %uint 1056964608
%uint_1048576000 = OpConstant %uint 1048576000
     %v4uint = OpTypeVector %uint 4
        %866 = OpConstantComposite %v4uint %uint_0 %uint_1065353216 %uint_1073741824 %uint_1077936128
     %v4bool = OpTypeVector %bool 4
        %872 = OpConstantComposite %v4uint %uint_0 %uint_0 %uint_0 %uint_0
        %873 = OpConstantComposite %v4uint %uint_4294967295 %uint_4294967295 %uint_4294967295 %uint_4294967295
        %878 = OpConstantComposite %v4uint %uint_1065353216 %uint_1065353216 %uint_1065353216 %uint_1065353216
     %int_13 = OpConstant %int 13
       %1011 = OpConstantComposite %v2uint %uint_0 %uint_0
       %1018 = OpConstantComposite %v2uint %uint_1056964608 %uint_1056964608
%uint_3209469534 = OpConstant %uint 3209469534
%uint_1045337366 = OpConstant %uint 1045337366
       %1072 = OpConstantComposite %v2uint %uint_3209469534 %uint_1045337366
%uint_3170853831 = OpConstant %uint 3170853831
%uint_1043833937 = OpConstant %uint 1043833937
       %1092 = OpConstantComposite %v2uint %uint_3170853831 %uint_1043833937
%uint_1057212063 = OpConstant %uint 1057212063
%uint_1048693523 = OpConstant %uint 1048693523
       %1112 = OpConstantComposite %v2uint %uint_1057212063 %uint_1048693523
%uint_3180674232 = OpConstant %uint 3180674232
%uint_1006938806 = OpConstant %uint 1006938806
       %1132 = OpConstantComposite %v2uint %uint_3180674232 %uint_1006938806
%uint_3212329878 = OpConstant %uint 3212329878
%uint_1024288392 = OpConstant %uint 1024288392
       %1153 = OpConstantComposite %v2uint %uint_3212329878 %uint_1024288392
%uint_1057728754 = OpConstant %uint 1057728754
%uint_1019586872 = OpConstant %uint 1019586872
       %1174 = OpConstantComposite %v2uint %uint_1057728754 %uint_1019586872
%uint_3169635457 = OpConstant %uint 3169635457
%uint_3188461890 = OpConstant %uint 3188461890
       %1195 = OpConstantComposite %v2uint %uint_3169635457 %uint_3188461890
%uint_3203760775 = OpConstant %uint 3203760775
%uint_3195712888 = OpConstant %uint 3195712888
       %1216 = OpConstantComposite %v2uint %uint_3203760775 %uint_3195712888
%uint_1061306357 = OpConstant %uint 1061306357
%uint_3185940866 = OpConstant %uint 3185940866
       %1237 = OpConstantComposite %v2uint %uint_1061306357 %uint_3185940866
%uint_1051574175 = OpConstant %uint 1051574175
%uint_3196014539 = OpConstant %uint 3196014539
       %1258 = OpConstantComposite %v2uint %uint_1051574175 %uint_3196014539
%uint_1065945432 = OpConstant %uint 1065945432
%uint_1045765655 = OpConstant %uint 1045765655
       %1279 = OpConstantComposite %v2uint %uint_1065945432 %uint_1045765655
%uint_1067819787 = OpConstant %uint 1067819787
%uint_3163821986 = OpConstant %uint 3163821986
       %1300 = OpConstantComposite %v2uint %uint_1067819787 %uint_3163821986
%uint_3208601675 = OpConstant %uint 3208601675
%uint_3186191202 = OpConstant %uint 3186191202
       %1321 = OpConstantComposite %v2uint %uint_3208601675 %uint_3186191202
%uint_1064476132 = OpConstant %uint 1064476132
%uint_3195976671 = OpConstant %uint 3195976671
       %1342 = OpConstantComposite %v2uint %uint_1064476132 %uint_3195976671
%uint_3215715439 = OpConstant %uint 3215715439
%uint_3182783375 = OpConstant %uint 3182783375
       %1363 = OpConstantComposite %v2uint %uint_3215715439 %uint_3182783375
       %1380 = OpTypeSampledImage %68
%uint_1097859072 = OpConstant %uint 1097859072
%uint_3234437530 = OpConstant %uint 3234437530
%uint_1031798784 = OpConstant %uint 1031798784
%uint_841731191 = OpConstant %uint 841731191
       %1757 = OpConstantComposite %v2uint %uint_1073741824 %uint_841731191
%uint_1040187392 = OpConstant %uint 1040187392
     %int_19 = OpConstant %int 19
%uint_953267991 = OpConstant %uint 953267991
     %v3uint = OpTypeVector %uint 3
     %v3bool = OpTypeVector %bool 3
       %1998 = OpConstantComposite %v3uint %uint_0 %uint_0 %uint_0
%uint_897988541 = OpConstant %uint 897988541
       %2013 = OpConstantComposite %v3uint %uint_897988541 %uint_897988541 %uint_897988541
     %int_27 = OpConstant %int 27
     %int_35 = OpConstant %int 35
     %int_20 = OpConstant %int 20
     %int_28 = OpConstant %int 28
     %int_36 = OpConstant %int 36
     %int_21 = OpConstant %int 21
     %int_29 = OpConstant %int 29
     %int_37 = OpConstant %int 37
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_38 = OpConstant %int 38
     %int_23 = OpConstant %int 23
     %int_31 = OpConstant %int 31
     %int_39 = OpConstant %int 39
     %uint_5 = OpConstant %uint 5
     %int_24 = OpConstant %int 24
     %int_16 = OpConstant %int 16
     %int_32 = OpConstant %int 32
     %int_40 = OpConstant %int 40
     %uint_6 = OpConstant %uint 6
     %int_25 = OpConstant %int 25
     %int_17 = OpConstant %int 17
     %int_33 = OpConstant %int 33
     %int_41 = OpConstant %int 41
     %uint_7 = OpConstant %uint 7
     %int_26 = OpConstant %int 26
     %int_18 = OpConstant %int 18
     %int_34 = OpConstant %int 34
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_44 = OpConstant %int 44
     %int_47 = OpConstant %int 47
     %int_48 = OpConstant %int 48
     %int_45 = OpConstant %int 45
     %int_46 = OpConstant %int 46
     %int_49 = OpConstant %int 49
%uint_988335961 = OpConstant %uint 988335961
%uint_1060012862 = OpConstant %uint 1060012862
       %5626 = OpConstantComposite %v3uint %uint_1060012862 %uint_1060012862 %uint_1060012862
%uint_1050868100 = OpConstant %uint 1050868100
       %5634 = OpConstantComposite %v3uint %uint_1050868100 %uint_1050868100 %uint_1050868100
     %int_50 = OpConstant %int 50
     %int_52 = OpConstant %int 52
%uint_1008981770 = OpConstant %uint 1008981770
%uint_3216550459 = OpConstant %uint 3216550459
     %int_51 = OpConstant %int 51
%uint_1069066811 = OpConstant %uint 1069066811
     %int_54 = OpConstant %int 54
     %int_53 = OpConstant %int 53
     %int_56 = OpConstant %int 56
     %int_58 = OpConstant %int 58
     %int_55 = OpConstant %int 55
     %int_57 = OpConstant %int 57
%uint_1050253722 = OpConstant %uint 1050253722
%_ptr_Input_float = OpTypePointer Input %float
    %omap0_r = OpSpecConstant %uint 0
    %omap0_g = OpSpecConstant %uint 1
    %omap0_b = OpSpecConstant %uint 2
    %omap0_a = OpSpecConstant %uint 3
  %shader_in = OpVariable %_ptr_Private__arr_v4float_uint_9 Private
%clip_distances = OpVariable %_ptr_Input__arr_float_uint_4 Input
        %cb1 = OpVariable %_ptr_Uniform_cb1_t Uniform
        %cb2 = OpVariable %_ptr_Uniform_cb2_t Uniform
        %cb3 = OpVariable %_ptr_Uniform_cb3_t Uniform
        %cb5 = OpVariable %_ptr_Uniform_cb5_t Uniform
       %cb12 = OpVariable %_ptr_Uniform_cb12_t Uniform
        %cb6 = OpVariable %_ptr_Uniform_cb6_t Uniform
         %s0 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %s2 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %s3 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %s4 = OpVariable %_ptr_UniformConstant_56 UniformConstant
        %s11 = OpVariable %_ptr_UniformConstant_56 UniformConstant
        %s15 = OpVariable %_ptr_UniformConstant_56 UniformConstant
         %t0 = OpVariable %_ptr_UniformConstant_64 UniformConstant
         %t2 = OpVariable %_ptr_UniformConstant_64 UniformConstant
         %t3 = OpVariable %_ptr_UniformConstant_64 UniformConstant
         %t4 = OpVariable %_ptr_UniformConstant_64 UniformConstant
        %t11 = OpVariable %_ptr_UniformConstant_64 UniformConstant
        %t15 = OpVariable %_ptr_UniformConstant_64 UniformConstant
         %v0 = OpVariable %_ptr_Input_v4float Input
         %v1 = OpVariable %_ptr_Input_v3float Input
         %v2 = OpVariable %_ptr_Input_v3float Input
         %v3 = OpVariable %_ptr_Input_v3float Input
         %v4 = OpVariable %_ptr_Input_v3float Input
         %v5 = OpVariable %_ptr_Input_v3float Input
         %v6 = OpVariable %_ptr_Input_v4float Input
         %o0 = OpVariable %_ptr_Output_v4float Output
         %o1 = OpVariable %_ptr_Output_float Output
         %o2 = OpVariable %_ptr_Output_float Output
         %x0 = OpVariable %_ptr_Private__arr_v4float_uint_4 Private
         %r0 = OpVariable %_ptr_Private_v4float Private
         %r1 = OpVariable %_ptr_Private_v4float Private
         %r2 = OpVariable %_ptr_Private_v4float Private
         %r3 = OpVariable %_ptr_Private_v4float Private
         %r4 = OpVariable %_ptr_Private_v4float Private
         %r5 = OpVariable %_ptr_Private_v4float Private
         %r6 = OpVariable %_ptr_Private_v4float Private
         %r7 = OpVariable %_ptr_Private_v4float Private
         %r8 = OpVariable %_ptr_Private_v4float Private
         %r9 = OpVariable %_ptr_Private_v4float Private
        %r10 = OpVariable %_ptr_Private_v4float Private
        %r11 = OpVariable %_ptr_Private_v4float Private
        %r12 = OpVariable %_ptr_Private_v4float Private
        %r13 = OpVariable %_ptr_Private_v4float Private
        %r14 = OpVariable %_ptr_Private_v4float Private
        %r15 = OpVariable %_ptr_Private_v4float Private
        %r16 = OpVariable %_ptr_Private_v4float Private
        %r17 = OpVariable %_ptr_Private_v4float Private
        %r18 = OpVariable %_ptr_Private_v4float Private
        %r19 = OpVariable %_ptr_Private_v4float Private
        %r20 = OpVariable %_ptr_Private_v4float Private
        %r21 = OpVariable %_ptr_Private_v4float Private
        %r22 = OpVariable %_ptr_Private_v4float Private
        %r23 = OpVariable %_ptr_Private_v4float Private
        %r24 = OpVariable %_ptr_Private_v4float Private
        %r25 = OpVariable %_ptr_Private_v4float Private
        %r26 = OpVariable %_ptr_Private_v4float Private
%ps_frag_coord = OpVariable %_ptr_Input_v4float Input
    %ps_main = OpFunction %void None %17
         %18 = OpLabel
        %100 = OpAccessChain %_ptr_Private_v4float %shader_in %int_1
        %101 = OpLoad %v4float %100
        %102 = OpVectorShuffle %v4float %101 %101 0 1 0 0
        %104 = OpVectorShuffle %v2float %102 %102 0 1
        %106 = OpLoad %56 %s0
        %107 = OpLoad %64 %t0
        %108 = OpSampledImage %105 %107 %106
        %109 = OpImageSampleImplicitLod %v4float %108 %104
               OpStore %r0 %109
        %111 = OpAccessChain %_ptr_Private_v4float %shader_in %int_1
        %112 = OpLoad %v4float %111
        %113 = OpVectorShuffle %v4float %112 %112 0 1 0 0
        %114 = OpVectorShuffle %v2float %113 %113 0 1
        %115 = OpLoad %56 %s2
        %116 = OpLoad %64 %t2
        %117 = OpSampledImage %105 %116 %115
        %118 = OpImageSampleImplicitLod %v4float %117 %114
               OpStore %r1 %118
        %120 = OpLoad %v4float %r1
        %121 = OpVectorShuffle %v2float %120 %120 0 1
        %125 = OpBitcast %v2float %124
        %128 = OpBitcast %v2float %127
        %129 = OpExtInst %v2float %1 Fma %121 %125 %128
        %130 = OpLoad %v4float %r1
        %131 = OpVectorShuffle %v4float %130 %129 4 5 2 3
               OpStore %r1 %131
        %132 = OpLoad %v4float %r1
        %133 = OpVectorShuffle %v2float %132 %132 0 1
        %134 = OpLoad %v4float %r1
        %135 = OpVectorShuffle %v2float %134 %134 0 1
        %136 = OpDot %float %133 %135
        %137 = OpLoad %v4float %r1
        %138 = OpCompositeInsert %v4float %136 %137 2
               OpStore %r1 %138
        %139 = OpLoad %v4float %r1
        %140 = OpCompositeExtract %float %139 2
        %141 = OpFNegate %float %140
        %143 = OpBitcast %float %uint_1065353216
        %144 = OpFAdd %float %141 %143
        %145 = OpLoad %v4float %r1
        %146 = OpCompositeInsert %v4float %144 %145 2
               OpStore %r1 %146
        %147 = OpLoad %v4float %r1
        %148 = OpCompositeExtract %float %147 2
        %149 = OpExtInst %float %1 FAbs %148
        %150 = OpExtInst %float %1 Sqrt %149
        %151 = OpLoad %v4float %r1
        %152 = OpCompositeInsert %v4float %150 %151 2
               OpStore %r1 %152
        %155 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_1
        %157 = OpAccessChain %_ptr_Uniform_float %155 %uint_3
        %158 = OpLoad %float %157
        %160 = OpBitcast %float %uint_981668463
        %161 = OpExtInst %float %1 NMax %158 %160
        %162 = OpLoad %v4float %r1
        %163 = OpCompositeInsert %v4float %161 %162 3
               OpStore %r1 %163
        %164 = OpLoad %v4float %r1
        %165 = OpVectorShuffle %v2float %164 %164 3 3
        %166 = OpLoad %v4float %r1
        %167 = OpVectorShuffle %v2float %166 %166 0 1
        %168 = OpFMul %v2float %165 %167
        %169 = OpLoad %v4float %r1
        %170 = OpVectorShuffle %v4float %169 %168 4 5 2 3
               OpStore %r1 %170
        %171 = OpLoad %v4float %r1
        %172 = OpVectorShuffle %v3float %171 %171 1 1 1
        %174 = OpAccessChain %_ptr_Private_v4float %shader_in %int_5
        %175 = OpLoad %v4float %174
        %176 = OpVectorShuffle %v3float %175 %175 0 1 2
        %177 = OpFMul %v3float %172 %176
        %179 = OpLoad %v4float %r2
        %180 = OpVectorShuffle %v4float %179 %177 4 5 6 3
               OpStore %r2 %180
        %181 = OpLoad %v4float %r1
        %182 = OpVectorShuffle %v3float %181 %181 0 0 0
        %184 = OpAccessChain %_ptr_Private_v4float %shader_in %int_4
        %185 = OpLoad %v4float %184
        %186 = OpVectorShuffle %v3float %185 %185 0 1 2
        %187 = OpLoad %v4float %r2
        %188 = OpVectorShuffle %v3float %187 %187 0 1 2
        %189 = OpExtInst %v3float %1 Fma %182 %186 %188
        %190 = OpLoad %v4float %r1
        %191 = OpVectorShuffle %v4float %190 %189 4 5 2 6
               OpStore %r1 %191
        %192 = OpLoad %v4float %r1
        %193 = OpVectorShuffle %v3float %192 %192 2 2 2
        %195 = OpAccessChain %_ptr_Private_v4float %shader_in %int_2
        %196 = OpLoad %v4float %195
        %197 = OpVectorShuffle %v3float %196 %196 0 1 2
        %198 = OpLoad %v4float %r1
        %199 = OpVectorShuffle %v3float %198 %198 0 1 3
        %200 = OpExtInst %v3float %1 Fma %193 %197 %199
        %201 = OpLoad %v4float %r1
        %202 = OpVectorShuffle %v4float %201 %200 4 5 6 3
               OpStore %r1 %202
        %203 = OpLoad %v4float %r1
        %204 = OpVectorShuffle %v3float %203 %203 0 1 2
        %205 = OpLoad %v4float %r1
        %206 = OpVectorShuffle %v3float %205 %205 0 1 2
        %207 = OpDot %float %204 %206
        %208 = OpLoad %v4float %r1
        %209 = OpCompositeInsert %v4float %207 %208 3
               OpStore %r1 %209
        %210 = OpLoad %v4float %r1
        %211 = OpCompositeExtract %float %210 3
        %212 = OpExtInst %float %1 InverseSqrt %211
        %213 = OpLoad %v4float %r1
        %214 = OpCompositeInsert %v4float %212 %213 3
               OpStore %r1 %214
        %215 = OpLoad %v4float %r1
        %216 = OpVectorShuffle %v3float %215 %215 3 3 3
        %217 = OpLoad %v4float %r1
        %218 = OpVectorShuffle %v3float %217 %217 0 1 2
        %219 = OpFMul %v3float %216 %218
        %220 = OpLoad %v4float %r2
        %221 = OpVectorShuffle %v4float %220 %219 4 5 6 3
               OpStore %r2 %221
        %222 = OpAccessChain %_ptr_Private_v4float %shader_in %int_1
        %223 = OpLoad %v4float %222
        %224 = OpVectorShuffle %v4float %223 %223 0 1 0 0
        %225 = OpVectorShuffle %v2float %224 %224 0 1
        %226 = OpLoad %56 %s3
        %227 = OpLoad %64 %t3
        %228 = OpSampledImage %105 %227 %226
        %229 = OpImageSampleImplicitLod %v4float %228 %225
               OpStore %r3 %229
        %231 = OpLoad %v4float %r3
        %232 = OpVectorShuffle %v2float %231 %231 0 1
        %233 = OpLoad %v4float %r3
        %234 = OpVectorShuffle %v2float %233 %233 0 1
        %235 = OpFMul %v2float %232 %234
        %236 = OpLoad %v4float %r3
        %237 = OpVectorShuffle %v4float %236 %235 4 5 2 3
               OpStore %r3 %237
        %238 = OpLoad %v4float %r3
        %239 = OpVectorShuffle %v3float %238 %238 0 1 2
        %240 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_1
        %242 = OpAccessChain %_ptr_Uniform_float %240 %uint_0
        %243 = OpLoad %float %242
        %245 = OpAccessChain %_ptr_Uniform_float %240 %uint_1
        %246 = OpLoad %float %245
        %248 = OpAccessChain %_ptr_Uniform_float %240 %uint_2
        %249 = OpLoad %float %248
        %250 = OpCompositeConstruct %v3float %243 %246 %249
        %251 = OpDot %float %239 %250
        %252 = OpLoad %v4float %r1
        %253 = OpCompositeInsert %v4float %251 %252 0
               OpStore %r1 %253
        %254 = OpLoad %v4float %r1
        %255 = OpCompositeExtract %float %254 0
        %256 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
        %257 = OpAccessChain %_ptr_Uniform_float %256 %uint_2
        %258 = OpLoad %float %257
        %259 = OpFMul %float %255 %258
        %262 = OpExtInst %float %1 NClamp %259 %float_0 %float_1
        %263 = OpLoad %v4float %r1
        %264 = OpCompositeInsert %v4float %262 %263 0
               OpStore %r1 %264
        %266 = OpAccessChain %_ptr_Private_v4float %shader_in %int_3
        %267 = OpLoad %v4float %266
        %268 = OpVectorShuffle %v3float %267 %267 0 1 2
        %269 = OpAccessChain %_ptr_Private_v4float %shader_in %int_3
        %270 = OpLoad %v4float %269
        %271 = OpVectorShuffle %v3float %270 %270 0 1 2
        %272 = OpDot %float %268 %271
        %273 = OpLoad %v4float %r1
        %274 = OpCompositeInsert %v4float %272 %273 1
               OpStore %r1 %274
        %275 = OpLoad %v4float %r1
        %276 = OpCompositeExtract %float %275 1
        %277 = OpExtInst %float %1 InverseSqrt %276
        %278 = OpLoad %v4float %r1
        %279 = OpCompositeInsert %v4float %277 %278 1
               OpStore %r1 %279
        %280 = OpLoad %v4float %r1
        %281 = OpVectorShuffle %v3float %280 %280 1 1 1
        %282 = OpAccessChain %_ptr_Private_v4float %shader_in %int_3
        %283 = OpLoad %v4float %282
        %284 = OpVectorShuffle %v3float %283 %283 0 1 2
        %285 = OpFMul %v3float %281 %284
        %286 = OpLoad %v4float %r3
        %287 = OpVectorShuffle %v4float %286 %285 4 5 6 3
               OpStore %r3 %287
        %288 = OpLoad %v4float %r3
        %289 = OpVectorShuffle %v3float %288 %288 0 1 2
        %290 = OpFNegate %v3float %289
        %291 = OpLoad %v4float %r2
        %292 = OpVectorShuffle %v3float %291 %291 0 1 2
        %293 = OpDot %float %290 %292
        %294 = OpLoad %v4float %r1
        %295 = OpCompositeInsert %v4float %293 %294 1
               OpStore %r1 %295
        %296 = OpLoad %v4float %r1
        %297 = OpCompositeExtract %float %296 1
        %298 = OpLoad %v4float %r1
        %299 = OpCompositeExtract %float %298 1
        %300 = OpFAdd %float %297 %299
        %301 = OpLoad %v4float %r1
        %302 = OpCompositeInsert %v4float %300 %301 1
               OpStore %r1 %302
        %303 = OpLoad %v4float %r2
        %304 = OpVectorShuffle %v3float %303 %303 0 1 2
        %305 = OpLoad %v4float %r1
        %306 = OpVectorShuffle %v3float %305 %305 1 1 1
        %307 = OpFNegate %v3float %306
        %308 = OpLoad %v4float %r3
        %309 = OpVectorShuffle %v3float %308 %308 0 1 2
        %310 = OpFNegate %v3float %309
        %311 = OpExtInst %v3float %1 Fma %304 %307 %310
        %312 = OpLoad %v4float %r3
        %313 = OpVectorShuffle %v4float %312 %311 4 5 6 3
               OpStore %r3 %313
        %314 = OpLoad %v4float %r3
        %315 = OpVectorShuffle %v3float %314 %314 0 1 2
        %316 = OpLoad %v4float %r3
        %317 = OpVectorShuffle %v3float %316 %316 0 1 2
        %318 = OpDot %float %315 %317
        %319 = OpLoad %v4float %r1
        %320 = OpCompositeInsert %v4float %318 %319 1
               OpStore %r1 %320
        %321 = OpLoad %v4float %r1
        %322 = OpCompositeExtract %float %321 1
        %323 = OpExtInst %float %1 InverseSqrt %322
        %324 = OpLoad %v4float %r1
        %325 = OpCompositeInsert %v4float %323 %324 1
               OpStore %r1 %325
        %326 = OpLoad %v4float %r3
        %327 = OpVectorShuffle %v2float %326 %326 0 2
        %328 = OpLoad %v4float %r1
        %329 = OpVectorShuffle %v2float %328 %328 1 1
        %331 = OpBitcast %v2float %330
        %332 = OpExtInst %v2float %1 Fma %327 %329 %331
        %333 = OpLoad %v4float %r3
        %334 = OpVectorShuffle %v4float %333 %332 4 5 2 3
               OpStore %r3 %334
        %335 = OpLoad %v4float %r3
        %336 = OpVectorShuffle %v2float %335 %335 0 1
        %339 = OpBitcast %v2float %338
        %340 = OpFMul %v2float %336 %339
        %341 = OpLoad %v4float %r3
        %342 = OpVectorShuffle %v4float %341 %340 4 5 2 3
               OpStore %r3 %342
        %343 = OpLoad %v4float %r3
        %344 = OpVectorShuffle %v4float %343 %343 0 1 0 0
        %345 = OpVectorShuffle %v2float %344 %344 0 1
        %346 = OpLoad %56 %s4
        %347 = OpLoad %64 %t4
        %348 = OpSampledImage %105 %347 %346
        %349 = OpImageSampleImplicitLod %v4float %348 %345
               OpStore %r4 %349
        %351 = OpLoad %v4float %r4
        %352 = OpVectorShuffle %v3float %351 %351 0 1 2
        %353 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_2
        %354 = OpAccessChain %_ptr_Uniform_float %353 %uint_0
        %355 = OpLoad %float %354
        %356 = OpCompositeConstruct %v3float %355 %355 %355
        %357 = OpFMul %v3float %352 %356
        %358 = OpLoad %v4float %r3
        %359 = OpVectorShuffle %v4float %358 %357 4 5 6 3
               OpStore %r3 %359
        %361 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_12
        %362 = OpAccessChain %_ptr_Uniform_float %361 %uint_3
        %363 = OpLoad %float %362
        %364 = OpBitcast %float %uint_0
        %365 = OpFOrdEqual %bool %363 %364
        %367 = OpSelect %uint %365 %uint_4294967295 %uint_0
        %368 = OpBitcast %float %367
        %369 = OpLoad %v4float %r1
        %370 = OpCompositeInsert %v4float %368 %369 1
               OpStore %r1 %370
        %371 = OpLoad %v4float %r1
        %372 = OpCompositeExtract %float %371 1
        %373 = OpBitcast %uint %372
        %374 = OpBitcast %float %uint_0
        %375 = OpBitcast %float %uint_1065353216
        %376 = OpINotEqual %bool %373 %uint_0
        %377 = OpSelect %float %376 %374 %375
        %378 = OpLoad %v4float %r1
        %379 = OpCompositeInsert %v4float %377 %378 1
               OpStore %r1 %379
        %380 = OpLoad %v4float %r1
        %381 = OpVectorShuffle %v3float %380 %380 1 1 1
        %382 = OpLoad %v4float %r3
        %383 = OpVectorShuffle %v3float %382 %382 0 1 2
        %384 = OpFMul %v3float %381 %383
        %385 = OpLoad %v4float %r3
        %386 = OpVectorShuffle %v4float %385 %384 4 5 6 3
               OpStore %r3 %386
        %387 = OpLoad %v4float %r0
        %388 = OpCompositeExtract %float %387 3
        %389 = OpAccessChain %_ptr_Private_v4float %shader_in %int_0
        %390 = OpLoad %v4float %389
        %391 = OpCompositeExtract %float %390 3
        %392 = OpFMul %float %388 %391
        %393 = OpLoad %v4float %r0
        %394 = OpCompositeInsert %v4float %392 %393 3
               OpStore %r0 %394
        %395 = OpAccessChain %_ptr_Private_v4float %shader_in %int_0
        %396 = OpLoad %v4float %395
        %397 = OpVectorShuffle %v2float %396 %396 0 1
        %398 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_12
        %399 = OpAccessChain %_ptr_Uniform_float %398 %uint_2
        %400 = OpLoad %float %399
        %401 = OpAccessChain %_ptr_Uniform_float %398 %uint_1
        %402 = OpLoad %float %401
        %403 = OpCompositeConstruct %v2float %400 %402
        %404 = OpFMul %v2float %397 %403
        %405 = OpLoad %v4float %r4
        %406 = OpVectorShuffle %v4float %405 %404 4 5 2 3
               OpStore %r4 %406
        %407 = OpLoad %v4float %r0
        %408 = OpVectorShuffle %v3float %407 %407 0 1 2
        %409 = OpLoad %v4float %r0
        %410 = OpVectorShuffle %v3float %409 %409 0 1 2
        %411 = OpFMul %v3float %408 %410
        %412 = OpLoad %v4float %r0
        %413 = OpVectorShuffle %v4float %412 %411 4 5 6 3
               OpStore %r0 %413
        %415 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
        %416 = OpLoad %v4float %415
        %417 = OpVectorShuffle %v3float %416 %416 0 1 2
        %418 = OpFNegate %v3float %417
        %420 = OpAccessChain %_ptr_Uniform_v4float %cb1 %int_0 %int_15
        %421 = OpAccessChain %_ptr_Uniform_float %420 %uint_0
        %422 = OpLoad %float %421
        %423 = OpAccessChain %_ptr_Uniform_float %420 %uint_1
        %424 = OpLoad %float %423
        %425 = OpAccessChain %_ptr_Uniform_float %420 %uint_2
        %426 = OpLoad %float %425
        %427 = OpCompositeConstruct %v3float %422 %424 %426
        %428 = OpFAdd %v3float %418 %427
        %430 = OpLoad %v4float %r5
        %431 = OpVectorShuffle %v4float %430 %428 4 5 6 3
               OpStore %r5 %431
        %432 = OpLoad %v4float %r5
        %433 = OpVectorShuffle %v3float %432 %432 0 1 2
        %434 = OpLoad %v4float %r5
        %435 = OpVectorShuffle %v3float %434 %434 0 1 2
        %436 = OpDot %float %433 %435
        %437 = OpLoad %v4float %r1
        %438 = OpCompositeInsert %v4float %436 %437 1
               OpStore %r1 %438
        %439 = OpLoad %v4float %r1
        %440 = OpCompositeExtract %float %439 1
        %441 = OpExtInst %float %1 InverseSqrt %440
        %442 = OpLoad %v4float %r1
        %443 = OpCompositeInsert %v4float %441 %442 1
               OpStore %r1 %443
        %444 = OpLoad %v4float %r1
        %445 = OpVectorShuffle %v3float %444 %444 1 1 1
        %446 = OpLoad %v4float %r5
        %447 = OpVectorShuffle %v3float %446 %446 0 1 2
        %448 = OpFMul %v3float %445 %447
        %450 = OpLoad %v4float %r6
        %451 = OpVectorShuffle %v4float %450 %448 4 5 6 3
               OpStore %r6 %451
        %452 = OpLoad %v4float %r5
        %453 = OpVectorShuffle %v3float %452 %452 0 1 2
        %454 = OpLoad %v4float %r1
        %455 = OpVectorShuffle %v3float %454 %454 1 1 1
        %456 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_0
        %457 = OpAccessChain %_ptr_Uniform_float %456 %uint_0
        %458 = OpLoad %float %457
        %459 = OpAccessChain %_ptr_Uniform_float %456 %uint_1
        %460 = OpLoad %float %459
        %461 = OpAccessChain %_ptr_Uniform_float %456 %uint_2
        %462 = OpLoad %float %461
        %463 = OpCompositeConstruct %v3float %458 %460 %462
        %464 = OpFNegate %v3float %463
        %465 = OpExtInst %v3float %1 Fma %453 %455 %464
        %467 = OpLoad %v4float %r7
        %468 = OpVectorShuffle %v4float %467 %465 4 5 6 3
               OpStore %r7 %468
        %469 = OpLoad %v4float %r7
        %470 = OpVectorShuffle %v3float %469 %469 0 1 2
        %471 = OpLoad %v4float %r7
        %472 = OpVectorShuffle %v3float %471 %471 0 1 2
        %473 = OpDot %float %470 %472
        %474 = OpLoad %v4float %r2
        %475 = OpCompositeInsert %v4float %473 %474 3
               OpStore %r2 %475
        %476 = OpLoad %v4float %r2
        %477 = OpCompositeExtract %float %476 3
        %478 = OpExtInst %float %1 InverseSqrt %477
        %479 = OpLoad %v4float %r2
        %480 = OpCompositeInsert %v4float %478 %479 3
               OpStore %r2 %480
        %481 = OpLoad %v4float %r2
        %482 = OpVectorShuffle %v3float %481 %481 3 3 3
        %483 = OpLoad %v4float %r7
        %484 = OpVectorShuffle %v3float %483 %483 0 1 2
        %485 = OpFMul %v3float %482 %484
        %486 = OpLoad %v4float %r7
        %487 = OpVectorShuffle %v4float %486 %485 4 5 6 3
               OpStore %r7 %487
        %488 = OpLoad %v4float %r4
        %489 = OpVectorShuffle %v2float %488 %488 0 1
        %490 = OpLoad %v4float %r4
        %491 = OpVectorShuffle %v2float %490 %490 0 1
        %492 = OpFMul %v2float %489 %491
        %493 = OpLoad %v4float %r4
        %494 = OpVectorShuffle %v4float %493 %492 4 5 2 3
               OpStore %r4 %494
        %495 = OpLoad %v4float %r3
        %496 = OpCompositeExtract %float %495 3
        %497 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
        %498 = OpAccessChain %_ptr_Uniform_float %497 %uint_1
        %499 = OpLoad %float %498
        %501 = OpBitcast %float %uint_3287941120
        %502 = OpExtInst %float %1 Fma %496 %499 %501
        %503 = OpLoad %v4float %r2
        %504 = OpCompositeInsert %v4float %502 %503 3
               OpStore %r2 %504
        %505 = OpLoad %v4float %r2
        %506 = OpCompositeExtract %float %505 3
        %507 = OpBitcast %float %uint_0
        %508 = OpExtInst %float %1 NMax %506 %507
        %509 = OpLoad %v4float %r2
        %510 = OpCompositeInsert %v4float %508 %509 3
               OpStore %r2 %510
        %511 = OpLoad %v4float %r3
        %512 = OpCompositeExtract %float %511 3
        %513 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
        %514 = OpAccessChain %_ptr_Uniform_float %513 %uint_1
        %515 = OpLoad %float %514
        %516 = OpLoad %v4float %r2
        %517 = OpCompositeExtract %float %516 3
        %518 = OpFNegate %float %517
        %519 = OpExtInst %float %1 Fma %512 %515 %518
        %520 = OpLoad %v4float %r3
        %521 = OpCompositeInsert %v4float %519 %520 3
               OpStore %r3 %521
        %522 = OpLoad %v4float %r2
        %523 = OpCompositeExtract %float %522 3
        %525 = OpBitcast %float %uint_1141604352
        %526 = OpFMul %float %523 %525
        %527 = OpLoad %v4float %r2
        %528 = OpCompositeInsert %v4float %526 %527 3
               OpStore %r2 %528
        %529 = OpLoad %v4float %r3
        %530 = OpCompositeExtract %float %529 3
        %532 = OpBitcast %float %uint_1077936128
        %533 = OpLoad %v4float %r2
        %534 = OpCompositeExtract %float %533 3
        %535 = OpExtInst %float %1 Fma %530 %532 %534
        %536 = OpLoad %v4float %r2
        %537 = OpCompositeInsert %v4float %535 %536 3
               OpStore %r2 %537
        %538 = OpLoad %v4float %r5
        %539 = OpVectorShuffle %v3float %538 %538 0 1 2
        %541 = OpAccessChain %_ptr_Uniform_v4float %cb1 %int_0 %int_14
        %542 = OpAccessChain %_ptr_Uniform_float %541 %uint_0
        %543 = OpLoad %float %542
        %544 = OpAccessChain %_ptr_Uniform_float %541 %uint_1
        %545 = OpLoad %float %544
        %546 = OpAccessChain %_ptr_Uniform_float %541 %uint_2
        %547 = OpLoad %float %546
        %548 = OpCompositeConstruct %v3float %543 %545 %547
        %549 = OpDot %float %539 %548
        %550 = OpLoad %v4float %r3
        %551 = OpCompositeInsert %v4float %549 %550 3
               OpStore %r3 %551
        %552 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
        %553 = OpLoad %v4float %552
        %554 = OpVectorShuffle %v3float %553 %553 0 1 2
        %555 = OpAccessChain %_ptr_Uniform_v4float %cb1 %int_0 %int_15
        %556 = OpAccessChain %_ptr_Uniform_float %555 %uint_0
        %557 = OpLoad %float %556
        %558 = OpAccessChain %_ptr_Uniform_float %555 %uint_1
        %559 = OpLoad %float %558
        %560 = OpAccessChain %_ptr_Uniform_float %555 %uint_2
        %561 = OpLoad %float %560
        %562 = OpCompositeConstruct %v3float %557 %559 %561
        %563 = OpFNegate %v3float %562
        %564 = OpFAdd %v3float %554 %563
        %566 = OpLoad %v4float %r8
        %567 = OpVectorShuffle %v4float %566 %564 4 5 6 3
               OpStore %r8 %567
        %568 = OpLoad %v4float %r8
        %569 = OpVectorShuffle %v3float %568 %568 1 1 1
        %570 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_1
        %571 = OpAccessChain %_ptr_Uniform_float %570 %uint_0
        %572 = OpLoad %float %571
        %573 = OpAccessChain %_ptr_Uniform_float %570 %uint_1
        %574 = OpLoad %float %573
        %575 = OpAccessChain %_ptr_Uniform_float %570 %uint_2
        %576 = OpLoad %float %575
        %577 = OpCompositeConstruct %v3float %572 %574 %576
        %578 = OpFMul %v3float %569 %577
        %580 = OpLoad %v4float %r9
        %581 = OpVectorShuffle %v4float %580 %578 4 5 6 3
               OpStore %r9 %581
        %582 = OpLoad %v4float %r8
        %583 = OpVectorShuffle %v3float %582 %582 0 0 0
        %584 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_0
        %585 = OpAccessChain %_ptr_Uniform_float %584 %uint_0
        %586 = OpLoad %float %585
        %587 = OpAccessChain %_ptr_Uniform_float %584 %uint_1
        %588 = OpLoad %float %587
        %589 = OpAccessChain %_ptr_Uniform_float %584 %uint_2
        %590 = OpLoad %float %589
        %591 = OpCompositeConstruct %v3float %586 %588 %590
        %592 = OpLoad %v4float %r9
        %593 = OpVectorShuffle %v3float %592 %592 0 1 2
        %594 = OpExtInst %v3float %1 Fma %583 %591 %593
        %595 = OpLoad %v4float %r9
        %596 = OpVectorShuffle %v4float %595 %594 4 5 6 3
               OpStore %r9 %596
        %597 = OpLoad %v4float %r8
        %598 = OpVectorShuffle %v3float %597 %597 2 2 2
        %599 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_2
        %600 = OpAccessChain %_ptr_Uniform_float %599 %uint_0
        %601 = OpLoad %float %600
        %602 = OpAccessChain %_ptr_Uniform_float %599 %uint_1
        %603 = OpLoad %float %602
        %604 = OpAccessChain %_ptr_Uniform_float %599 %uint_2
        %605 = OpLoad %float %604
        %606 = OpCompositeConstruct %v3float %601 %603 %605
        %607 = OpLoad %v4float %r9
        %608 = OpVectorShuffle %v3float %607 %607 0 1 2
        %609 = OpExtInst %v3float %1 Fma %598 %606 %608
        %610 = OpLoad %v4float %r9
        %611 = OpVectorShuffle %v4float %610 %609 4 5 6 3
               OpStore %r9 %611
        %612 = OpLoad %v4float %r9
        %613 = OpVectorShuffle %v3float %612 %612 0 1 2
        %614 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_4
        %615 = OpAccessChain %_ptr_Uniform_float %614 %uint_0
        %616 = OpLoad %float %615
        %617 = OpAccessChain %_ptr_Uniform_float %614 %uint_1
        %618 = OpLoad %float %617
        %619 = OpAccessChain %_ptr_Uniform_float %614 %uint_2
        %620 = OpLoad %float %619
        %621 = OpCompositeConstruct %v3float %616 %618 %620
        %623 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_8
        %624 = OpAccessChain %_ptr_Uniform_float %623 %uint_0
        %625 = OpLoad %float %624
        %626 = OpAccessChain %_ptr_Uniform_float %623 %uint_1
        %627 = OpLoad %float %626
        %628 = OpAccessChain %_ptr_Uniform_float %623 %uint_2
        %629 = OpLoad %float %628
        %630 = OpCompositeConstruct %v3float %625 %627 %629
        %631 = OpExtInst %v3float %1 Fma %613 %621 %630
        %633 = OpLoad %v4float %r10
        %634 = OpVectorShuffle %v4float %633 %631 4 5 6 3
               OpStore %r10 %634
        %635 = OpLoad %v4float %r10
        %636 = OpVectorShuffle %v3float %635 %635 0 1 2
        %637 = OpAccessChain %_ptr_Private_v4float %x0 %int_0
        %638 = OpLoad %v4float %637
        %639 = OpVectorShuffle %v4float %638 %636 4 5 6 3
               OpStore %637 %639
        %640 = OpLoad %v4float %r9
        %641 = OpVectorShuffle %v3float %640 %640 0 1 2
        %642 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_5
        %643 = OpAccessChain %_ptr_Uniform_float %642 %uint_0
        %644 = OpLoad %float %643
        %645 = OpAccessChain %_ptr_Uniform_float %642 %uint_1
        %646 = OpLoad %float %645
        %647 = OpAccessChain %_ptr_Uniform_float %642 %uint_2
        %648 = OpLoad %float %647
        %649 = OpCompositeConstruct %v3float %644 %646 %648
        %651 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_9
        %652 = OpAccessChain %_ptr_Uniform_float %651 %uint_0
        %653 = OpLoad %float %652
        %654 = OpAccessChain %_ptr_Uniform_float %651 %uint_1
        %655 = OpLoad %float %654
        %656 = OpAccessChain %_ptr_Uniform_float %651 %uint_2
        %657 = OpLoad %float %656
        %658 = OpCompositeConstruct %v3float %653 %655 %657
        %659 = OpExtInst %v3float %1 Fma %641 %649 %658
        %661 = OpLoad %v4float %r11
        %662 = OpVectorShuffle %v4float %661 %659 4 5 6 3
               OpStore %r11 %662
        %663 = OpLoad %v4float %r11
        %664 = OpVectorShuffle %v3float %663 %663 0 1 2
        %665 = OpAccessChain %_ptr_Private_v4float %x0 %int_1
        %666 = OpLoad %v4float %665
        %667 = OpVectorShuffle %v4float %666 %664 4 5 6 3
               OpStore %665 %667
        %668 = OpLoad %v4float %r9
        %669 = OpVectorShuffle %v3float %668 %668 0 1 2
        %670 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_6
        %671 = OpAccessChain %_ptr_Uniform_float %670 %uint_0
        %672 = OpLoad %float %671
        %673 = OpAccessChain %_ptr_Uniform_float %670 %uint_1
        %674 = OpLoad %float %673
        %675 = OpAccessChain %_ptr_Uniform_float %670 %uint_2
        %676 = OpLoad %float %675
        %677 = OpCompositeConstruct %v3float %672 %674 %676
        %679 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_10
        %680 = OpAccessChain %_ptr_Uniform_float %679 %uint_0
        %681 = OpLoad %float %680
        %682 = OpAccessChain %_ptr_Uniform_float %679 %uint_1
        %683 = OpLoad %float %682
        %684 = OpAccessChain %_ptr_Uniform_float %679 %uint_2
        %685 = OpLoad %float %684
        %686 = OpCompositeConstruct %v3float %681 %683 %685
        %687 = OpExtInst %v3float %1 Fma %669 %677 %686
        %689 = OpLoad %v4float %r12
        %690 = OpVectorShuffle %v4float %689 %687 4 5 6 3
               OpStore %r12 %690
        %691 = OpLoad %v4float %r12
        %692 = OpVectorShuffle %v3float %691 %691 0 1 2
        %693 = OpAccessChain %_ptr_Private_v4float %x0 %int_2
        %694 = OpLoad %v4float %693
        %695 = OpVectorShuffle %v4float %694 %692 4 5 6 3
               OpStore %693 %695
        %696 = OpLoad %v4float %r9
        %697 = OpVectorShuffle %v3float %696 %696 0 1 2
        %699 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_7
        %700 = OpAccessChain %_ptr_Uniform_float %699 %uint_0
        %701 = OpLoad %float %700
        %702 = OpAccessChain %_ptr_Uniform_float %699 %uint_1
        %703 = OpLoad %float %702
        %704 = OpAccessChain %_ptr_Uniform_float %699 %uint_2
        %705 = OpLoad %float %704
        %706 = OpCompositeConstruct %v3float %701 %703 %705
        %708 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_11
        %709 = OpAccessChain %_ptr_Uniform_float %708 %uint_0
        %710 = OpLoad %float %709
        %711 = OpAccessChain %_ptr_Uniform_float %708 %uint_1
        %712 = OpLoad %float %711
        %713 = OpAccessChain %_ptr_Uniform_float %708 %uint_2
        %714 = OpLoad %float %713
        %715 = OpCompositeConstruct %v3float %710 %712 %714
        %716 = OpExtInst %v3float %1 Fma %697 %706 %715
        %717 = OpLoad %v4float %r9
        %718 = OpVectorShuffle %v4float %717 %716 4 5 6 3
               OpStore %r9 %718
        %719 = OpLoad %v4float %r9
        %720 = OpVectorShuffle %v3float %719 %719 0 1 2
        %721 = OpAccessChain %_ptr_Private_v4float %x0 %int_3
        %722 = OpLoad %v4float %721
        %723 = OpVectorShuffle %v4float %722 %720 4 5 6 3
               OpStore %721 %723
        %724 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
        %725 = OpAccessChain %_ptr_Uniform_float %724 %uint_2
        %726 = OpLoad %float %725
        %727 = OpAccessChain %_ptr_Uniform_float %724 %uint_3
        %728 = OpLoad %float %727
        %729 = OpCompositeConstruct %v2float %726 %728
        %733 = OpBitcast %v2float %732
        %734 = OpFMul %v2float %729 %733
        %736 = OpLoad %v4float %r13
        %737 = OpVectorShuffle %v4float %736 %734 0 4 2 5
               OpStore %r13 %737
        %738 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
        %739 = OpAccessChain %_ptr_Uniform_float %738 %uint_2
        %740 = OpLoad %float %739
        %741 = OpFNegate %float %740
        %743 = OpBitcast %float %uint_1069547520
        %744 = OpBitcast %float %uint_1065353216
        %745 = OpExtInst %float %1 Fma %741 %743 %744
        %746 = OpLoad %v4float %r4
        %747 = OpCompositeInsert %v4float %745 %746 2
               OpStore %r4 %747
        %748 = OpLoad %v4float %r4
        %749 = OpCompositeExtract %float %748 2
        %751 = OpBitcast %float %uint_1056964608
        %752 = OpFMul %float %749 %751
        %753 = OpLoad %v4float %r4
        %754 = OpCompositeInsert %v4float %752 %753 2
               OpStore %r4 %754
        %755 = OpLoad %v4float %r12
        %756 = OpCompositeExtract %float %755 1
        %757 = OpExtInst %float %1 FAbs %756
        %758 = OpLoad %v4float %r12
        %759 = OpCompositeExtract %float %758 0
        %760 = OpExtInst %float %1 FAbs %759
        %761 = OpExtInst %float %1 NMax %757 %760
        %762 = OpLoad %v4float %r4
        %763 = OpCompositeInsert %v4float %761 %762 3
               OpStore %r4 %763
        %764 = OpLoad %v4float %r4
        %765 = OpCompositeExtract %float %764 3
        %766 = OpLoad %v4float %r4
        %767 = OpCompositeExtract %float %766 2
        %768 = OpFOrdLessThan %bool %765 %767
        %769 = OpSelect %uint %768 %uint_4294967295 %uint_0
        %770 = OpBitcast %float %769
        %771 = OpLoad %v4float %r4
        %772 = OpCompositeInsert %v4float %770 %771 3
               OpStore %r4 %772
        %773 = OpLoad %v4float %r4
        %774 = OpCompositeExtract %float %773 3
        %775 = OpBitcast %uint %774
        %776 = OpBitcast %float %uint_2
        %777 = OpBitcast %float %uint_3
        %778 = OpINotEqual %bool %775 %uint_0
        %779 = OpSelect %float %778 %776 %777
        %780 = OpLoad %v4float %r4
        %781 = OpCompositeInsert %v4float %779 %780 3
               OpStore %r4 %781
        %782 = OpLoad %v4float %r11
        %783 = OpCompositeExtract %float %782 1
        %784 = OpExtInst %float %1 FAbs %783
        %785 = OpLoad %v4float %r11
        %786 = OpCompositeExtract %float %785 0
        %787 = OpExtInst %float %1 FAbs %786
        %788 = OpExtInst %float %1 NMax %784 %787
        %789 = OpLoad %v4float %r5
        %790 = OpCompositeInsert %v4float %788 %789 3
               OpStore %r5 %790
        %791 = OpLoad %v4float %r5
        %792 = OpCompositeExtract %float %791 3
        %793 = OpLoad %v4float %r4
        %794 = OpCompositeExtract %float %793 2
        %795 = OpFOrdLessThan %bool %792 %794
        %796 = OpSelect %uint %795 %uint_4294967295 %uint_0
        %797 = OpBitcast %float %796
        %798 = OpLoad %v4float %r5
        %799 = OpCompositeInsert %v4float %797 %798 3
               OpStore %r5 %799
        %800 = OpLoad %v4float %r5
        %801 = OpCompositeExtract %float %800 3
        %802 = OpBitcast %uint %801
        %803 = OpBitcast %float %uint_1
        %804 = OpLoad %v4float %r4
        %805 = OpCompositeExtract %float %804 3
        %806 = OpINotEqual %bool %802 %uint_0
        %807 = OpSelect %float %806 %803 %805
        %808 = OpLoad %v4float %r4
        %809 = OpCompositeInsert %v4float %807 %808 3
               OpStore %r4 %809
        %810 = OpLoad %v4float %r10
        %811 = OpCompositeExtract %float %810 1
        %812 = OpExtInst %float %1 FAbs %811
        %813 = OpLoad %v4float %r10
        %814 = OpCompositeExtract %float %813 0
        %815 = OpExtInst %float %1 FAbs %814
        %816 = OpExtInst %float %1 NMax %812 %815
        %817 = OpLoad %v4float %r5
        %818 = OpCompositeInsert %v4float %816 %817 3
               OpStore %r5 %818
        %819 = OpLoad %v4float %r5
        %820 = OpCompositeExtract %float %819 3
        %821 = OpLoad %v4float %r4
        %822 = OpCompositeExtract %float %821 2
        %823 = OpFOrdLessThan %bool %820 %822
        %824 = OpSelect %uint %823 %uint_4294967295 %uint_0
        %825 = OpBitcast %float %824
        %826 = OpLoad %v4float %r4
        %827 = OpCompositeInsert %v4float %825 %826 2
               OpStore %r4 %827
        %828 = OpLoad %v4float %r4
        %829 = OpCompositeExtract %float %828 2
        %830 = OpBitcast %uint %829
        %831 = OpBitcast %float %uint_0
        %832 = OpLoad %v4float %r4
        %833 = OpCompositeExtract %float %832 3
        %834 = OpINotEqual %bool %830 %uint_0
        %835 = OpSelect %float %834 %831 %833
        %836 = OpLoad %v4float %r4
        %837 = OpCompositeInsert %v4float %835 %836 2
               OpStore %r4 %837
        %838 = OpLoad %v4float %r4
        %839 = OpCompositeExtract %float %838 2
        %840 = OpBitcast %int %839
        %841 = OpAccessChain %_ptr_Private_v4float %x0 %840
        %842 = OpLoad %v4float %841
        %843 = OpVectorShuffle %v3float %842 %842 0 1 2
        %844 = OpLoad %v4float %r10
        %845 = OpVectorShuffle %v4float %844 %843 4 5 6 3
               OpStore %r10 %845
        %846 = OpLoad %v4float %r4
        %847 = OpCompositeExtract %float %846 2
        %848 = OpBitcast %int %847
        %849 = OpConvertSToF %float %848
        %850 = OpLoad %v4float %r4
        %851 = OpCompositeInsert %v4float %849 %850 2
               OpStore %r4 %851
        %852 = OpLoad %v4float %r4
        %853 = OpCompositeExtract %float %852 2
        %854 = OpBitcast %float %uint_1056964608
        %855 = OpFAdd %float %853 %854
        %856 = OpLoad %v4float %r4
        %857 = OpCompositeInsert %v4float %855 %856 3
               OpStore %r4 %857
        %858 = OpLoad %v4float %r4
        %859 = OpCompositeExtract %float %858 3
        %861 = OpBitcast %float %uint_1048576000
        %862 = OpFMul %float %859 %861
        %863 = OpLoad %v4float %r4
        %864 = OpCompositeInsert %v4float %862 %863 3
               OpStore %r4 %864
        %867 = OpBitcast %v4float %866
        %868 = OpLoad %v4float %r4
        %869 = OpVectorShuffle %v4float %868 %868 2 2 2 2
        %871 = OpFOrdEqual %v4bool %867 %869
        %874 = OpSelect %v4uint %871 %873 %872
        %875 = OpBitcast %v4float %874
               OpStore %r11 %875
        %876 = OpLoad %v4float %r11
        %877 = OpBitcast %v4uint %876
        %879 = OpBitwiseAnd %v4uint %877 %878
        %880 = OpBitcast %v4float %879
               OpStore %r11 %880
        %881 = OpLoad %v4float %r11
        %882 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_12
        %883 = OpAccessChain %_ptr_Uniform_float %882 %uint_0
        %884 = OpLoad %float %883
        %885 = OpAccessChain %_ptr_Uniform_float %882 %uint_1
        %886 = OpLoad %float %885
        %887 = OpAccessChain %_ptr_Uniform_float %882 %uint_2
        %888 = OpLoad %float %887
        %889 = OpAccessChain %_ptr_Uniform_float %882 %uint_3
        %890 = OpLoad %float %889
        %891 = OpCompositeConstruct %v4float %884 %886 %888 %890
        %892 = OpDot %float %881 %891
        %893 = OpLoad %v4float %r4
        %894 = OpCompositeInsert %v4float %892 %893 2
               OpStore %r4 %894
        %895 = OpLoad %v4float %r11
        %897 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_13
        %898 = OpAccessChain %_ptr_Uniform_float %897 %uint_0
        %899 = OpLoad %float %898
        %900 = OpAccessChain %_ptr_Uniform_float %897 %uint_1
        %901 = OpLoad %float %900
        %902 = OpAccessChain %_ptr_Uniform_float %897 %uint_2
        %903 = OpLoad %float %902
        %904 = OpAccessChain %_ptr_Uniform_float %897 %uint_3
        %905 = OpLoad %float %904
        %906 = OpCompositeConstruct %v4float %899 %901 %903 %905
        %907 = OpDot %float %895 %906
        %908 = OpLoad %v4float %r5
        %909 = OpCompositeInsert %v4float %907 %908 3
               OpStore %r5 %909
        %910 = OpLoad %v4float %r10
        %911 = OpCompositeExtract %float %910 0
        %912 = OpBitcast %float %uint_1056964608
        %913 = OpFAdd %float %911 %912
        %914 = OpLoad %v4float %r11
        %915 = OpCompositeInsert %v4float %913 %914 0
               OpStore %r11 %915
        %916 = OpLoad %v4float %r10
        %917 = OpCompositeExtract %float %916 1
        %918 = OpBitcast %float %uint_1048576000
        %919 = OpLoad %v4float %r4
        %920 = OpCompositeExtract %float %919 3
        %921 = OpExtInst %float %1 Fma %917 %918 %920
        %922 = OpLoad %v4float %r11
        %923 = OpCompositeInsert %v4float %921 %922 1
               OpStore %r11 %923
        %924 = OpLoad %v4float %r4
        %925 = OpCompositeExtract %float %924 2
        %926 = OpBitcast %float %uint_0
        %927 = OpFOrdEqual %bool %925 %926
        %928 = OpSelect %uint %927 %uint_0 %uint_4294967295
        %929 = OpBitcast %float %928
        %930 = OpLoad %v4float %r4
        %931 = OpCompositeInsert %v4float %929 %930 3
               OpStore %r4 %931
        %932 = OpLoad %v4float %r4
        %933 = OpCompositeExtract %float %932 2
        %934 = OpFNegate %float %933
        %935 = OpLoad %v4float %r10
        %936 = OpCompositeExtract %float %935 2
        %937 = OpFAdd %float %934 %936
        %938 = OpLoad %v4float %r4
        %939 = OpCompositeInsert %v4float %937 %938 2
               OpStore %r4 %939
        %940 = OpLoad %v4float %r11
        %941 = OpVectorShuffle %v3float %940 %940 0 1 1
        %942 = OpDPdx %v3float %941
        %943 = OpLoad %v4float %r12
        %944 = OpVectorShuffle %v4float %943 %942 4 5 2 6
               OpStore %r12 %944
        %945 = OpLoad %v4float %r4
        %946 = OpCompositeExtract %float %945 2
        %947 = OpDPdx %float %946
        %948 = OpLoad %v4float %r12
        %949 = OpCompositeInsert %v4float %947 %948 2
               OpStore %r12 %949
        %950 = OpLoad %v4float %r11
        %951 = OpVectorShuffle %v3float %950 %950 1 0 1
        %952 = OpDPdy %v3float %951
        %954 = OpLoad %v4float %r14
        %955 = OpVectorShuffle %v4float %954 %952 4 5 6 3
               OpStore %r14 %955
        %956 = OpLoad %v4float %r4
        %957 = OpCompositeExtract %float %956 2
        %958 = OpDPdy %float %957
        %959 = OpLoad %v4float %r14
        %960 = OpCompositeInsert %v4float %958 %959 3
               OpStore %r14 %960
        %961 = OpLoad %v4float %r12
        %962 = OpVectorShuffle %v2float %961 %961 1 3
        %963 = OpLoad %v4float %r14
        %964 = OpVectorShuffle %v2float %963 %963 1 3
        %965 = OpFMul %v2float %962 %964
        %966 = OpLoad %v4float %r9
        %967 = OpVectorShuffle %v4float %966 %965 0 1 4 5
               OpStore %r9 %967
        %968 = OpLoad %v4float %r12
        %969 = OpVectorShuffle %v2float %968 %968 0 2
        %970 = OpLoad %v4float %r14
        %971 = OpVectorShuffle %v2float %970 %970 0 2
        %972 = OpLoad %v4float %r9
        %973 = OpVectorShuffle %v2float %972 %972 2 3
        %974 = OpFNegate %v2float %973
        %975 = OpExtInst %v2float %1 Fma %969 %971 %974
        %977 = OpLoad %v4float %r15
        %978 = OpVectorShuffle %v4float %977 %975 4 5 2 3
               OpStore %r15 %978
        %979 = OpBitcast %float %uint_1065353216
        %980 = OpLoad %v4float %r15
        %981 = OpCompositeExtract %float %980 0
        %982 = OpFDiv %float %979 %981
        %983 = OpLoad %v4float %r6
        %984 = OpCompositeInsert %v4float %982 %983 3
               OpStore %r6 %984
        %985 = OpLoad %v4float %r12
        %986 = OpCompositeExtract %float %985 2
        %987 = OpLoad %v4float %r14
        %988 = OpCompositeExtract %float %987 1
        %989 = OpFMul %float %986 %988
        %990 = OpLoad %v4float %r7
        %991 = OpCompositeInsert %v4float %989 %990 3
               OpStore %r7 %991
        %992 = OpLoad %v4float %r12
        %993 = OpCompositeExtract %float %992 0
        %994 = OpLoad %v4float %r14
        %995 = OpCompositeExtract %float %994 3
        %996 = OpLoad %v4float %r7
        %997 = OpCompositeExtract %float %996 3
        %998 = OpFNegate %float %997
        %999 = OpExtInst %float %1 Fma %993 %995 %998
       %1000 = OpLoad %v4float %r15
       %1001 = OpCompositeInsert %v4float %999 %1000 2
               OpStore %r15 %1001
       %1002 = OpLoad %v4float %r6
       %1003 = OpVectorShuffle %v2float %1002 %1002 3 3
       %1004 = OpLoad %v4float %r15
       %1005 = OpVectorShuffle %v2float %1004 %1004 1 2
       %1006 = OpFMul %v2float %1003 %1005
       %1007 = OpLoad %v4float %r9
       %1008 = OpVectorShuffle %v4float %1007 %1006 0 1 4 5
               OpStore %r9 %1008
       %1009 = OpLoad %v4float %r9
       %1010 = OpVectorShuffle %v2float %1009 %1009 2 3
       %1012 = OpBitcast %v2float %1011
       %1013 = OpExtInst %v2float %1 NMax %1010 %1012
       %1014 = OpLoad %v4float %r9
       %1015 = OpVectorShuffle %v4float %1014 %1013 0 1 4 5
               OpStore %r9 %1015
       %1016 = OpLoad %v4float %r9
       %1017 = OpVectorShuffle %v2float %1016 %1016 2 3
       %1019 = OpBitcast %v2float %1018
       %1020 = OpExtInst %v2float %1 NMin %1017 %1019
       %1021 = OpLoad %v4float %r9
       %1022 = OpVectorShuffle %v4float %1021 %1020 0 1 4 5
               OpStore %r9 %1022
       %1023 = OpLoad %v4float %r5
       %1024 = OpCompositeExtract %float %1023 3
       %1025 = OpFNegate %float %1024
       %1026 = OpLoad %v4float %r9
       %1027 = OpCompositeExtract %float %1026 2
       %1028 = OpLoad %v4float %r4
       %1029 = OpCompositeExtract %float %1028 2
       %1030 = OpExtInst %float %1 Fma %1025 %1027 %1029
       %1031 = OpLoad %v4float %r4
       %1032 = OpCompositeInsert %v4float %1030 %1031 2
               OpStore %r4 %1032
       %1033 = OpLoad %v4float %r5
       %1034 = OpCompositeExtract %float %1033 3
       %1035 = OpFNegate %float %1034
       %1036 = OpLoad %v4float %r9
       %1037 = OpCompositeExtract %float %1036 3
       %1038 = OpLoad %v4float %r4
       %1039 = OpCompositeExtract %float %1038 2
       %1040 = OpExtInst %float %1 Fma %1035 %1037 %1039
       %1041 = OpLoad %v4float %r4
       %1042 = OpCompositeInsert %v4float %1040 %1041 2
               OpStore %r4 %1042
       %1043 = OpLoad %v4float %r4
       %1044 = OpCompositeExtract %float %1043 3
       %1045 = OpBitcast %uint %1044
       %1046 = OpLoad %v4float %r4
       %1047 = OpCompositeExtract %float %1046 2
       %1048 = OpLoad %v4float %r10
       %1049 = OpCompositeExtract %float %1048 2
       %1050 = OpINotEqual %bool %1045 %uint_0
       %1051 = OpSelect %float %1050 %1047 %1049
       %1052 = OpLoad %v4float %r13
       %1053 = OpCompositeInsert %v4float %1051 %1052 2
               OpStore %r13 %1053
       %1054 = OpBitcast %float %uint_0
       %1055 = OpLoad %v4float %r11
       %1056 = OpCompositeInsert %v4float %1054 %1055 2
               OpStore %r11 %1056
       %1057 = OpLoad %v4float %r11
       %1058 = OpVectorShuffle %v3float %1057 %1057 0 1 2
       %1059 = OpLoad %v4float %r13
       %1060 = OpVectorShuffle %v3float %1059 %1059 1 3 2
       %1061 = OpFAdd %v3float %1058 %1060
       %1062 = OpLoad %v4float %r10
       %1063 = OpVectorShuffle %v4float %1062 %1061 4 5 6 3
               OpStore %r10 %1063
       %1064 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1065 = OpAccessChain %_ptr_Uniform_float %1064 %uint_2
       %1066 = OpLoad %float %1065
       %1067 = OpAccessChain %_ptr_Uniform_float %1064 %uint_3
       %1068 = OpLoad %float %1067
       %1069 = OpCompositeConstruct %v2float %1066 %1068
       %1073 = OpBitcast %v2float %1072
       %1074 = OpFMul %v2float %1069 %1073
       %1075 = OpLoad %v4float %r13
       %1076 = OpVectorShuffle %v4float %1075 %1074 4 5 2 3
               OpStore %r13 %1076
       %1077 = OpLoad %v4float %r11
       %1078 = OpVectorShuffle %v3float %1077 %1077 0 1 2
       %1079 = OpLoad %v4float %r13
       %1080 = OpVectorShuffle %v3float %1079 %1079 0 1 2
       %1081 = OpFAdd %v3float %1078 %1080
       %1082 = OpLoad %v4float %r12
       %1083 = OpVectorShuffle %v4float %1082 %1081 4 5 6 3
               OpStore %r12 %1083
       %1084 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1085 = OpAccessChain %_ptr_Uniform_float %1084 %uint_2
       %1086 = OpLoad %float %1085
       %1087 = OpAccessChain %_ptr_Uniform_float %1084 %uint_3
       %1088 = OpLoad %float %1087
       %1089 = OpCompositeConstruct %v2float %1086 %1088
       %1093 = OpBitcast %v2float %1092
       %1094 = OpFMul %v2float %1089 %1093
       %1095 = OpLoad %v4float %r13
       %1096 = OpVectorShuffle %v4float %1095 %1094 4 5 2 3
               OpStore %r13 %1096
       %1097 = OpLoad %v4float %r11
       %1098 = OpVectorShuffle %v3float %1097 %1097 0 1 2
       %1099 = OpLoad %v4float %r13
       %1100 = OpVectorShuffle %v3float %1099 %1099 0 1 2
       %1101 = OpFAdd %v3float %1098 %1100
       %1102 = OpLoad %v4float %r14
       %1103 = OpVectorShuffle %v4float %1102 %1101 4 5 6 3
               OpStore %r14 %1103
       %1104 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1105 = OpAccessChain %_ptr_Uniform_float %1104 %uint_2
       %1106 = OpLoad %float %1105
       %1107 = OpAccessChain %_ptr_Uniform_float %1104 %uint_3
       %1108 = OpLoad %float %1107
       %1109 = OpCompositeConstruct %v2float %1106 %1108
       %1113 = OpBitcast %v2float %1112
       %1114 = OpFMul %v2float %1109 %1113
       %1115 = OpLoad %v4float %r13
       %1116 = OpVectorShuffle %v4float %1115 %1114 4 5 2 3
               OpStore %r13 %1116
       %1117 = OpLoad %v4float %r11
       %1118 = OpVectorShuffle %v3float %1117 %1117 0 1 2
       %1119 = OpLoad %v4float %r13
       %1120 = OpVectorShuffle %v3float %1119 %1119 0 1 2
       %1121 = OpFAdd %v3float %1118 %1120
       %1122 = OpLoad %v4float %r15
       %1123 = OpVectorShuffle %v4float %1122 %1121 4 5 6 3
               OpStore %r15 %1123
       %1124 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1125 = OpAccessChain %_ptr_Uniform_float %1124 %uint_2
       %1126 = OpLoad %float %1125
       %1127 = OpAccessChain %_ptr_Uniform_float %1124 %uint_3
       %1128 = OpLoad %float %1127
       %1129 = OpCompositeConstruct %v2float %1126 %1128
       %1133 = OpBitcast %v2float %1132
       %1134 = OpFMul %v2float %1129 %1133
       %1135 = OpLoad %v4float %r13
       %1136 = OpVectorShuffle %v4float %1135 %1134 4 5 2 3
               OpStore %r13 %1136
       %1137 = OpLoad %v4float %r11
       %1138 = OpVectorShuffle %v3float %1137 %1137 0 1 2
       %1139 = OpLoad %v4float %r13
       %1140 = OpVectorShuffle %v3float %1139 %1139 0 1 2
       %1141 = OpFAdd %v3float %1138 %1140
       %1143 = OpLoad %v4float %r16
       %1144 = OpVectorShuffle %v4float %1143 %1141 4 5 6 3
               OpStore %r16 %1144
       %1145 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1146 = OpAccessChain %_ptr_Uniform_float %1145 %uint_2
       %1147 = OpLoad %float %1146
       %1148 = OpAccessChain %_ptr_Uniform_float %1145 %uint_3
       %1149 = OpLoad %float %1148
       %1150 = OpCompositeConstruct %v2float %1147 %1149
       %1154 = OpBitcast %v2float %1153
       %1155 = OpFMul %v2float %1150 %1154
       %1156 = OpLoad %v4float %r13
       %1157 = OpVectorShuffle %v4float %1156 %1155 4 5 2 3
               OpStore %r13 %1157
       %1158 = OpLoad %v4float %r11
       %1159 = OpVectorShuffle %v3float %1158 %1158 0 1 2
       %1160 = OpLoad %v4float %r13
       %1161 = OpVectorShuffle %v3float %1160 %1160 0 1 2
       %1162 = OpFAdd %v3float %1159 %1161
       %1164 = OpLoad %v4float %r17
       %1165 = OpVectorShuffle %v4float %1164 %1162 4 5 6 3
               OpStore %r17 %1165
       %1166 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1167 = OpAccessChain %_ptr_Uniform_float %1166 %uint_2
       %1168 = OpLoad %float %1167
       %1169 = OpAccessChain %_ptr_Uniform_float %1166 %uint_3
       %1170 = OpLoad %float %1169
       %1171 = OpCompositeConstruct %v2float %1168 %1170
       %1175 = OpBitcast %v2float %1174
       %1176 = OpFMul %v2float %1171 %1175
       %1177 = OpLoad %v4float %r13
       %1178 = OpVectorShuffle %v4float %1177 %1176 4 5 2 3
               OpStore %r13 %1178
       %1179 = OpLoad %v4float %r11
       %1180 = OpVectorShuffle %v3float %1179 %1179 0 1 2
       %1181 = OpLoad %v4float %r13
       %1182 = OpVectorShuffle %v3float %1181 %1181 0 1 2
       %1183 = OpFAdd %v3float %1180 %1182
       %1185 = OpLoad %v4float %r18
       %1186 = OpVectorShuffle %v4float %1185 %1183 4 5 6 3
               OpStore %r18 %1186
       %1187 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1188 = OpAccessChain %_ptr_Uniform_float %1187 %uint_2
       %1189 = OpLoad %float %1188
       %1190 = OpAccessChain %_ptr_Uniform_float %1187 %uint_3
       %1191 = OpLoad %float %1190
       %1192 = OpCompositeConstruct %v2float %1189 %1191
       %1196 = OpBitcast %v2float %1195
       %1197 = OpFMul %v2float %1192 %1196
       %1198 = OpLoad %v4float %r13
       %1199 = OpVectorShuffle %v4float %1198 %1197 4 5 2 3
               OpStore %r13 %1199
       %1200 = OpLoad %v4float %r11
       %1201 = OpVectorShuffle %v3float %1200 %1200 0 1 2
       %1202 = OpLoad %v4float %r13
       %1203 = OpVectorShuffle %v3float %1202 %1202 0 1 2
       %1204 = OpFAdd %v3float %1201 %1203
       %1206 = OpLoad %v4float %r19
       %1207 = OpVectorShuffle %v4float %1206 %1204 4 5 6 3
               OpStore %r19 %1207
       %1208 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1209 = OpAccessChain %_ptr_Uniform_float %1208 %uint_2
       %1210 = OpLoad %float %1209
       %1211 = OpAccessChain %_ptr_Uniform_float %1208 %uint_3
       %1212 = OpLoad %float %1211
       %1213 = OpCompositeConstruct %v2float %1210 %1212
       %1217 = OpBitcast %v2float %1216
       %1218 = OpFMul %v2float %1213 %1217
       %1219 = OpLoad %v4float %r13
       %1220 = OpVectorShuffle %v4float %1219 %1218 4 5 2 3
               OpStore %r13 %1220
       %1221 = OpLoad %v4float %r11
       %1222 = OpVectorShuffle %v3float %1221 %1221 0 1 2
       %1223 = OpLoad %v4float %r13
       %1224 = OpVectorShuffle %v3float %1223 %1223 0 1 2
       %1225 = OpFAdd %v3float %1222 %1224
       %1227 = OpLoad %v4float %r20
       %1228 = OpVectorShuffle %v4float %1227 %1225 4 5 6 3
               OpStore %r20 %1228
       %1229 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1230 = OpAccessChain %_ptr_Uniform_float %1229 %uint_2
       %1231 = OpLoad %float %1230
       %1232 = OpAccessChain %_ptr_Uniform_float %1229 %uint_3
       %1233 = OpLoad %float %1232
       %1234 = OpCompositeConstruct %v2float %1231 %1233
       %1238 = OpBitcast %v2float %1237
       %1239 = OpFMul %v2float %1234 %1238
       %1240 = OpLoad %v4float %r13
       %1241 = OpVectorShuffle %v4float %1240 %1239 4 5 2 3
               OpStore %r13 %1241
       %1242 = OpLoad %v4float %r11
       %1243 = OpVectorShuffle %v3float %1242 %1242 0 1 2
       %1244 = OpLoad %v4float %r13
       %1245 = OpVectorShuffle %v3float %1244 %1244 0 1 2
       %1246 = OpFAdd %v3float %1243 %1245
       %1248 = OpLoad %v4float %r21
       %1249 = OpVectorShuffle %v4float %1248 %1246 4 5 6 3
               OpStore %r21 %1249
       %1250 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1251 = OpAccessChain %_ptr_Uniform_float %1250 %uint_2
       %1252 = OpLoad %float %1251
       %1253 = OpAccessChain %_ptr_Uniform_float %1250 %uint_3
       %1254 = OpLoad %float %1253
       %1255 = OpCompositeConstruct %v2float %1252 %1254
       %1259 = OpBitcast %v2float %1258
       %1260 = OpFMul %v2float %1255 %1259
       %1261 = OpLoad %v4float %r13
       %1262 = OpVectorShuffle %v4float %1261 %1260 4 5 2 3
               OpStore %r13 %1262
       %1263 = OpLoad %v4float %r11
       %1264 = OpVectorShuffle %v3float %1263 %1263 0 1 2
       %1265 = OpLoad %v4float %r13
       %1266 = OpVectorShuffle %v3float %1265 %1265 0 1 2
       %1267 = OpFAdd %v3float %1264 %1266
       %1269 = OpLoad %v4float %r22
       %1270 = OpVectorShuffle %v4float %1269 %1267 4 5 6 3
               OpStore %r22 %1270
       %1271 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1272 = OpAccessChain %_ptr_Uniform_float %1271 %uint_2
       %1273 = OpLoad %float %1272
       %1274 = OpAccessChain %_ptr_Uniform_float %1271 %uint_3
       %1275 = OpLoad %float %1274
       %1276 = OpCompositeConstruct %v2float %1273 %1275
       %1280 = OpBitcast %v2float %1279
       %1281 = OpFMul %v2float %1276 %1280
       %1282 = OpLoad %v4float %r13
       %1283 = OpVectorShuffle %v4float %1282 %1281 4 5 2 3
               OpStore %r13 %1283
       %1284 = OpLoad %v4float %r11
       %1285 = OpVectorShuffle %v3float %1284 %1284 0 1 2
       %1286 = OpLoad %v4float %r13
       %1287 = OpVectorShuffle %v3float %1286 %1286 0 1 2
       %1288 = OpFAdd %v3float %1285 %1287
       %1290 = OpLoad %v4float %r23
       %1291 = OpVectorShuffle %v4float %1290 %1288 4 5 6 3
               OpStore %r23 %1291
       %1292 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1293 = OpAccessChain %_ptr_Uniform_float %1292 %uint_2
       %1294 = OpLoad %float %1293
       %1295 = OpAccessChain %_ptr_Uniform_float %1292 %uint_3
       %1296 = OpLoad %float %1295
       %1297 = OpCompositeConstruct %v2float %1294 %1296
       %1301 = OpBitcast %v2float %1300
       %1302 = OpFMul %v2float %1297 %1301
       %1303 = OpLoad %v4float %r13
       %1304 = OpVectorShuffle %v4float %1303 %1302 4 5 2 3
               OpStore %r13 %1304
       %1305 = OpLoad %v4float %r11
       %1306 = OpVectorShuffle %v3float %1305 %1305 0 1 2
       %1307 = OpLoad %v4float %r13
       %1308 = OpVectorShuffle %v3float %1307 %1307 0 1 2
       %1309 = OpFAdd %v3float %1306 %1308
       %1311 = OpLoad %v4float %r24
       %1312 = OpVectorShuffle %v4float %1311 %1309 4 5 6 3
               OpStore %r24 %1312
       %1313 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1314 = OpAccessChain %_ptr_Uniform_float %1313 %uint_2
       %1315 = OpLoad %float %1314
       %1316 = OpAccessChain %_ptr_Uniform_float %1313 %uint_3
       %1317 = OpLoad %float %1316
       %1318 = OpCompositeConstruct %v2float %1315 %1317
       %1322 = OpBitcast %v2float %1321
       %1323 = OpFMul %v2float %1318 %1322
       %1324 = OpLoad %v4float %r13
       %1325 = OpVectorShuffle %v4float %1324 %1323 4 5 2 3
               OpStore %r13 %1325
       %1326 = OpLoad %v4float %r11
       %1327 = OpVectorShuffle %v3float %1326 %1326 0 1 2
       %1328 = OpLoad %v4float %r13
       %1329 = OpVectorShuffle %v3float %1328 %1328 0 1 2
       %1330 = OpFAdd %v3float %1327 %1329
       %1332 = OpLoad %v4float %r25
       %1333 = OpVectorShuffle %v4float %1332 %1330 4 5 6 3
               OpStore %r25 %1333
       %1334 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1335 = OpAccessChain %_ptr_Uniform_float %1334 %uint_2
       %1336 = OpLoad %float %1335
       %1337 = OpAccessChain %_ptr_Uniform_float %1334 %uint_3
       %1338 = OpLoad %float %1337
       %1339 = OpCompositeConstruct %v2float %1336 %1338
       %1343 = OpBitcast %v2float %1342
       %1344 = OpFMul %v2float %1339 %1343
       %1345 = OpLoad %v4float %r13
       %1346 = OpVectorShuffle %v4float %1345 %1344 4 5 2 3
               OpStore %r13 %1346
       %1347 = OpLoad %v4float %r11
       %1348 = OpVectorShuffle %v3float %1347 %1347 0 1 2
       %1349 = OpLoad %v4float %r13
       %1350 = OpVectorShuffle %v3float %1349 %1349 0 1 2
       %1351 = OpFAdd %v3float %1348 %1350
       %1353 = OpLoad %v4float %r26
       %1354 = OpVectorShuffle %v4float %1353 %1351 4 5 6 3
               OpStore %r26 %1354
       %1355 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_14
       %1356 = OpAccessChain %_ptr_Uniform_float %1355 %uint_2
       %1357 = OpLoad %float %1356
       %1358 = OpAccessChain %_ptr_Uniform_float %1355 %uint_3
       %1359 = OpLoad %float %1358
       %1360 = OpCompositeConstruct %v2float %1357 %1359
       %1364 = OpBitcast %v2float %1363
       %1365 = OpFMul %v2float %1360 %1364
       %1366 = OpLoad %v4float %r13
       %1367 = OpVectorShuffle %v4float %1366 %1365 4 5 2 3
               OpStore %r13 %1367
       %1368 = OpLoad %v4float %r11
       %1369 = OpVectorShuffle %v3float %1368 %1368 0 1 2
       %1370 = OpLoad %v4float %r13
       %1371 = OpVectorShuffle %v3float %1370 %1370 0 1 2
       %1372 = OpFAdd %v3float %1369 %1371
       %1373 = OpLoad %v4float %r11
       %1374 = OpVectorShuffle %v4float %1373 %1372 4 5 6 3
               OpStore %r11 %1374
       %1375 = OpLoad %v4float %r10
       %1376 = OpVectorShuffle %v4float %1375 %1375 0 1 0 0
       %1377 = OpVectorShuffle %v2float %1376 %1376 0 1
       %1378 = OpLoad %v4float %r10
       %1379 = OpCompositeExtract %float %1378 2
       %1381 = OpLoad %56 %s15
       %1382 = OpLoad %64 %t15
       %1383 = OpSampledImage %1380 %1382 %1381
       %1384 = OpImageSampleDrefExplicitLod %float %1383 %1377 %1379 Lod %float_0
       %1385 = OpLoad %v4float %r10
       %1386 = OpCompositeInsert %v4float %1384 %1385 0
               OpStore %r10 %1386
       %1387 = OpLoad %v4float %r12
       %1388 = OpVectorShuffle %v4float %1387 %1387 0 1 0 0
       %1389 = OpVectorShuffle %v2float %1388 %1388 0 1
       %1390 = OpLoad %v4float %r12
       %1391 = OpCompositeExtract %float %1390 2
       %1392 = OpLoad %56 %s15
       %1393 = OpLoad %64 %t15
       %1394 = OpSampledImage %1380 %1393 %1392
       %1395 = OpImageSampleDrefExplicitLod %float %1394 %1389 %1391 Lod %float_0
       %1396 = OpLoad %v4float %r10
       %1397 = OpCompositeInsert %v4float %1395 %1396 1
               OpStore %r10 %1397
       %1398 = OpLoad %v4float %r14
       %1399 = OpVectorShuffle %v4float %1398 %1398 0 1 0 0
       %1400 = OpVectorShuffle %v2float %1399 %1399 0 1
       %1401 = OpLoad %v4float %r14
       %1402 = OpCompositeExtract %float %1401 2
       %1403 = OpLoad %56 %s15
       %1404 = OpLoad %64 %t15
       %1405 = OpSampledImage %1380 %1404 %1403
       %1406 = OpImageSampleDrefExplicitLod %float %1405 %1400 %1402 Lod %float_0
       %1407 = OpLoad %v4float %r10
       %1408 = OpCompositeInsert %v4float %1406 %1407 2
               OpStore %r10 %1408
       %1409 = OpLoad %v4float %r15
       %1410 = OpVectorShuffle %v4float %1409 %1409 0 1 0 0
       %1411 = OpVectorShuffle %v2float %1410 %1410 0 1
       %1412 = OpLoad %v4float %r15
       %1413 = OpCompositeExtract %float %1412 2
       %1414 = OpLoad %56 %s15
       %1415 = OpLoad %64 %t15
       %1416 = OpSampledImage %1380 %1415 %1414
       %1417 = OpImageSampleDrefExplicitLod %float %1416 %1411 %1413 Lod %float_0
       %1418 = OpLoad %v4float %r10
       %1419 = OpCompositeInsert %v4float %1417 %1418 3
               OpStore %r10 %1419
       %1420 = OpLoad %v4float %r16
       %1421 = OpVectorShuffle %v4float %1420 %1420 0 1 0 0
       %1422 = OpVectorShuffle %v2float %1421 %1421 0 1
       %1423 = OpLoad %v4float %r16
       %1424 = OpCompositeExtract %float %1423 2
       %1425 = OpLoad %56 %s15
       %1426 = OpLoad %64 %t15
       %1427 = OpSampledImage %1380 %1426 %1425
       %1428 = OpImageSampleDrefExplicitLod %float %1427 %1422 %1424 Lod %float_0
       %1429 = OpLoad %v4float %r12
       %1430 = OpCompositeInsert %v4float %1428 %1429 0
               OpStore %r12 %1430
       %1431 = OpLoad %v4float %r17
       %1432 = OpVectorShuffle %v4float %1431 %1431 0 1 0 0
       %1433 = OpVectorShuffle %v2float %1432 %1432 0 1
       %1434 = OpLoad %v4float %r17
       %1435 = OpCompositeExtract %float %1434 2
       %1436 = OpLoad %56 %s15
       %1437 = OpLoad %64 %t15
       %1438 = OpSampledImage %1380 %1437 %1436
       %1439 = OpImageSampleDrefExplicitLod %float %1438 %1433 %1435 Lod %float_0
       %1440 = OpLoad %v4float %r12
       %1441 = OpCompositeInsert %v4float %1439 %1440 1
               OpStore %r12 %1441
       %1442 = OpLoad %v4float %r18
       %1443 = OpVectorShuffle %v4float %1442 %1442 0 1 0 0
       %1444 = OpVectorShuffle %v2float %1443 %1443 0 1
       %1445 = OpLoad %v4float %r18
       %1446 = OpCompositeExtract %float %1445 2
       %1447 = OpLoad %56 %s15
       %1448 = OpLoad %64 %t15
       %1449 = OpSampledImage %1380 %1448 %1447
       %1450 = OpImageSampleDrefExplicitLod %float %1449 %1444 %1446 Lod %float_0
       %1451 = OpLoad %v4float %r12
       %1452 = OpCompositeInsert %v4float %1450 %1451 2
               OpStore %r12 %1452
       %1453 = OpLoad %v4float %r19
       %1454 = OpVectorShuffle %v4float %1453 %1453 0 1 0 0
       %1455 = OpVectorShuffle %v2float %1454 %1454 0 1
       %1456 = OpLoad %v4float %r19
       %1457 = OpCompositeExtract %float %1456 2
       %1458 = OpLoad %56 %s15
       %1459 = OpLoad %64 %t15
       %1460 = OpSampledImage %1380 %1459 %1458
       %1461 = OpImageSampleDrefExplicitLod %float %1460 %1455 %1457 Lod %float_0
       %1462 = OpLoad %v4float %r12
       %1463 = OpCompositeInsert %v4float %1461 %1462 3
               OpStore %r12 %1463
       %1464 = OpLoad %v4float %r20
       %1465 = OpVectorShuffle %v4float %1464 %1464 0 1 0 0
       %1466 = OpVectorShuffle %v2float %1465 %1465 0 1
       %1467 = OpLoad %v4float %r20
       %1468 = OpCompositeExtract %float %1467 2
       %1469 = OpLoad %56 %s15
       %1470 = OpLoad %64 %t15
       %1471 = OpSampledImage %1380 %1470 %1469
       %1472 = OpImageSampleDrefExplicitLod %float %1471 %1466 %1468 Lod %float_0
       %1473 = OpLoad %v4float %r13
       %1474 = OpCompositeInsert %v4float %1472 %1473 0
               OpStore %r13 %1474
       %1475 = OpLoad %v4float %r21
       %1476 = OpVectorShuffle %v4float %1475 %1475 0 1 0 0
       %1477 = OpVectorShuffle %v2float %1476 %1476 0 1
       %1478 = OpLoad %v4float %r21
       %1479 = OpCompositeExtract %float %1478 2
       %1480 = OpLoad %56 %s15
       %1481 = OpLoad %64 %t15
       %1482 = OpSampledImage %1380 %1481 %1480
       %1483 = OpImageSampleDrefExplicitLod %float %1482 %1477 %1479 Lod %float_0
       %1484 = OpLoad %v4float %r13
       %1485 = OpCompositeInsert %v4float %1483 %1484 1
               OpStore %r13 %1485
       %1486 = OpLoad %v4float %r22
       %1487 = OpVectorShuffle %v4float %1486 %1486 0 1 0 0
       %1488 = OpVectorShuffle %v2float %1487 %1487 0 1
       %1489 = OpLoad %v4float %r22
       %1490 = OpCompositeExtract %float %1489 2
       %1491 = OpLoad %56 %s15
       %1492 = OpLoad %64 %t15
       %1493 = OpSampledImage %1380 %1492 %1491
       %1494 = OpImageSampleDrefExplicitLod %float %1493 %1488 %1490 Lod %float_0
       %1495 = OpLoad %v4float %r13
       %1496 = OpCompositeInsert %v4float %1494 %1495 2
               OpStore %r13 %1496
       %1497 = OpLoad %v4float %r23
       %1498 = OpVectorShuffle %v4float %1497 %1497 0 1 0 0
       %1499 = OpVectorShuffle %v2float %1498 %1498 0 1
       %1500 = OpLoad %v4float %r23
       %1501 = OpCompositeExtract %float %1500 2
       %1502 = OpLoad %56 %s15
       %1503 = OpLoad %64 %t15
       %1504 = OpSampledImage %1380 %1503 %1502
       %1505 = OpImageSampleDrefExplicitLod %float %1504 %1499 %1501 Lod %float_0
       %1506 = OpLoad %v4float %r13
       %1507 = OpCompositeInsert %v4float %1505 %1506 3
               OpStore %r13 %1507
       %1508 = OpLoad %v4float %r24
       %1509 = OpVectorShuffle %v4float %1508 %1508 0 1 0 0
       %1510 = OpVectorShuffle %v2float %1509 %1509 0 1
       %1511 = OpLoad %v4float %r24
       %1512 = OpCompositeExtract %float %1511 2
       %1513 = OpLoad %56 %s15
       %1514 = OpLoad %64 %t15
       %1515 = OpSampledImage %1380 %1514 %1513
       %1516 = OpImageSampleDrefExplicitLod %float %1515 %1510 %1512 Lod %float_0
       %1517 = OpLoad %v4float %r14
       %1518 = OpCompositeInsert %v4float %1516 %1517 0
               OpStore %r14 %1518
       %1519 = OpLoad %v4float %r25
       %1520 = OpVectorShuffle %v4float %1519 %1519 0 1 0 0
       %1521 = OpVectorShuffle %v2float %1520 %1520 0 1
       %1522 = OpLoad %v4float %r25
       %1523 = OpCompositeExtract %float %1522 2
       %1524 = OpLoad %56 %s15
       %1525 = OpLoad %64 %t15
       %1526 = OpSampledImage %1380 %1525 %1524
       %1527 = OpImageSampleDrefExplicitLod %float %1526 %1521 %1523 Lod %float_0
       %1528 = OpLoad %v4float %r14
       %1529 = OpCompositeInsert %v4float %1527 %1528 1
               OpStore %r14 %1529
       %1530 = OpLoad %v4float %r26
       %1531 = OpVectorShuffle %v4float %1530 %1530 0 1 0 0
       %1532 = OpVectorShuffle %v2float %1531 %1531 0 1
       %1533 = OpLoad %v4float %r26
       %1534 = OpCompositeExtract %float %1533 2
       %1535 = OpLoad %56 %s15
       %1536 = OpLoad %64 %t15
       %1537 = OpSampledImage %1380 %1536 %1535
       %1538 = OpImageSampleDrefExplicitLod %float %1537 %1532 %1534 Lod %float_0
       %1539 = OpLoad %v4float %r14
       %1540 = OpCompositeInsert %v4float %1538 %1539 2
               OpStore %r14 %1540
       %1541 = OpLoad %v4float %r11
       %1542 = OpVectorShuffle %v4float %1541 %1541 0 1 0 0
       %1543 = OpVectorShuffle %v2float %1542 %1542 0 1
       %1544 = OpLoad %v4float %r11
       %1545 = OpCompositeExtract %float %1544 2
       %1546 = OpLoad %56 %s15
       %1547 = OpLoad %64 %t15
       %1548 = OpSampledImage %1380 %1547 %1546
       %1549 = OpImageSampleDrefExplicitLod %float %1548 %1543 %1545 Lod %float_0
       %1550 = OpLoad %v4float %r14
       %1551 = OpCompositeInsert %v4float %1549 %1550 3
               OpStore %r14 %1551
       %1552 = OpLoad %v4float %r10
       %1553 = OpLoad %v4float %r12
       %1554 = OpFAdd %v4float %1552 %1553
               OpStore %r10 %1554
       %1555 = OpLoad %v4float %r13
       %1556 = OpLoad %v4float %r10
       %1557 = OpFAdd %v4float %1555 %1556
               OpStore %r10 %1557
       %1558 = OpLoad %v4float %r14
       %1559 = OpLoad %v4float %r10
       %1560 = OpFAdd %v4float %1558 %1559
               OpStore %r10 %1560
       %1561 = OpLoad %v4float %r10
       %1562 = OpBitcast %v4float %878
       %1563 = OpDot %float %1561 %1562
       %1564 = OpLoad %v4float %r4
       %1565 = OpCompositeInsert %v4float %1563 %1564 2
               OpStore %r4 %1565
       %1566 = OpLoad %v4float %r3
       %1567 = OpCompositeExtract %float %1566 3
       %1568 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_0
       %1569 = OpAccessChain %_ptr_Uniform_float %1568 %uint_3
       %1570 = OpLoad %float %1569
       %1571 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_1
       %1572 = OpAccessChain %_ptr_Uniform_float %1571 %uint_3
       %1573 = OpLoad %float %1572
       %1574 = OpExtInst %float %1 Fma %1567 %1570 %1573
       %1575 = OpExtInst %float %1 NClamp %1574 %float_0 %float_1
       %1576 = OpLoad %v4float %r3
       %1577 = OpCompositeInsert %v4float %1575 %1576 3
               OpStore %r3 %1577
       %1578 = OpLoad %v4float %r9
       %1579 = OpCompositeExtract %float %1578 1
       %1580 = OpExtInst %float %1 FAbs %1579
       %1581 = OpLoad %v4float %r9
       %1582 = OpCompositeExtract %float %1581 0
       %1583 = OpExtInst %float %1 FAbs %1582
       %1584 = OpExtInst %float %1 NMax %1580 %1583
       %1585 = OpLoad %v4float %r4
       %1586 = OpCompositeInsert %v4float %1584 %1585 3
               OpStore %r4 %1586
       %1587 = OpLoad %v4float %r4
       %1588 = OpCompositeExtract %float %1587 3
       %1590 = OpBitcast %float %uint_1097859072
       %1592 = OpBitcast %float %uint_3234437530
       %1593 = OpExtInst %float %1 Fma %1588 %1590 %1592
       %1594 = OpExtInst %float %1 NClamp %1593 %float_0 %float_1
       %1595 = OpLoad %v4float %r4
       %1596 = OpCompositeInsert %v4float %1594 %1595 3
               OpStore %r4 %1596
       %1597 = OpLoad %v4float %r3
       %1598 = OpCompositeExtract %float %1597 3
       %1599 = OpFNegate %float %1598
       %1600 = OpBitcast %float %uint_1065353216
       %1601 = OpFAdd %float %1599 %1600
       %1602 = OpLoad %v4float %r3
       %1603 = OpCompositeInsert %v4float %1601 %1602 3
               OpStore %r3 %1603
       %1604 = OpLoad %v4float %r4
       %1605 = OpCompositeExtract %float %1604 3
       %1606 = OpLoad %v4float %r3
       %1607 = OpCompositeExtract %float %1606 3
       %1608 = OpFMul %float %1605 %1607
       %1609 = OpLoad %v4float %r3
       %1610 = OpCompositeInsert %v4float %1608 %1609 3
               OpStore %r3 %1610
       %1611 = OpLoad %v4float %r4
       %1612 = OpCompositeExtract %float %1611 2
       %1614 = OpBitcast %float %uint_1031798784
       %1615 = OpLoad %v4float %r3
       %1616 = OpCompositeExtract %float %1615 3
       %1617 = OpExtInst %float %1 Fma %1612 %1614 %1616
       %1618 = OpLoad %v4float %r3
       %1619 = OpCompositeInsert %v4float %1617 %1618 3
               OpStore %r3 %1619
       %1620 = OpLoad %v4float %r3
       %1621 = OpCompositeExtract %float %1620 3
       %1622 = OpLoad %v4float %r3
       %1623 = OpCompositeExtract %float %1622 3
       %1624 = OpFMul %float %1621 %1623
       %1625 = OpLoad %v4float %r3
       %1626 = OpCompositeInsert %v4float %1624 %1625 3
               OpStore %r3 %1626
       %1627 = OpLoad %v4float %r3
       %1628 = OpCompositeExtract %float %1627 3
       %1629 = OpBitcast %float %uint_1065353216
       %1630 = OpExtInst %float %1 NMin %1628 %1629
       %1631 = OpLoad %v4float %r3
       %1632 = OpCompositeInsert %v4float %1630 %1631 3
               OpStore %r3 %1632
       %1633 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %1634 = OpLoad %v4float %1633
       %1635 = OpCompositeExtract %float %1634 2
       %1636 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_3
       %1637 = OpAccessChain %_ptr_Uniform_float %1636 %uint_0
       %1638 = OpLoad %float %1637
       %1639 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_3
       %1640 = OpAccessChain %_ptr_Uniform_float %1639 %uint_1
       %1641 = OpLoad %float %1640
       %1642 = OpExtInst %float %1 Fma %1635 %1638 %1641
       %1643 = OpExtInst %float %1 NClamp %1642 %float_0 %float_1
       %1644 = OpLoad %v4float %r4
       %1645 = OpCompositeInsert %v4float %1643 %1644 2
               OpStore %r4 %1645
       %1646 = OpLoad %v4float %r4
       %1647 = OpCompositeExtract %float %1646 2
       %1648 = OpExtInst %float %1 Sqrt %1647
       %1649 = OpLoad %v4float %r4
       %1650 = OpCompositeInsert %v4float %1648 %1649 2
               OpStore %r4 %1650
       %1651 = OpLoad %v4float %r4
       %1652 = OpCompositeExtract %float %1651 2
       %1653 = OpAccessChain %_ptr_Uniform_v4float %cb6 %int_0 %int_3
       %1654 = OpAccessChain %_ptr_Uniform_float %1653 %uint_2
       %1655 = OpLoad %float %1654
       %1656 = OpFMul %float %1652 %1655
       %1657 = OpLoad %v4float %r4
       %1658 = OpCompositeInsert %v4float %1656 %1657 2
               OpStore %r4 %1658
       %1659 = OpLoad %v4float %r4
       %1660 = OpCompositeExtract %float %1659 2
       %1661 = OpLoad %v4float %r3
       %1662 = OpCompositeExtract %float %1661 3
       %1663 = OpFNegate %float %1662
       %1664 = OpLoad %v4float %r3
       %1665 = OpCompositeExtract %float %1664 3
       %1666 = OpExtInst %float %1 Fma %1660 %1663 %1665
       %1667 = OpLoad %v4float %r3
       %1668 = OpCompositeInsert %v4float %1666 %1667 3
               OpStore %r3 %1668
       %1669 = OpLoad %v4float %r2
       %1670 = OpVectorShuffle %v3float %1669 %1669 0 1 2
       %1671 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_0
       %1672 = OpAccessChain %_ptr_Uniform_float %1671 %uint_0
       %1673 = OpLoad %float %1672
       %1674 = OpAccessChain %_ptr_Uniform_float %1671 %uint_1
       %1675 = OpLoad %float %1674
       %1676 = OpAccessChain %_ptr_Uniform_float %1671 %uint_2
       %1677 = OpLoad %float %1676
       %1678 = OpCompositeConstruct %v3float %1673 %1675 %1677
       %1679 = OpFNegate %v3float %1678
       %1680 = OpDot %float %1670 %1679
       %1681 = OpExtInst %float %1 NClamp %1680 %float_0 %float_1
       %1682 = OpLoad %v4float %r4
       %1683 = OpCompositeInsert %v4float %1681 %1682 2
               OpStore %r4 %1683
       %1684 = OpLoad %v4float %r6
       %1685 = OpVectorShuffle %v3float %1684 %1684 0 1 2
       %1686 = OpLoad %v4float %r2
       %1687 = OpVectorShuffle %v3float %1686 %1686 0 1 2
       %1688 = OpDot %float %1685 %1687
       %1689 = OpExtInst %float %1 NClamp %1688 %float_0 %float_1
       %1690 = OpLoad %v4float %r9
       %1691 = OpCompositeInsert %v4float %1689 %1690 0
               OpStore %r9 %1691
       %1692 = OpLoad %v4float %r7
       %1693 = OpVectorShuffle %v3float %1692 %1692 0 1 2
       %1694 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_0
       %1695 = OpAccessChain %_ptr_Uniform_float %1694 %uint_0
       %1696 = OpLoad %float %1695
       %1697 = OpAccessChain %_ptr_Uniform_float %1694 %uint_1
       %1698 = OpLoad %float %1697
       %1699 = OpAccessChain %_ptr_Uniform_float %1694 %uint_2
       %1700 = OpLoad %float %1699
       %1701 = OpCompositeConstruct %v3float %1696 %1698 %1700
       %1702 = OpFNegate %v3float %1701
       %1703 = OpDot %float %1693 %1702
       %1704 = OpExtInst %float %1 NClamp %1703 %float_0 %float_1
       %1705 = OpLoad %v4float %r9
       %1706 = OpCompositeInsert %v4float %1704 %1705 1
               OpStore %r9 %1706
       %1707 = OpLoad %v4float %r9
       %1708 = OpVectorShuffle %v2float %1707 %1707 0 1
       %1709 = OpFNegate %v2float %1708
       %1710 = OpBitcast %v2float %330
       %1711 = OpFAdd %v2float %1709 %1710
       %1712 = OpLoad %v4float %r9
       %1713 = OpVectorShuffle %v4float %1712 %1711 4 5 2 3
               OpStore %r9 %1713
       %1714 = OpLoad %v4float %r9
       %1715 = OpVectorShuffle %v2float %1714 %1714 0 1
       %1716 = OpLoad %v4float %r9
       %1717 = OpVectorShuffle %v2float %1716 %1716 0 1
       %1718 = OpFMul %v2float %1715 %1717
       %1719 = OpLoad %v4float %r9
       %1720 = OpVectorShuffle %v4float %1719 %1718 0 1 4 5
               OpStore %r9 %1720
       %1721 = OpLoad %v4float %r9
       %1722 = OpVectorShuffle %v2float %1721 %1721 2 3
       %1723 = OpLoad %v4float %r9
       %1724 = OpVectorShuffle %v2float %1723 %1723 2 3
       %1725 = OpFMul %v2float %1722 %1724
       %1726 = OpLoad %v4float %r9
       %1727 = OpVectorShuffle %v4float %1726 %1725 0 1 4 5
               OpStore %r9 %1727
       %1728 = OpLoad %v4float %r9
       %1729 = OpVectorShuffle %v2float %1728 %1728 0 1
       %1730 = OpLoad %v4float %r9
       %1731 = OpVectorShuffle %v2float %1730 %1730 2 3
       %1732 = OpFMul %v2float %1729 %1731
       %1733 = OpLoad %v4float %r9
       %1734 = OpVectorShuffle %v4float %1733 %1732 4 5 2 3
               OpStore %r9 %1734
       %1735 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %1736 = OpAccessChain %_ptr_Uniform_float %1735 %uint_0
       %1737 = OpLoad %float %1736
       %1738 = OpFNegate %float %1737
       %1739 = OpBitcast %float %uint_1065353216
       %1740 = OpFAdd %float %1738 %1739
       %1741 = OpLoad %v4float %r4
       %1742 = OpCompositeInsert %v4float %1740 %1741 3
               OpStore %r4 %1742
       %1743 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %1744 = OpAccessChain %_ptr_Uniform_float %1743 %uint_0
       %1745 = OpLoad %float %1744
       %1746 = OpCompositeConstruct %v2float %1745 %1745
       %1747 = OpLoad %v4float %r9
       %1748 = OpVectorShuffle %v2float %1747 %1747 0 1
       %1749 = OpLoad %v4float %r4
       %1750 = OpVectorShuffle %v2float %1749 %1749 3 3
       %1751 = OpExtInst %v2float %1 Fma %1746 %1748 %1750
       %1752 = OpLoad %v4float %r9
       %1753 = OpVectorShuffle %v4float %1752 %1751 4 5 2 3
               OpStore %r9 %1753
       %1754 = OpLoad %v4float %r2
       %1755 = OpVectorShuffle %v2float %1754 %1754 3 3
       %1758 = OpBitcast %v2float %1757
       %1759 = OpFAdd %v2float %1755 %1758
       %1760 = OpLoad %v4float %r9
       %1761 = OpVectorShuffle %v4float %1760 %1759 0 1 4 5
               OpStore %r9 %1761
       %1762 = OpLoad %v4float %r9
       %1763 = OpCompositeExtract %float %1762 2
       %1765 = OpBitcast %float %uint_1040187392
       %1766 = OpFMul %float %1763 %1765
       %1767 = OpLoad %v4float %r5
       %1768 = OpCompositeInsert %v4float %1766 %1767 3
               OpStore %r5 %1768
       %1769 = OpLoad %v4float %r1
       %1770 = OpCompositeExtract %float %1769 0
       %1771 = OpFNegate %float %1770
       %1772 = OpLoad %v4float %r9
       %1773 = OpCompositeExtract %float %1772 0
       %1774 = OpBitcast %float %uint_1065353216
       %1775 = OpExtInst %float %1 Fma %1771 %1773 %1774
       %1776 = OpLoad %v4float %r6
       %1777 = OpCompositeInsert %v4float %1775 %1776 3
               OpStore %r6 %1777
       %1778 = OpLoad %v4float %r2
       %1779 = OpVectorShuffle %v3float %1778 %1778 0 1 2
       %1780 = OpLoad %v4float %r7
       %1781 = OpVectorShuffle %v3float %1780 %1780 0 1 2
       %1782 = OpDot %float %1779 %1781
       %1783 = OpLoad %v4float %r7
       %1784 = OpCompositeInsert %v4float %1782 %1783 0
               OpStore %r7 %1784
       %1785 = OpLoad %v4float %r7
       %1786 = OpCompositeExtract %float %1785 0
       %1787 = OpBitcast %float %uint_841731191
       %1788 = OpFAdd %float %1786 %1787
       %1789 = OpExtInst %float %1 NClamp %1788 %float_0 %float_1
       %1790 = OpLoad %v4float %r7
       %1791 = OpCompositeInsert %v4float %1789 %1790 0
               OpStore %r7 %1791
       %1792 = OpLoad %v4float %r7
       %1793 = OpCompositeExtract %float %1792 0
       %1794 = OpExtInst %float %1 Log2 %1793
       %1795 = OpLoad %v4float %r7
       %1796 = OpCompositeInsert %v4float %1794 %1795 0
               OpStore %r7 %1796
       %1797 = OpLoad %v4float %r7
       %1798 = OpCompositeExtract %float %1797 0
       %1799 = OpLoad %v4float %r9
       %1800 = OpCompositeExtract %float %1799 3
       %1801 = OpFMul %float %1798 %1800
       %1802 = OpLoad %v4float %r7
       %1803 = OpCompositeInsert %v4float %1801 %1802 0
               OpStore %r7 %1803
       %1804 = OpLoad %v4float %r7
       %1805 = OpCompositeExtract %float %1804 0
       %1806 = OpExtInst %float %1 Exp2 %1805
       %1807 = OpLoad %v4float %r7
       %1808 = OpCompositeInsert %v4float %1806 %1807 0
               OpStore %r7 %1808
       %1809 = OpLoad %v4float %r9
       %1810 = OpCompositeExtract %float %1809 1
       %1811 = OpLoad %v4float %r7
       %1812 = OpCompositeExtract %float %1811 0
       %1813 = OpFMul %float %1810 %1812
       %1814 = OpLoad %v4float %r7
       %1815 = OpCompositeInsert %v4float %1813 %1814 0
               OpStore %r7 %1815
       %1816 = OpLoad %v4float %r5
       %1817 = OpCompositeExtract %float %1816 3
       %1818 = OpLoad %v4float %r7
       %1819 = OpCompositeExtract %float %1818 0
       %1820 = OpFMul %float %1817 %1819
       %1821 = OpLoad %v4float %r7
       %1822 = OpCompositeInsert %v4float %1820 %1821 0
               OpStore %r7 %1822
       %1823 = OpLoad %v4float %r1
       %1824 = OpCompositeExtract %float %1823 0
       %1825 = OpLoad %v4float %r7
       %1826 = OpCompositeExtract %float %1825 0
       %1827 = OpFMul %float %1824 %1826
       %1828 = OpLoad %v4float %r7
       %1829 = OpCompositeInsert %v4float %1827 %1828 0
               OpStore %r7 %1829
       %1830 = OpLoad %v4float %r4
       %1831 = OpCompositeExtract %float %1830 2
       %1832 = OpLoad %v4float %r7
       %1833 = OpCompositeExtract %float %1832 0
       %1834 = OpFMul %float %1831 %1833
       %1835 = OpLoad %v4float %r7
       %1836 = OpCompositeInsert %v4float %1834 %1835 0
               OpStore %r7 %1836
       %1837 = OpLoad %v4float %r4
       %1838 = OpCompositeExtract %float %1837 2
       %1839 = OpLoad %v4float %r6
       %1840 = OpCompositeExtract %float %1839 3
       %1841 = OpFMul %float %1838 %1840
       %1842 = OpLoad %v4float %r4
       %1843 = OpCompositeInsert %v4float %1841 %1842 2
               OpStore %r4 %1843
       %1844 = OpLoad %v4float %r0
       %1845 = OpVectorShuffle %v3float %1844 %1844 0 1 2
       %1846 = OpLoad %v4float %r4
       %1847 = OpVectorShuffle %v3float %1846 %1846 2 2 2
       %1848 = OpLoad %v4float %r7
       %1849 = OpVectorShuffle %v3float %1848 %1848 0 0 0
       %1850 = OpExtInst %v3float %1 Fma %1845 %1847 %1849
       %1851 = OpLoad %v4float %r7
       %1852 = OpVectorShuffle %v4float %1851 %1850 4 5 6 3
               OpStore %r7 %1852
       %1853 = OpLoad %v4float %r7
       %1854 = OpVectorShuffle %v3float %1853 %1853 0 1 2
       %1855 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_1
       %1856 = OpAccessChain %_ptr_Uniform_float %1855 %uint_0
       %1857 = OpLoad %float %1856
       %1858 = OpAccessChain %_ptr_Uniform_float %1855 %uint_1
       %1859 = OpLoad %float %1858
       %1860 = OpAccessChain %_ptr_Uniform_float %1855 %uint_2
       %1861 = OpLoad %float %1860
       %1862 = OpCompositeConstruct %v3float %1857 %1859 %1861
       %1863 = OpFMul %v3float %1854 %1862
       %1864 = OpLoad %v4float %r7
       %1865 = OpVectorShuffle %v4float %1864 %1863 4 5 6 3
               OpStore %r7 %1865
       %1866 = OpBitcast %int %uint_0
       %1867 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %1868 = OpAccessChain %_ptr_Uniform_float %1867 %uint_0
       %1869 = OpLoad %float %1868
       %1870 = OpBitcast %int %1869
       %1871 = OpSGreaterThanEqual %bool %1866 %1870
       %1872 = OpSelect %uint %1871 %uint_4294967295 %uint_0
       %1873 = OpBitcast %float %1872
       %1874 = OpLoad %v4float %r4
       %1875 = OpCompositeInsert %v4float %1873 %1874 2
               OpStore %r4 %1875
       %1876 = OpLoad %v4float %r4
       %1877 = OpCompositeExtract %float %1876 2
       %1878 = OpBitcast %uint %1877
       %1879 = OpIEqual %bool %1878 %uint_0
               OpSelectionMerge %1881 None
               OpBranchConditional %1879 %1880 %2283
       %1880 = OpLabel
       %1883 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_19
       %1884 = OpAccessChain %_ptr_Uniform_float %1883 %uint_3
       %1885 = OpLoad %float %1884
       %1886 = OpBitcast %float %uint_0
       %1887 = OpFOrdEqual %bool %1885 %1886
       %1888 = OpSelect %uint %1887 %uint_4294967295 %uint_0
       %1889 = OpBitcast %float %1888
       %1890 = OpLoad %v4float %r7
       %1891 = OpCompositeInsert %v4float %1889 %1890 3
               OpStore %r7 %1891
       %1892 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %1893 = OpLoad %v4float %1892
       %1894 = OpVectorShuffle %v3float %1893 %1893 0 1 2
       %1895 = OpFNegate %v3float %1894
       %1896 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_3
       %1897 = OpAccessChain %_ptr_Uniform_float %1896 %uint_0
       %1898 = OpLoad %float %1897
       %1899 = OpAccessChain %_ptr_Uniform_float %1896 %uint_1
       %1900 = OpLoad %float %1899
       %1901 = OpAccessChain %_ptr_Uniform_float %1896 %uint_2
       %1902 = OpLoad %float %1901
       %1903 = OpCompositeConstruct %v3float %1898 %1900 %1902
       %1904 = OpFAdd %v3float %1895 %1903
       %1905 = OpLoad %v4float %r9
       %1906 = OpVectorShuffle %v4float %1905 %1904 4 5 6 3
               OpStore %r9 %1906
       %1907 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %1908 = OpLoad %v4float %1907
       %1909 = OpVectorShuffle %v3float %1908 %1908 0 1 2
       %1910 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_3
       %1911 = OpAccessChain %_ptr_Uniform_float %1910 %uint_0
       %1912 = OpLoad %float %1911
       %1913 = OpAccessChain %_ptr_Uniform_float %1910 %uint_1
       %1914 = OpLoad %float %1913
       %1915 = OpAccessChain %_ptr_Uniform_float %1910 %uint_2
       %1916 = OpLoad %float %1915
       %1917 = OpCompositeConstruct %v3float %1912 %1914 %1916
       %1918 = OpFNegate %v3float %1917
       %1919 = OpFAdd %v3float %1909 %1918
       %1920 = OpLoad %v4float %r10
       %1921 = OpVectorShuffle %v4float %1920 %1919 4 5 6 3
               OpStore %r10 %1921
       %1922 = OpLoad %v4float %r10
       %1923 = OpVectorShuffle %v3float %1922 %1922 0 1 2
       %1924 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_11
       %1925 = OpAccessChain %_ptr_Uniform_float %1924 %uint_0
       %1926 = OpLoad %float %1925
       %1927 = OpAccessChain %_ptr_Uniform_float %1924 %uint_1
       %1928 = OpLoad %float %1927
       %1929 = OpAccessChain %_ptr_Uniform_float %1924 %uint_2
       %1930 = OpLoad %float %1929
       %1931 = OpCompositeConstruct %v3float %1926 %1928 %1930
       %1932 = OpDot %float %1923 %1931
       %1933 = OpLoad %v4float %r8
       %1934 = OpCompositeInsert %v4float %1932 %1933 3
               OpStore %r8 %1934
       %1935 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_19
       %1936 = OpAccessChain %_ptr_Uniform_float %1935 %uint_3
       %1937 = OpLoad %float %1936
       %1939 = OpBitcast %float %uint_953267991
       %1940 = OpFAdd %float %1937 %1939
       %1941 = OpLoad %v4float %r10
       %1942 = OpCompositeInsert %v4float %1940 %1941 0
               OpStore %r10 %1942
       %1943 = OpLoad %v4float %r8
       %1944 = OpCompositeExtract %float %1943 3
       %1945 = OpLoad %v4float %r10
       %1946 = OpCompositeExtract %float %1945 0
       %1947 = OpFDiv %float %1944 %1946
       %1948 = OpExtInst %float %1 NClamp %1947 %float_0 %float_1
       %1949 = OpLoad %v4float %r8
       %1950 = OpCompositeInsert %v4float %1948 %1949 3
               OpStore %r8 %1950
       %1951 = OpLoad %v4float %r8
       %1952 = OpCompositeExtract %float %1951 3
       %1953 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_19
       %1954 = OpAccessChain %_ptr_Uniform_float %1953 %uint_3
       %1955 = OpLoad %float %1954
       %1956 = OpFMul %float %1952 %1955
       %1957 = OpLoad %v4float %r8
       %1958 = OpCompositeInsert %v4float %1956 %1957 3
               OpStore %r8 %1958
       %1959 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_11
       %1960 = OpAccessChain %_ptr_Uniform_float %1959 %uint_0
       %1961 = OpLoad %float %1960
       %1962 = OpAccessChain %_ptr_Uniform_float %1959 %uint_1
       %1963 = OpLoad %float %1962
       %1964 = OpAccessChain %_ptr_Uniform_float %1959 %uint_2
       %1965 = OpLoad %float %1964
       %1966 = OpCompositeConstruct %v3float %1961 %1963 %1965
       %1967 = OpLoad %v4float %r8
       %1968 = OpVectorShuffle %v3float %1967 %1967 3 3 3
       %1969 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_3
       %1970 = OpAccessChain %_ptr_Uniform_float %1969 %uint_0
       %1971 = OpLoad %float %1970
       %1972 = OpAccessChain %_ptr_Uniform_float %1969 %uint_1
       %1973 = OpLoad %float %1972
       %1974 = OpAccessChain %_ptr_Uniform_float %1969 %uint_2
       %1975 = OpLoad %float %1974
       %1976 = OpCompositeConstruct %v3float %1971 %1973 %1975
       %1977 = OpExtInst %v3float %1 Fma %1966 %1968 %1976
       %1978 = OpLoad %v4float %r10
       %1979 = OpVectorShuffle %v4float %1978 %1977 4 5 6 3
               OpStore %r10 %1979
       %1980 = OpLoad %v4float %r10
       %1981 = OpVectorShuffle %v3float %1980 %1980 0 1 2
       %1982 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %1983 = OpLoad %v4float %1982
       %1984 = OpVectorShuffle %v3float %1983 %1983 0 1 2
       %1985 = OpFNegate %v3float %1984
       %1986 = OpFAdd %v3float %1981 %1985
       %1987 = OpLoad %v4float %r10
       %1988 = OpVectorShuffle %v4float %1987 %1986 4 5 6 3
               OpStore %r10 %1988
       %1989 = OpLoad %v4float %r7
       %1990 = OpVectorShuffle %v3float %1989 %1989 3 3 3
       %1992 = OpBitcast %v3uint %1990
       %1993 = OpLoad %v4float %r9
       %1994 = OpVectorShuffle %v3float %1993 %1993 0 1 2
       %1995 = OpLoad %v4float %r10
       %1996 = OpVectorShuffle %v3float %1995 %1995 0 1 2
       %1999 = OpINotEqual %v3bool %1992 %1998
       %2000 = OpSelect %v3float %1999 %1994 %1996
       %2001 = OpLoad %v4float %r9
       %2002 = OpVectorShuffle %v4float %2001 %2000 4 5 6 3
               OpStore %r9 %2002
       %2003 = OpLoad %v4float %r9
       %2004 = OpVectorShuffle %v3float %2003 %2003 0 1 2
       %2005 = OpLoad %v4float %r9
       %2006 = OpVectorShuffle %v3float %2005 %2005 0 1 2
       %2007 = OpDot %float %2004 %2006
       %2008 = OpLoad %v4float %r7
       %2009 = OpCompositeInsert %v4float %2007 %2008 3
               OpStore %r7 %2009
       %2010 = OpLoad %v4float %r9
       %2011 = OpVectorShuffle %v3float %2010 %2010 0 1 2
       %2014 = OpBitcast %v3float %2013
       %2015 = OpFAdd %v3float %2011 %2014
       %2016 = OpLoad %v4float %r9
       %2017 = OpVectorShuffle %v4float %2016 %2015 4 5 6 3
               OpStore %r9 %2017
       %2018 = OpLoad %v4float %r9
       %2019 = OpVectorShuffle %v3float %2018 %2018 0 1 2
       %2020 = OpLoad %v4float %r9
       %2021 = OpVectorShuffle %v3float %2020 %2020 0 1 2
       %2022 = OpDot %float %2019 %2021
       %2023 = OpLoad %v4float %r8
       %2024 = OpCompositeInsert %v4float %2022 %2023 3
               OpStore %r8 %2024
       %2025 = OpLoad %v4float %r8
       %2026 = OpCompositeExtract %float %2025 3
       %2027 = OpExtInst %float %1 InverseSqrt %2026
       %2028 = OpLoad %v4float %r8
       %2029 = OpCompositeInsert %v4float %2027 %2028 3
               OpStore %r8 %2029
       %2030 = OpLoad %v4float %r8
       %2031 = OpVectorShuffle %v3float %2030 %2030 3 3 3
       %2032 = OpLoad %v4float %r9
       %2033 = OpVectorShuffle %v3float %2032 %2032 0 1 2
       %2034 = OpFMul %v3float %2031 %2033
       %2035 = OpLoad %v4float %r9
       %2036 = OpVectorShuffle %v4float %2035 %2034 4 5 6 3
               OpStore %r9 %2036
       %2037 = OpLoad %v4float %r7
       %2038 = OpCompositeExtract %float %2037 3
       %2039 = OpFNegate %float %2038
       %2040 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_3
       %2041 = OpAccessChain %_ptr_Uniform_float %2040 %uint_3
       %2042 = OpLoad %float %2041
       %2043 = OpBitcast %float %uint_1065353216
       %2044 = OpExtInst %float %1 Fma %2039 %2042 %2043
       %2045 = OpExtInst %float %1 NClamp %2044 %float_0 %float_1
       %2046 = OpLoad %v4float %r7
       %2047 = OpCompositeInsert %v4float %2045 %2046 3
               OpStore %r7 %2047
       %2048 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_11
       %2049 = OpAccessChain %_ptr_Uniform_float %2048 %uint_3
       %2050 = OpLoad %float %2049
       %2051 = OpFNegate %float %2050
       %2052 = OpBitcast %float %uint_1065353216
       %2053 = OpFAdd %float %2051 %2052
       %2054 = OpLoad %v4float %r8
       %2055 = OpCompositeInsert %v4float %2053 %2054 3
               OpStore %r8 %2055
       %2056 = OpLoad %v4float %r8
       %2057 = OpCompositeExtract %float %2056 3
       %2058 = OpLoad %v4float %r7
       %2059 = OpCompositeExtract %float %2058 3
       %2060 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_11
       %2061 = OpAccessChain %_ptr_Uniform_float %2060 %uint_3
       %2062 = OpLoad %float %2061
       %2063 = OpExtInst %float %1 Fma %2057 %2059 %2062
       %2064 = OpLoad %v4float %r8
       %2065 = OpCompositeInsert %v4float %2063 %2064 3
               OpStore %r8 %2065
       %2066 = OpLoad %v4float %r7
       %2067 = OpCompositeExtract %float %2066 3
       %2068 = OpLoad %v4float %r8
       %2069 = OpCompositeExtract %float %2068 3
       %2070 = OpFDiv %float %2067 %2069
       %2071 = OpLoad %v4float %r7
       %2072 = OpCompositeInsert %v4float %2070 %2071 3
               OpStore %r7 %2072
       %2073 = OpLoad %v4float %r9
       %2074 = OpVectorShuffle %v3float %2073 %2073 0 1 2
       %2075 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_11
       %2076 = OpAccessChain %_ptr_Uniform_float %2075 %uint_0
       %2077 = OpLoad %float %2076
       %2078 = OpAccessChain %_ptr_Uniform_float %2075 %uint_1
       %2079 = OpLoad %float %2078
       %2080 = OpAccessChain %_ptr_Uniform_float %2075 %uint_2
       %2081 = OpLoad %float %2080
       %2082 = OpCompositeConstruct %v3float %2077 %2079 %2081
       %2083 = OpFNegate %v3float %2082
       %2084 = OpDot %float %2074 %2083
       %2085 = OpLoad %v4float %r8
       %2086 = OpCompositeInsert %v4float %2084 %2085 3
               OpStore %r8 %2086
       %2087 = OpLoad %v4float %r8
       %2088 = OpCompositeExtract %float %2087 3
       %2090 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_27
       %2091 = OpAccessChain %_ptr_Uniform_float %2090 %uint_0
       %2092 = OpLoad %float %2091
       %2094 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_35
       %2095 = OpAccessChain %_ptr_Uniform_float %2094 %uint_0
       %2096 = OpLoad %float %2095
       %2097 = OpExtInst %float %1 Fma %2088 %2092 %2096
       %2098 = OpExtInst %float %1 NClamp %2097 %float_0 %float_1
       %2099 = OpLoad %v4float %r8
       %2100 = OpCompositeInsert %v4float %2098 %2099 3
               OpStore %r8 %2100
       %2101 = OpLoad %v4float %r9
       %2102 = OpVectorShuffle %v3float %2101 %2101 0 1 2
       %2103 = OpLoad %v4float %r2
       %2104 = OpVectorShuffle %v3float %2103 %2103 0 1 2
       %2105 = OpDot %float %2102 %2104
       %2106 = OpExtInst %float %1 NClamp %2105 %float_0 %float_1
       %2107 = OpLoad %v4float %r10
       %2108 = OpCompositeInsert %v4float %2106 %2107 0
               OpStore %r10 %2108
       %2109 = OpLoad %v4float %r8
       %2110 = OpCompositeExtract %float %2109 3
       %2111 = OpLoad %v4float %r10
       %2112 = OpCompositeExtract %float %2111 0
       %2113 = OpFMul %float %2110 %2112
       %2114 = OpLoad %v4float %r8
       %2115 = OpCompositeInsert %v4float %2113 %2114 3
               OpStore %r8 %2115
       %2116 = OpLoad %v4float %r7
       %2117 = OpCompositeExtract %float %2116 3
       %2118 = OpLoad %v4float %r8
       %2119 = OpCompositeExtract %float %2118 3
       %2120 = OpFMul %float %2117 %2119
       %2121 = OpLoad %v4float %r10
       %2122 = OpCompositeInsert %v4float %2120 %2121 0
               OpStore %r10 %2122
       %2123 = OpLoad %v4float %r10
       %2124 = OpVectorShuffle %v3float %2123 %2123 0 0 0
       %2125 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_19
       %2126 = OpAccessChain %_ptr_Uniform_float %2125 %uint_0
       %2127 = OpLoad %float %2126
       %2128 = OpAccessChain %_ptr_Uniform_float %2125 %uint_1
       %2129 = OpLoad %float %2128
       %2130 = OpAccessChain %_ptr_Uniform_float %2125 %uint_2
       %2131 = OpLoad %float %2130
       %2132 = OpCompositeConstruct %v3float %2127 %2129 %2131
       %2133 = OpFMul %v3float %2124 %2132
       %2134 = OpLoad %v4float %r10
       %2135 = OpVectorShuffle %v4float %2134 %2133 4 5 6 3
               OpStore %r10 %2135
       %2136 = OpLoad %v4float %r0
       %2137 = OpVectorShuffle %v3float %2136 %2136 0 1 2
       %2138 = OpLoad %v4float %r10
       %2139 = OpVectorShuffle %v3float %2138 %2138 0 1 2
       %2140 = OpFMul %v3float %2137 %2139
       %2141 = OpLoad %v4float %r10
       %2142 = OpVectorShuffle %v4float %2141 %2140 4 5 6 3
               OpStore %r10 %2142
       %2143 = OpLoad %v4float %r5
       %2144 = OpVectorShuffle %v3float %2143 %2143 0 1 2
       %2145 = OpLoad %v4float %r1
       %2146 = OpVectorShuffle %v3float %2145 %2145 1 1 1
       %2147 = OpLoad %v4float %r9
       %2148 = OpVectorShuffle %v3float %2147 %2147 0 1 2
       %2149 = OpExtInst %v3float %1 Fma %2144 %2146 %2148
       %2150 = OpLoad %v4float %r9
       %2151 = OpVectorShuffle %v4float %2150 %2149 4 5 6 3
               OpStore %r9 %2151
       %2152 = OpLoad %v4float %r9
       %2153 = OpVectorShuffle %v3float %2152 %2152 0 1 2
       %2154 = OpLoad %v4float %r9
       %2155 = OpVectorShuffle %v3float %2154 %2154 0 1 2
       %2156 = OpDot %float %2153 %2155
       %2157 = OpLoad %v4float %r10
       %2158 = OpCompositeInsert %v4float %2156 %2157 3
               OpStore %r10 %2158
       %2159 = OpLoad %v4float %r10
       %2160 = OpCompositeExtract %float %2159 3
       %2161 = OpExtInst %float %1 InverseSqrt %2160
       %2162 = OpLoad %v4float %r10
       %2163 = OpCompositeInsert %v4float %2161 %2162 3
               OpStore %r10 %2163
       %2164 = OpLoad %v4float %r9
       %2165 = OpVectorShuffle %v3float %2164 %2164 0 1 2
       %2166 = OpLoad %v4float %r10
       %2167 = OpVectorShuffle %v3float %2166 %2166 3 3 3
       %2168 = OpFMul %v3float %2165 %2167
       %2169 = OpLoad %v4float %r9
       %2170 = OpVectorShuffle %v4float %2169 %2168 4 5 6 3
               OpStore %r9 %2170
       %2171 = OpLoad %v4float %r9
       %2172 = OpVectorShuffle %v3float %2171 %2171 0 1 2
       %2173 = OpLoad %v4float %r6
       %2174 = OpVectorShuffle %v3float %2173 %2173 0 1 2
       %2175 = OpDot %float %2172 %2174
       %2176 = OpExtInst %float %1 NClamp %2175 %float_0 %float_1
       %2177 = OpLoad %v4float %r10
       %2178 = OpCompositeInsert %v4float %2176 %2177 3
               OpStore %r10 %2178
       %2179 = OpLoad %v4float %r10
       %2180 = OpCompositeExtract %float %2179 3
       %2181 = OpFNegate %float %2180
       %2182 = OpBitcast %float %uint_1065353216
       %2183 = OpFAdd %float %2181 %2182
       %2184 = OpLoad %v4float %r10
       %2185 = OpCompositeInsert %v4float %2183 %2184 3
               OpStore %r10 %2185
       %2186 = OpLoad %v4float %r10
       %2187 = OpCompositeExtract %float %2186 3
       %2188 = OpLoad %v4float %r10
       %2189 = OpCompositeExtract %float %2188 3
       %2190 = OpFMul %float %2187 %2189
       %2191 = OpLoad %v4float %r11
       %2192 = OpCompositeInsert %v4float %2190 %2191 0
               OpStore %r11 %2192
       %2193 = OpLoad %v4float %r11
       %2194 = OpCompositeExtract %float %2193 0
       %2195 = OpLoad %v4float %r11
       %2196 = OpCompositeExtract %float %2195 0
       %2197 = OpFMul %float %2194 %2196
       %2198 = OpLoad %v4float %r11
       %2199 = OpCompositeInsert %v4float %2197 %2198 0
               OpStore %r11 %2199
       %2200 = OpLoad %v4float %r10
       %2201 = OpCompositeExtract %float %2200 3
       %2202 = OpLoad %v4float %r11
       %2203 = OpCompositeExtract %float %2202 0
       %2204 = OpFMul %float %2201 %2203
       %2205 = OpLoad %v4float %r10
       %2206 = OpCompositeInsert %v4float %2204 %2205 3
               OpStore %r10 %2206
       %2207 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %2208 = OpAccessChain %_ptr_Uniform_float %2207 %uint_0
       %2209 = OpLoad %float %2208
       %2210 = OpLoad %v4float %r10
       %2211 = OpCompositeExtract %float %2210 3
       %2212 = OpLoad %v4float %r4
       %2213 = OpCompositeExtract %float %2212 3
       %2214 = OpExtInst %float %1 Fma %2209 %2211 %2213
       %2215 = OpLoad %v4float %r10
       %2216 = OpCompositeInsert %v4float %2214 %2215 3
               OpStore %r10 %2216
       %2217 = OpLoad %v4float %r9
       %2218 = OpVectorShuffle %v3float %2217 %2217 0 1 2
       %2219 = OpLoad %v4float %r2
       %2220 = OpVectorShuffle %v3float %2219 %2219 0 1 2
       %2221 = OpDot %float %2218 %2220
       %2222 = OpExtInst %float %1 NClamp %2221 %float_0 %float_1
       %2223 = OpLoad %v4float %r9
       %2224 = OpCompositeInsert %v4float %2222 %2223 0
               OpStore %r9 %2224
       %2225 = OpLoad %v4float %r9
       %2226 = OpCompositeExtract %float %2225 0
       %2227 = OpExtInst %float %1 Log2 %2226
       %2228 = OpLoad %v4float %r9
       %2229 = OpCompositeInsert %v4float %2227 %2228 0
               OpStore %r9 %2229
       %2230 = OpLoad %v4float %r9
       %2231 = OpCompositeExtract %float %2230 0
       %2232 = OpLoad %v4float %r9
       %2233 = OpCompositeExtract %float %2232 3
       %2234 = OpFMul %float %2231 %2233
       %2235 = OpLoad %v4float %r9
       %2236 = OpCompositeInsert %v4float %2234 %2235 0
               OpStore %r9 %2236
       %2237 = OpLoad %v4float %r9
       %2238 = OpCompositeExtract %float %2237 0
       %2239 = OpExtInst %float %1 Exp2 %2238
       %2240 = OpLoad %v4float %r9
       %2241 = OpCompositeInsert %v4float %2239 %2240 0
               OpStore %r9 %2241
       %2242 = OpLoad %v4float %r9
       %2243 = OpCompositeExtract %float %2242 0
       %2244 = OpLoad %v4float %r10
       %2245 = OpCompositeExtract %float %2244 3
       %2246 = OpFMul %float %2243 %2245
       %2247 = OpLoad %v4float %r9
       %2248 = OpCompositeInsert %v4float %2246 %2247 0
               OpStore %r9 %2248
       %2249 = OpLoad %v4float %r8
       %2250 = OpCompositeExtract %float %2249 3
       %2251 = OpLoad %v4float %r9
       %2252 = OpCompositeExtract %float %2251 0
       %2253 = OpFMul %float %2250 %2252
       %2254 = OpLoad %v4float %r8
       %2255 = OpCompositeInsert %v4float %2253 %2254 3
               OpStore %r8 %2255
       %2256 = OpLoad %v4float %r7
       %2257 = OpCompositeExtract %float %2256 3
       %2258 = OpLoad %v4float %r8
       %2259 = OpCompositeExtract %float %2258 3
       %2260 = OpFMul %float %2257 %2259
       %2261 = OpLoad %v4float %r7
       %2262 = OpCompositeInsert %v4float %2260 %2261 3
               OpStore %r7 %2262
       %2263 = OpLoad %v4float %r5
       %2264 = OpCompositeExtract %float %2263 3
       %2265 = OpLoad %v4float %r7
       %2266 = OpCompositeExtract %float %2265 3
       %2267 = OpFMul %float %2264 %2266
       %2268 = OpLoad %v4float %r7
       %2269 = OpCompositeInsert %v4float %2267 %2268 3
               OpStore %r7 %2269
       %2270 = OpLoad %v4float %r7
       %2271 = OpVectorShuffle %v3float %2270 %2270 3 3 3
       %2272 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_19
       %2273 = OpAccessChain %_ptr_Uniform_float %2272 %uint_0
       %2274 = OpLoad %float %2273
       %2275 = OpAccessChain %_ptr_Uniform_float %2272 %uint_1
       %2276 = OpLoad %float %2275
       %2277 = OpAccessChain %_ptr_Uniform_float %2272 %uint_2
       %2278 = OpLoad %float %2277
       %2279 = OpCompositeConstruct %v3float %2274 %2276 %2278
       %2280 = OpFMul %v3float %2271 %2279
       %2281 = OpLoad %v4float %r9
       %2282 = OpVectorShuffle %v4float %2281 %2280 4 5 6 3
               OpStore %r9 %2282
               OpBranch %1881
       %2283 = OpLabel
       %2284 = OpBitcast %v3float %1998
       %2285 = OpLoad %v4float %r10
       %2286 = OpVectorShuffle %v4float %2285 %2284 4 5 6 3
               OpStore %r10 %2286
       %2287 = OpBitcast %v3float %1998
       %2288 = OpLoad %v4float %r9
       %2289 = OpVectorShuffle %v4float %2288 %2287 4 5 6 3
               OpStore %r9 %2289
               OpBranch %1881
       %1881 = OpLabel
       %2290 = OpBitcast %int %uint_0
       %2291 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %2292 = OpAccessChain %_ptr_Uniform_float %2291 %uint_0
       %2293 = OpLoad %float %2292
       %2294 = OpBitcast %int %2293
       %2295 = OpSLessThan %bool %2290 %2294
       %2296 = OpSelect %uint %2295 %uint_4294967295 %uint_0
       %2297 = OpBitcast %float %2296
       %2298 = OpLoad %v4float %r7
       %2299 = OpCompositeInsert %v4float %2297 %2298 3
               OpStore %r7 %2299
       %2300 = OpLoad %v4float %r7
       %2301 = OpCompositeExtract %float %2300 3
       %2302 = OpBitcast %uint %2301
       %2303 = OpINotEqual %bool %2302 %uint_0
               OpSelectionMerge %2305 None
               OpBranchConditional %2303 %2304 %2742
       %2304 = OpLabel
       %2306 = OpBitcast %int %uint_1
       %2307 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %2308 = OpAccessChain %_ptr_Uniform_float %2307 %uint_0
       %2309 = OpLoad %float %2308
       %2310 = OpBitcast %int %2309
       %2311 = OpSGreaterThanEqual %bool %2306 %2310
       %2312 = OpSelect %uint %2311 %uint_4294967295 %uint_0
       %2313 = OpBitcast %float %2312
       %2314 = OpLoad %v4float %r8
       %2315 = OpCompositeInsert %v4float %2313 %2314 3
               OpStore %r8 %2315
       %2316 = OpLoad %v4float %r4
       %2317 = OpCompositeExtract %float %2316 2
       %2318 = OpBitcast %uint %2317
       %2319 = OpLoad %v4float %r7
       %2320 = OpCompositeExtract %float %2319 3
       %2321 = OpBitcast %uint %2320
       %2322 = OpBitwiseOr %uint %2318 %2321
       %2323 = OpBitcast %float %2322
       %2324 = OpLoad %v4float %r7
       %2325 = OpCompositeInsert %v4float %2323 %2324 3
               OpStore %r7 %2325
       %2326 = OpLoad %v4float %r8
       %2327 = OpCompositeExtract %float %2326 3
       %2328 = OpBitcast %uint %2327
       %2329 = OpLoad %v4float %r7
       %2330 = OpCompositeExtract %float %2329 3
       %2331 = OpLoad %v4float %r4
       %2332 = OpCompositeExtract %float %2331 2
       %2333 = OpINotEqual %bool %2328 %uint_0
       %2334 = OpSelect %float %2333 %2330 %2332
       %2335 = OpLoad %v4float %r4
       %2336 = OpCompositeInsert %v4float %2334 %2335 2
               OpStore %r4 %2336
       %2337 = OpLoad %v4float %r4
       %2338 = OpCompositeExtract %float %2337 2
       %2339 = OpBitcast %uint %2338
       %2340 = OpIEqual %bool %2339 %uint_0
               OpSelectionMerge %2342 None
               OpBranchConditional %2340 %2341 %2342
       %2341 = OpLabel
       %2344 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_20
       %2345 = OpAccessChain %_ptr_Uniform_float %2344 %uint_3
       %2346 = OpLoad %float %2345
       %2347 = OpBitcast %float %uint_0
       %2348 = OpFOrdEqual %bool %2346 %2347
       %2349 = OpSelect %uint %2348 %uint_4294967295 %uint_0
       %2350 = OpBitcast %float %2349
       %2351 = OpLoad %v4float %r7
       %2352 = OpCompositeInsert %v4float %2350 %2351 3
               OpStore %r7 %2352
       %2353 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2354 = OpLoad %v4float %2353
       %2355 = OpVectorShuffle %v3float %2354 %2354 0 1 2
       %2356 = OpFNegate %v3float %2355
       %2357 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_4
       %2358 = OpAccessChain %_ptr_Uniform_float %2357 %uint_0
       %2359 = OpLoad %float %2358
       %2360 = OpAccessChain %_ptr_Uniform_float %2357 %uint_1
       %2361 = OpLoad %float %2360
       %2362 = OpAccessChain %_ptr_Uniform_float %2357 %uint_2
       %2363 = OpLoad %float %2362
       %2364 = OpCompositeConstruct %v3float %2359 %2361 %2363
       %2365 = OpFAdd %v3float %2356 %2364
       %2366 = OpLoad %v4float %r11
       %2367 = OpVectorShuffle %v4float %2366 %2365 4 5 6 3
               OpStore %r11 %2367
       %2368 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2369 = OpLoad %v4float %2368
       %2370 = OpVectorShuffle %v3float %2369 %2369 0 1 2
       %2371 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_4
       %2372 = OpAccessChain %_ptr_Uniform_float %2371 %uint_0
       %2373 = OpLoad %float %2372
       %2374 = OpAccessChain %_ptr_Uniform_float %2371 %uint_1
       %2375 = OpLoad %float %2374
       %2376 = OpAccessChain %_ptr_Uniform_float %2371 %uint_2
       %2377 = OpLoad %float %2376
       %2378 = OpCompositeConstruct %v3float %2373 %2375 %2377
       %2379 = OpFNegate %v3float %2378
       %2380 = OpFAdd %v3float %2370 %2379
       %2381 = OpLoad %v4float %r12
       %2382 = OpVectorShuffle %v4float %2381 %2380 4 5 6 3
               OpStore %r12 %2382
       %2383 = OpLoad %v4float %r12
       %2384 = OpVectorShuffle %v3float %2383 %2383 0 1 2
       %2385 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_12
       %2386 = OpAccessChain %_ptr_Uniform_float %2385 %uint_0
       %2387 = OpLoad %float %2386
       %2388 = OpAccessChain %_ptr_Uniform_float %2385 %uint_1
       %2389 = OpLoad %float %2388
       %2390 = OpAccessChain %_ptr_Uniform_float %2385 %uint_2
       %2391 = OpLoad %float %2390
       %2392 = OpCompositeConstruct %v3float %2387 %2389 %2391
       %2393 = OpDot %float %2384 %2392
       %2394 = OpLoad %v4float %r8
       %2395 = OpCompositeInsert %v4float %2393 %2394 3
               OpStore %r8 %2395
       %2396 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_20
       %2397 = OpAccessChain %_ptr_Uniform_float %2396 %uint_3
       %2398 = OpLoad %float %2397
       %2399 = OpBitcast %float %uint_953267991
       %2400 = OpFAdd %float %2398 %2399
       %2401 = OpLoad %v4float %r10
       %2402 = OpCompositeInsert %v4float %2400 %2401 3
               OpStore %r10 %2402
       %2403 = OpLoad %v4float %r8
       %2404 = OpCompositeExtract %float %2403 3
       %2405 = OpLoad %v4float %r10
       %2406 = OpCompositeExtract %float %2405 3
       %2407 = OpFDiv %float %2404 %2406
       %2408 = OpExtInst %float %1 NClamp %2407 %float_0 %float_1
       %2409 = OpLoad %v4float %r8
       %2410 = OpCompositeInsert %v4float %2408 %2409 3
               OpStore %r8 %2410
       %2411 = OpLoad %v4float %r8
       %2412 = OpCompositeExtract %float %2411 3
       %2413 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_20
       %2414 = OpAccessChain %_ptr_Uniform_float %2413 %uint_3
       %2415 = OpLoad %float %2414
       %2416 = OpFMul %float %2412 %2415
       %2417 = OpLoad %v4float %r8
       %2418 = OpCompositeInsert %v4float %2416 %2417 3
               OpStore %r8 %2418
       %2419 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_12
       %2420 = OpAccessChain %_ptr_Uniform_float %2419 %uint_0
       %2421 = OpLoad %float %2420
       %2422 = OpAccessChain %_ptr_Uniform_float %2419 %uint_1
       %2423 = OpLoad %float %2422
       %2424 = OpAccessChain %_ptr_Uniform_float %2419 %uint_2
       %2425 = OpLoad %float %2424
       %2426 = OpCompositeConstruct %v3float %2421 %2423 %2425
       %2427 = OpLoad %v4float %r8
       %2428 = OpVectorShuffle %v3float %2427 %2427 3 3 3
       %2429 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_4
       %2430 = OpAccessChain %_ptr_Uniform_float %2429 %uint_0
       %2431 = OpLoad %float %2430
       %2432 = OpAccessChain %_ptr_Uniform_float %2429 %uint_1
       %2433 = OpLoad %float %2432
       %2434 = OpAccessChain %_ptr_Uniform_float %2429 %uint_2
       %2435 = OpLoad %float %2434
       %2436 = OpCompositeConstruct %v3float %2431 %2433 %2435
       %2437 = OpExtInst %v3float %1 Fma %2426 %2428 %2436
       %2438 = OpLoad %v4float %r12
       %2439 = OpVectorShuffle %v4float %2438 %2437 4 5 6 3
               OpStore %r12 %2439
       %2440 = OpLoad %v4float %r12
       %2441 = OpVectorShuffle %v3float %2440 %2440 0 1 2
       %2442 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2443 = OpLoad %v4float %2442
       %2444 = OpVectorShuffle %v3float %2443 %2443 0 1 2
       %2445 = OpFNegate %v3float %2444
       %2446 = OpFAdd %v3float %2441 %2445
       %2447 = OpLoad %v4float %r12
       %2448 = OpVectorShuffle %v4float %2447 %2446 4 5 6 3
               OpStore %r12 %2448
       %2449 = OpLoad %v4float %r7
       %2450 = OpVectorShuffle %v3float %2449 %2449 3 3 3
       %2451 = OpBitcast %v3uint %2450
       %2452 = OpLoad %v4float %r11
       %2453 = OpVectorShuffle %v3float %2452 %2452 0 1 2
       %2454 = OpLoad %v4float %r12
       %2455 = OpVectorShuffle %v3float %2454 %2454 0 1 2
       %2456 = OpINotEqual %v3bool %2451 %1998
       %2457 = OpSelect %v3float %2456 %2453 %2455
       %2458 = OpLoad %v4float %r11
       %2459 = OpVectorShuffle %v4float %2458 %2457 4 5 6 3
               OpStore %r11 %2459
       %2460 = OpLoad %v4float %r11
       %2461 = OpVectorShuffle %v3float %2460 %2460 0 1 2
       %2462 = OpLoad %v4float %r11
       %2463 = OpVectorShuffle %v3float %2462 %2462 0 1 2
       %2464 = OpDot %float %2461 %2463
       %2465 = OpLoad %v4float %r7
       %2466 = OpCompositeInsert %v4float %2464 %2465 3
               OpStore %r7 %2466
       %2467 = OpLoad %v4float %r11
       %2468 = OpVectorShuffle %v3float %2467 %2467 0 1 2
       %2469 = OpBitcast %v3float %2013
       %2470 = OpFAdd %v3float %2468 %2469
       %2471 = OpLoad %v4float %r11
       %2472 = OpVectorShuffle %v4float %2471 %2470 4 5 6 3
               OpStore %r11 %2472
       %2473 = OpLoad %v4float %r11
       %2474 = OpVectorShuffle %v3float %2473 %2473 0 1 2
       %2475 = OpLoad %v4float %r11
       %2476 = OpVectorShuffle %v3float %2475 %2475 0 1 2
       %2477 = OpDot %float %2474 %2476
       %2478 = OpLoad %v4float %r8
       %2479 = OpCompositeInsert %v4float %2477 %2478 3
               OpStore %r8 %2479
       %2480 = OpLoad %v4float %r8
       %2481 = OpCompositeExtract %float %2480 3
       %2482 = OpExtInst %float %1 InverseSqrt %2481
       %2483 = OpLoad %v4float %r8
       %2484 = OpCompositeInsert %v4float %2482 %2483 3
               OpStore %r8 %2484
       %2485 = OpLoad %v4float %r8
       %2486 = OpVectorShuffle %v3float %2485 %2485 3 3 3
       %2487 = OpLoad %v4float %r11
       %2488 = OpVectorShuffle %v3float %2487 %2487 0 1 2
       %2489 = OpFMul %v3float %2486 %2488
       %2490 = OpLoad %v4float %r11
       %2491 = OpVectorShuffle %v4float %2490 %2489 4 5 6 3
               OpStore %r11 %2491
       %2492 = OpLoad %v4float %r7
       %2493 = OpCompositeExtract %float %2492 3
       %2494 = OpFNegate %float %2493
       %2495 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_4
       %2496 = OpAccessChain %_ptr_Uniform_float %2495 %uint_3
       %2497 = OpLoad %float %2496
       %2498 = OpBitcast %float %uint_1065353216
       %2499 = OpExtInst %float %1 Fma %2494 %2497 %2498
       %2500 = OpExtInst %float %1 NClamp %2499 %float_0 %float_1
       %2501 = OpLoad %v4float %r7
       %2502 = OpCompositeInsert %v4float %2500 %2501 3
               OpStore %r7 %2502
       %2503 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_12
       %2504 = OpAccessChain %_ptr_Uniform_float %2503 %uint_3
       %2505 = OpLoad %float %2504
       %2506 = OpFNegate %float %2505
       %2507 = OpBitcast %float %uint_1065353216
       %2508 = OpFAdd %float %2506 %2507
       %2509 = OpLoad %v4float %r8
       %2510 = OpCompositeInsert %v4float %2508 %2509 3
               OpStore %r8 %2510
       %2511 = OpLoad %v4float %r8
       %2512 = OpCompositeExtract %float %2511 3
       %2513 = OpLoad %v4float %r7
       %2514 = OpCompositeExtract %float %2513 3
       %2515 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_12
       %2516 = OpAccessChain %_ptr_Uniform_float %2515 %uint_3
       %2517 = OpLoad %float %2516
       %2518 = OpExtInst %float %1 Fma %2512 %2514 %2517
       %2519 = OpLoad %v4float %r8
       %2520 = OpCompositeInsert %v4float %2518 %2519 3
               OpStore %r8 %2520
       %2521 = OpLoad %v4float %r7
       %2522 = OpCompositeExtract %float %2521 3
       %2523 = OpLoad %v4float %r8
       %2524 = OpCompositeExtract %float %2523 3
       %2525 = OpFDiv %float %2522 %2524
       %2526 = OpLoad %v4float %r7
       %2527 = OpCompositeInsert %v4float %2525 %2526 3
               OpStore %r7 %2527
       %2528 = OpLoad %v4float %r11
       %2529 = OpVectorShuffle %v3float %2528 %2528 0 1 2
       %2530 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_12
       %2531 = OpAccessChain %_ptr_Uniform_float %2530 %uint_0
       %2532 = OpLoad %float %2531
       %2533 = OpAccessChain %_ptr_Uniform_float %2530 %uint_1
       %2534 = OpLoad %float %2533
       %2535 = OpAccessChain %_ptr_Uniform_float %2530 %uint_2
       %2536 = OpLoad %float %2535
       %2537 = OpCompositeConstruct %v3float %2532 %2534 %2536
       %2538 = OpFNegate %v3float %2537
       %2539 = OpDot %float %2529 %2538
       %2540 = OpLoad %v4float %r8
       %2541 = OpCompositeInsert %v4float %2539 %2540 3
               OpStore %r8 %2541
       %2542 = OpLoad %v4float %r8
       %2543 = OpCompositeExtract %float %2542 3
       %2545 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_28
       %2546 = OpAccessChain %_ptr_Uniform_float %2545 %uint_0
       %2547 = OpLoad %float %2546
       %2549 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_36
       %2550 = OpAccessChain %_ptr_Uniform_float %2549 %uint_0
       %2551 = OpLoad %float %2550
       %2552 = OpExtInst %float %1 Fma %2543 %2547 %2551
       %2553 = OpExtInst %float %1 NClamp %2552 %float_0 %float_1
       %2554 = OpLoad %v4float %r8
       %2555 = OpCompositeInsert %v4float %2553 %2554 3
               OpStore %r8 %2555
       %2556 = OpLoad %v4float %r11
       %2557 = OpVectorShuffle %v3float %2556 %2556 0 1 2
       %2558 = OpLoad %v4float %r2
       %2559 = OpVectorShuffle %v3float %2558 %2558 0 1 2
       %2560 = OpDot %float %2557 %2559
       %2561 = OpExtInst %float %1 NClamp %2560 %float_0 %float_1
       %2562 = OpLoad %v4float %r10
       %2563 = OpCompositeInsert %v4float %2561 %2562 3
               OpStore %r10 %2563
       %2564 = OpLoad %v4float %r8
       %2565 = OpCompositeExtract %float %2564 3
       %2566 = OpLoad %v4float %r10
       %2567 = OpCompositeExtract %float %2566 3
       %2568 = OpFMul %float %2565 %2567
       %2569 = OpLoad %v4float %r8
       %2570 = OpCompositeInsert %v4float %2568 %2569 3
               OpStore %r8 %2570
       %2571 = OpLoad %v4float %r7
       %2572 = OpCompositeExtract %float %2571 3
       %2573 = OpLoad %v4float %r8
       %2574 = OpCompositeExtract %float %2573 3
       %2575 = OpFMul %float %2572 %2574
       %2576 = OpLoad %v4float %r10
       %2577 = OpCompositeInsert %v4float %2575 %2576 3
               OpStore %r10 %2577
       %2578 = OpLoad %v4float %r10
       %2579 = OpVectorShuffle %v3float %2578 %2578 3 3 3
       %2580 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_20
       %2581 = OpAccessChain %_ptr_Uniform_float %2580 %uint_0
       %2582 = OpLoad %float %2581
       %2583 = OpAccessChain %_ptr_Uniform_float %2580 %uint_1
       %2584 = OpLoad %float %2583
       %2585 = OpAccessChain %_ptr_Uniform_float %2580 %uint_2
       %2586 = OpLoad %float %2585
       %2587 = OpCompositeConstruct %v3float %2582 %2584 %2586
       %2588 = OpFMul %v3float %2579 %2587
       %2589 = OpLoad %v4float %r12
       %2590 = OpVectorShuffle %v4float %2589 %2588 4 5 6 3
               OpStore %r12 %2590
       %2591 = OpLoad %v4float %r12
       %2592 = OpVectorShuffle %v3float %2591 %2591 0 1 2
       %2593 = OpLoad %v4float %r0
       %2594 = OpVectorShuffle %v3float %2593 %2593 0 1 2
       %2595 = OpLoad %v4float %r10
       %2596 = OpVectorShuffle %v3float %2595 %2595 0 1 2
       %2597 = OpExtInst %v3float %1 Fma %2592 %2594 %2596
       %2598 = OpLoad %v4float %r10
       %2599 = OpVectorShuffle %v4float %2598 %2597 4 5 6 3
               OpStore %r10 %2599
       %2600 = OpLoad %v4float %r5
       %2601 = OpVectorShuffle %v3float %2600 %2600 0 1 2
       %2602 = OpLoad %v4float %r1
       %2603 = OpVectorShuffle %v3float %2602 %2602 1 1 1
       %2604 = OpLoad %v4float %r11
       %2605 = OpVectorShuffle %v3float %2604 %2604 0 1 2
       %2606 = OpExtInst %v3float %1 Fma %2601 %2603 %2605
       %2607 = OpLoad %v4float %r11
       %2608 = OpVectorShuffle %v4float %2607 %2606 4 5 6 3
               OpStore %r11 %2608
       %2609 = OpLoad %v4float %r11
       %2610 = OpVectorShuffle %v3float %2609 %2609 0 1 2
       %2611 = OpLoad %v4float %r11
       %2612 = OpVectorShuffle %v3float %2611 %2611 0 1 2
       %2613 = OpDot %float %2610 %2612
       %2614 = OpLoad %v4float %r10
       %2615 = OpCompositeInsert %v4float %2613 %2614 3
               OpStore %r10 %2615
       %2616 = OpLoad %v4float %r10
       %2617 = OpCompositeExtract %float %2616 3
       %2618 = OpExtInst %float %1 InverseSqrt %2617
       %2619 = OpLoad %v4float %r10
       %2620 = OpCompositeInsert %v4float %2618 %2619 3
               OpStore %r10 %2620
       %2621 = OpLoad %v4float %r10
       %2622 = OpVectorShuffle %v3float %2621 %2621 3 3 3
       %2623 = OpLoad %v4float %r11
       %2624 = OpVectorShuffle %v3float %2623 %2623 0 1 2
       %2625 = OpFMul %v3float %2622 %2624
       %2626 = OpLoad %v4float %r11
       %2627 = OpVectorShuffle %v4float %2626 %2625 4 5 6 3
               OpStore %r11 %2627
       %2628 = OpLoad %v4float %r11
       %2629 = OpVectorShuffle %v3float %2628 %2628 0 1 2
       %2630 = OpLoad %v4float %r6
       %2631 = OpVectorShuffle %v3float %2630 %2630 0 1 2
       %2632 = OpDot %float %2629 %2631
       %2633 = OpExtInst %float %1 NClamp %2632 %float_0 %float_1
       %2634 = OpLoad %v4float %r10
       %2635 = OpCompositeInsert %v4float %2633 %2634 3
               OpStore %r10 %2635
       %2636 = OpLoad %v4float %r10
       %2637 = OpCompositeExtract %float %2636 3
       %2638 = OpFNegate %float %2637
       %2639 = OpBitcast %float %uint_1065353216
       %2640 = OpFAdd %float %2638 %2639
       %2641 = OpLoad %v4float %r10
       %2642 = OpCompositeInsert %v4float %2640 %2641 3
               OpStore %r10 %2642
       %2643 = OpLoad %v4float %r10
       %2644 = OpCompositeExtract %float %2643 3
       %2645 = OpLoad %v4float %r10
       %2646 = OpCompositeExtract %float %2645 3
       %2647 = OpFMul %float %2644 %2646
       %2648 = OpLoad %v4float %r11
       %2649 = OpCompositeInsert %v4float %2647 %2648 3
               OpStore %r11 %2649
       %2650 = OpLoad %v4float %r11
       %2651 = OpCompositeExtract %float %2650 3
       %2652 = OpLoad %v4float %r11
       %2653 = OpCompositeExtract %float %2652 3
       %2654 = OpFMul %float %2651 %2653
       %2655 = OpLoad %v4float %r11
       %2656 = OpCompositeInsert %v4float %2654 %2655 3
               OpStore %r11 %2656
       %2657 = OpLoad %v4float %r10
       %2658 = OpCompositeExtract %float %2657 3
       %2659 = OpLoad %v4float %r11
       %2660 = OpCompositeExtract %float %2659 3
       %2661 = OpFMul %float %2658 %2660
       %2662 = OpLoad %v4float %r10
       %2663 = OpCompositeInsert %v4float %2661 %2662 3
               OpStore %r10 %2663
       %2664 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %2665 = OpAccessChain %_ptr_Uniform_float %2664 %uint_0
       %2666 = OpLoad %float %2665
       %2667 = OpLoad %v4float %r10
       %2668 = OpCompositeExtract %float %2667 3
       %2669 = OpLoad %v4float %r4
       %2670 = OpCompositeExtract %float %2669 3
       %2671 = OpExtInst %float %1 Fma %2666 %2668 %2670
       %2672 = OpLoad %v4float %r10
       %2673 = OpCompositeInsert %v4float %2671 %2672 3
               OpStore %r10 %2673
       %2674 = OpLoad %v4float %r11
       %2675 = OpVectorShuffle %v3float %2674 %2674 0 1 2
       %2676 = OpLoad %v4float %r2
       %2677 = OpVectorShuffle %v3float %2676 %2676 0 1 2
       %2678 = OpDot %float %2675 %2677
       %2679 = OpExtInst %float %1 NClamp %2678 %float_0 %float_1
       %2680 = OpLoad %v4float %r11
       %2681 = OpCompositeInsert %v4float %2679 %2680 0
               OpStore %r11 %2681
       %2682 = OpLoad %v4float %r11
       %2683 = OpCompositeExtract %float %2682 0
       %2684 = OpExtInst %float %1 Log2 %2683
       %2685 = OpLoad %v4float %r11
       %2686 = OpCompositeInsert %v4float %2684 %2685 0
               OpStore %r11 %2686
       %2687 = OpLoad %v4float %r9
       %2688 = OpCompositeExtract %float %2687 3
       %2689 = OpLoad %v4float %r11
       %2690 = OpCompositeExtract %float %2689 0
       %2691 = OpFMul %float %2688 %2690
       %2692 = OpLoad %v4float %r11
       %2693 = OpCompositeInsert %v4float %2691 %2692 0
               OpStore %r11 %2693
       %2694 = OpLoad %v4float %r11
       %2695 = OpCompositeExtract %float %2694 0
       %2696 = OpExtInst %float %1 Exp2 %2695
       %2697 = OpLoad %v4float %r11
       %2698 = OpCompositeInsert %v4float %2696 %2697 0
               OpStore %r11 %2698
       %2699 = OpLoad %v4float %r10
       %2700 = OpCompositeExtract %float %2699 3
       %2701 = OpLoad %v4float %r11
       %2702 = OpCompositeExtract %float %2701 0
       %2703 = OpFMul %float %2700 %2702
       %2704 = OpLoad %v4float %r10
       %2705 = OpCompositeInsert %v4float %2703 %2704 3
               OpStore %r10 %2705
       %2706 = OpLoad %v4float %r8
       %2707 = OpCompositeExtract %float %2706 3
       %2708 = OpLoad %v4float %r10
       %2709 = OpCompositeExtract %float %2708 3
       %2710 = OpFMul %float %2707 %2709
       %2711 = OpLoad %v4float %r8
       %2712 = OpCompositeInsert %v4float %2710 %2711 3
               OpStore %r8 %2712
       %2713 = OpLoad %v4float %r7
       %2714 = OpCompositeExtract %float %2713 3
       %2715 = OpLoad %v4float %r8
       %2716 = OpCompositeExtract %float %2715 3
       %2717 = OpFMul %float %2714 %2716
       %2718 = OpLoad %v4float %r7
       %2719 = OpCompositeInsert %v4float %2717 %2718 3
               OpStore %r7 %2719
       %2720 = OpLoad %v4float %r5
       %2721 = OpCompositeExtract %float %2720 3
       %2722 = OpLoad %v4float %r7
       %2723 = OpCompositeExtract %float %2722 3
       %2724 = OpFMul %float %2721 %2723
       %2725 = OpLoad %v4float %r7
       %2726 = OpCompositeInsert %v4float %2724 %2725 3
               OpStore %r7 %2726
       %2727 = OpLoad %v4float %r7
       %2728 = OpVectorShuffle %v3float %2727 %2727 3 3 3
       %2729 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_20
       %2730 = OpAccessChain %_ptr_Uniform_float %2729 %uint_0
       %2731 = OpLoad %float %2730
       %2732 = OpAccessChain %_ptr_Uniform_float %2729 %uint_1
       %2733 = OpLoad %float %2732
       %2734 = OpAccessChain %_ptr_Uniform_float %2729 %uint_2
       %2735 = OpLoad %float %2734
       %2736 = OpCompositeConstruct %v3float %2731 %2733 %2735
       %2737 = OpLoad %v4float %r9
       %2738 = OpVectorShuffle %v3float %2737 %2737 0 1 2
       %2739 = OpExtInst %v3float %1 Fma %2728 %2736 %2738
       %2740 = OpLoad %v4float %r9
       %2741 = OpVectorShuffle %v4float %2740 %2739 4 5 6 3
               OpStore %r9 %2741
               OpBranch %2342
       %2342 = OpLabel
               OpBranch %2305
       %2742 = OpLabel
       %2743 = OpBitcast %float %uint_4294967295
       %2744 = OpLoad %v4float %r4
       %2745 = OpCompositeInsert %v4float %2743 %2744 2
               OpStore %r4 %2745
               OpBranch %2305
       %2305 = OpLabel
       %2746 = OpLoad %v4float %r4
       %2747 = OpCompositeExtract %float %2746 2
       %2748 = OpBitcast %uint %2747
       %2749 = OpIEqual %bool %2748 %uint_0
               OpSelectionMerge %2751 None
               OpBranchConditional %2749 %2750 %3177
       %2750 = OpLabel
       %2752 = OpBitcast %int %uint_2
       %2753 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %2754 = OpAccessChain %_ptr_Uniform_float %2753 %uint_0
       %2755 = OpLoad %float %2754
       %2756 = OpBitcast %int %2755
       %2757 = OpSGreaterThanEqual %bool %2752 %2756
       %2758 = OpSelect %uint %2757 %uint_4294967295 %uint_0
       %2759 = OpBitcast %float %2758
       %2760 = OpLoad %v4float %r7
       %2761 = OpCompositeInsert %v4float %2759 %2760 3
               OpStore %r7 %2761
       %2762 = OpLoad %v4float %r4
       %2763 = OpCompositeExtract %float %2762 2
       %2764 = OpBitcast %uint %2763
       %2765 = OpLoad %v4float %r7
       %2766 = OpCompositeExtract %float %2765 3
       %2767 = OpBitcast %uint %2766
       %2768 = OpBitwiseOr %uint %2764 %2767
       %2769 = OpBitcast %float %2768
       %2770 = OpLoad %v4float %r4
       %2771 = OpCompositeInsert %v4float %2769 %2770 2
               OpStore %r4 %2771
       %2772 = OpLoad %v4float %r4
       %2773 = OpCompositeExtract %float %2772 2
       %2774 = OpBitcast %uint %2773
       %2775 = OpIEqual %bool %2774 %uint_0
               OpSelectionMerge %2777 None
               OpBranchConditional %2775 %2776 %2777
       %2776 = OpLabel
       %2779 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_21
       %2780 = OpAccessChain %_ptr_Uniform_float %2779 %uint_3
       %2781 = OpLoad %float %2780
       %2782 = OpBitcast %float %uint_0
       %2783 = OpFOrdEqual %bool %2781 %2782
       %2784 = OpSelect %uint %2783 %uint_4294967295 %uint_0
       %2785 = OpBitcast %float %2784
       %2786 = OpLoad %v4float %r7
       %2787 = OpCompositeInsert %v4float %2785 %2786 3
               OpStore %r7 %2787
       %2788 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2789 = OpLoad %v4float %2788
       %2790 = OpVectorShuffle %v3float %2789 %2789 0 1 2
       %2791 = OpFNegate %v3float %2790
       %2792 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_5
       %2793 = OpAccessChain %_ptr_Uniform_float %2792 %uint_0
       %2794 = OpLoad %float %2793
       %2795 = OpAccessChain %_ptr_Uniform_float %2792 %uint_1
       %2796 = OpLoad %float %2795
       %2797 = OpAccessChain %_ptr_Uniform_float %2792 %uint_2
       %2798 = OpLoad %float %2797
       %2799 = OpCompositeConstruct %v3float %2794 %2796 %2798
       %2800 = OpFAdd %v3float %2791 %2799
       %2801 = OpLoad %v4float %r11
       %2802 = OpVectorShuffle %v4float %2801 %2800 4 5 6 3
               OpStore %r11 %2802
       %2803 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2804 = OpLoad %v4float %2803
       %2805 = OpVectorShuffle %v3float %2804 %2804 0 1 2
       %2806 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_5
       %2807 = OpAccessChain %_ptr_Uniform_float %2806 %uint_0
       %2808 = OpLoad %float %2807
       %2809 = OpAccessChain %_ptr_Uniform_float %2806 %uint_1
       %2810 = OpLoad %float %2809
       %2811 = OpAccessChain %_ptr_Uniform_float %2806 %uint_2
       %2812 = OpLoad %float %2811
       %2813 = OpCompositeConstruct %v3float %2808 %2810 %2812
       %2814 = OpFNegate %v3float %2813
       %2815 = OpFAdd %v3float %2805 %2814
       %2816 = OpLoad %v4float %r12
       %2817 = OpVectorShuffle %v4float %2816 %2815 4 5 6 3
               OpStore %r12 %2817
       %2818 = OpLoad %v4float %r12
       %2819 = OpVectorShuffle %v3float %2818 %2818 0 1 2
       %2820 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_13
       %2821 = OpAccessChain %_ptr_Uniform_float %2820 %uint_0
       %2822 = OpLoad %float %2821
       %2823 = OpAccessChain %_ptr_Uniform_float %2820 %uint_1
       %2824 = OpLoad %float %2823
       %2825 = OpAccessChain %_ptr_Uniform_float %2820 %uint_2
       %2826 = OpLoad %float %2825
       %2827 = OpCompositeConstruct %v3float %2822 %2824 %2826
       %2828 = OpDot %float %2819 %2827
       %2829 = OpLoad %v4float %r8
       %2830 = OpCompositeInsert %v4float %2828 %2829 3
               OpStore %r8 %2830
       %2831 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_21
       %2832 = OpAccessChain %_ptr_Uniform_float %2831 %uint_3
       %2833 = OpLoad %float %2832
       %2834 = OpBitcast %float %uint_953267991
       %2835 = OpFAdd %float %2833 %2834
       %2836 = OpLoad %v4float %r10
       %2837 = OpCompositeInsert %v4float %2835 %2836 3
               OpStore %r10 %2837
       %2838 = OpLoad %v4float %r8
       %2839 = OpCompositeExtract %float %2838 3
       %2840 = OpLoad %v4float %r10
       %2841 = OpCompositeExtract %float %2840 3
       %2842 = OpFDiv %float %2839 %2841
       %2843 = OpExtInst %float %1 NClamp %2842 %float_0 %float_1
       %2844 = OpLoad %v4float %r8
       %2845 = OpCompositeInsert %v4float %2843 %2844 3
               OpStore %r8 %2845
       %2846 = OpLoad %v4float %r8
       %2847 = OpCompositeExtract %float %2846 3
       %2848 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_21
       %2849 = OpAccessChain %_ptr_Uniform_float %2848 %uint_3
       %2850 = OpLoad %float %2849
       %2851 = OpFMul %float %2847 %2850
       %2852 = OpLoad %v4float %r8
       %2853 = OpCompositeInsert %v4float %2851 %2852 3
               OpStore %r8 %2853
       %2854 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_13
       %2855 = OpAccessChain %_ptr_Uniform_float %2854 %uint_0
       %2856 = OpLoad %float %2855
       %2857 = OpAccessChain %_ptr_Uniform_float %2854 %uint_1
       %2858 = OpLoad %float %2857
       %2859 = OpAccessChain %_ptr_Uniform_float %2854 %uint_2
       %2860 = OpLoad %float %2859
       %2861 = OpCompositeConstruct %v3float %2856 %2858 %2860
       %2862 = OpLoad %v4float %r8
       %2863 = OpVectorShuffle %v3float %2862 %2862 3 3 3
       %2864 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_5
       %2865 = OpAccessChain %_ptr_Uniform_float %2864 %uint_0
       %2866 = OpLoad %float %2865
       %2867 = OpAccessChain %_ptr_Uniform_float %2864 %uint_1
       %2868 = OpLoad %float %2867
       %2869 = OpAccessChain %_ptr_Uniform_float %2864 %uint_2
       %2870 = OpLoad %float %2869
       %2871 = OpCompositeConstruct %v3float %2866 %2868 %2870
       %2872 = OpExtInst %v3float %1 Fma %2861 %2863 %2871
       %2873 = OpLoad %v4float %r12
       %2874 = OpVectorShuffle %v4float %2873 %2872 4 5 6 3
               OpStore %r12 %2874
       %2875 = OpLoad %v4float %r12
       %2876 = OpVectorShuffle %v3float %2875 %2875 0 1 2
       %2877 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %2878 = OpLoad %v4float %2877
       %2879 = OpVectorShuffle %v3float %2878 %2878 0 1 2
       %2880 = OpFNegate %v3float %2879
       %2881 = OpFAdd %v3float %2876 %2880
       %2882 = OpLoad %v4float %r12
       %2883 = OpVectorShuffle %v4float %2882 %2881 4 5 6 3
               OpStore %r12 %2883
       %2884 = OpLoad %v4float %r7
       %2885 = OpVectorShuffle %v3float %2884 %2884 3 3 3
       %2886 = OpBitcast %v3uint %2885
       %2887 = OpLoad %v4float %r11
       %2888 = OpVectorShuffle %v3float %2887 %2887 0 1 2
       %2889 = OpLoad %v4float %r12
       %2890 = OpVectorShuffle %v3float %2889 %2889 0 1 2
       %2891 = OpINotEqual %v3bool %2886 %1998
       %2892 = OpSelect %v3float %2891 %2888 %2890
       %2893 = OpLoad %v4float %r11
       %2894 = OpVectorShuffle %v4float %2893 %2892 4 5 6 3
               OpStore %r11 %2894
       %2895 = OpLoad %v4float %r11
       %2896 = OpVectorShuffle %v3float %2895 %2895 0 1 2
       %2897 = OpLoad %v4float %r11
       %2898 = OpVectorShuffle %v3float %2897 %2897 0 1 2
       %2899 = OpDot %float %2896 %2898
       %2900 = OpLoad %v4float %r7
       %2901 = OpCompositeInsert %v4float %2899 %2900 3
               OpStore %r7 %2901
       %2902 = OpLoad %v4float %r11
       %2903 = OpVectorShuffle %v3float %2902 %2902 0 1 2
       %2904 = OpBitcast %v3float %2013
       %2905 = OpFAdd %v3float %2903 %2904
       %2906 = OpLoad %v4float %r11
       %2907 = OpVectorShuffle %v4float %2906 %2905 4 5 6 3
               OpStore %r11 %2907
       %2908 = OpLoad %v4float %r11
       %2909 = OpVectorShuffle %v3float %2908 %2908 0 1 2
       %2910 = OpLoad %v4float %r11
       %2911 = OpVectorShuffle %v3float %2910 %2910 0 1 2
       %2912 = OpDot %float %2909 %2911
       %2913 = OpLoad %v4float %r8
       %2914 = OpCompositeInsert %v4float %2912 %2913 3
               OpStore %r8 %2914
       %2915 = OpLoad %v4float %r8
       %2916 = OpCompositeExtract %float %2915 3
       %2917 = OpExtInst %float %1 InverseSqrt %2916
       %2918 = OpLoad %v4float %r8
       %2919 = OpCompositeInsert %v4float %2917 %2918 3
               OpStore %r8 %2919
       %2920 = OpLoad %v4float %r8
       %2921 = OpVectorShuffle %v3float %2920 %2920 3 3 3
       %2922 = OpLoad %v4float %r11
       %2923 = OpVectorShuffle %v3float %2922 %2922 0 1 2
       %2924 = OpFMul %v3float %2921 %2923
       %2925 = OpLoad %v4float %r11
       %2926 = OpVectorShuffle %v4float %2925 %2924 4 5 6 3
               OpStore %r11 %2926
       %2927 = OpLoad %v4float %r7
       %2928 = OpCompositeExtract %float %2927 3
       %2929 = OpFNegate %float %2928
       %2930 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_5
       %2931 = OpAccessChain %_ptr_Uniform_float %2930 %uint_3
       %2932 = OpLoad %float %2931
       %2933 = OpBitcast %float %uint_1065353216
       %2934 = OpExtInst %float %1 Fma %2929 %2932 %2933
       %2935 = OpExtInst %float %1 NClamp %2934 %float_0 %float_1
       %2936 = OpLoad %v4float %r7
       %2937 = OpCompositeInsert %v4float %2935 %2936 3
               OpStore %r7 %2937
       %2938 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_13
       %2939 = OpAccessChain %_ptr_Uniform_float %2938 %uint_3
       %2940 = OpLoad %float %2939
       %2941 = OpFNegate %float %2940
       %2942 = OpBitcast %float %uint_1065353216
       %2943 = OpFAdd %float %2941 %2942
       %2944 = OpLoad %v4float %r8
       %2945 = OpCompositeInsert %v4float %2943 %2944 3
               OpStore %r8 %2945
       %2946 = OpLoad %v4float %r8
       %2947 = OpCompositeExtract %float %2946 3
       %2948 = OpLoad %v4float %r7
       %2949 = OpCompositeExtract %float %2948 3
       %2950 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_13
       %2951 = OpAccessChain %_ptr_Uniform_float %2950 %uint_3
       %2952 = OpLoad %float %2951
       %2953 = OpExtInst %float %1 Fma %2947 %2949 %2952
       %2954 = OpLoad %v4float %r8
       %2955 = OpCompositeInsert %v4float %2953 %2954 3
               OpStore %r8 %2955
       %2956 = OpLoad %v4float %r7
       %2957 = OpCompositeExtract %float %2956 3
       %2958 = OpLoad %v4float %r8
       %2959 = OpCompositeExtract %float %2958 3
       %2960 = OpFDiv %float %2957 %2959
       %2961 = OpLoad %v4float %r7
       %2962 = OpCompositeInsert %v4float %2960 %2961 3
               OpStore %r7 %2962
       %2963 = OpLoad %v4float %r11
       %2964 = OpVectorShuffle %v3float %2963 %2963 0 1 2
       %2965 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_13
       %2966 = OpAccessChain %_ptr_Uniform_float %2965 %uint_0
       %2967 = OpLoad %float %2966
       %2968 = OpAccessChain %_ptr_Uniform_float %2965 %uint_1
       %2969 = OpLoad %float %2968
       %2970 = OpAccessChain %_ptr_Uniform_float %2965 %uint_2
       %2971 = OpLoad %float %2970
       %2972 = OpCompositeConstruct %v3float %2967 %2969 %2971
       %2973 = OpFNegate %v3float %2972
       %2974 = OpDot %float %2964 %2973
       %2975 = OpLoad %v4float %r8
       %2976 = OpCompositeInsert %v4float %2974 %2975 3
               OpStore %r8 %2976
       %2977 = OpLoad %v4float %r8
       %2978 = OpCompositeExtract %float %2977 3
       %2980 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_29
       %2981 = OpAccessChain %_ptr_Uniform_float %2980 %uint_0
       %2982 = OpLoad %float %2981
       %2984 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_37
       %2985 = OpAccessChain %_ptr_Uniform_float %2984 %uint_0
       %2986 = OpLoad %float %2985
       %2987 = OpExtInst %float %1 Fma %2978 %2982 %2986
       %2988 = OpExtInst %float %1 NClamp %2987 %float_0 %float_1
       %2989 = OpLoad %v4float %r8
       %2990 = OpCompositeInsert %v4float %2988 %2989 3
               OpStore %r8 %2990
       %2991 = OpLoad %v4float %r11
       %2992 = OpVectorShuffle %v3float %2991 %2991 0 1 2
       %2993 = OpLoad %v4float %r2
       %2994 = OpVectorShuffle %v3float %2993 %2993 0 1 2
       %2995 = OpDot %float %2992 %2994
       %2996 = OpExtInst %float %1 NClamp %2995 %float_0 %float_1
       %2997 = OpLoad %v4float %r10
       %2998 = OpCompositeInsert %v4float %2996 %2997 3
               OpStore %r10 %2998
       %2999 = OpLoad %v4float %r8
       %3000 = OpCompositeExtract %float %2999 3
       %3001 = OpLoad %v4float %r10
       %3002 = OpCompositeExtract %float %3001 3
       %3003 = OpFMul %float %3000 %3002
       %3004 = OpLoad %v4float %r8
       %3005 = OpCompositeInsert %v4float %3003 %3004 3
               OpStore %r8 %3005
       %3006 = OpLoad %v4float %r7
       %3007 = OpCompositeExtract %float %3006 3
       %3008 = OpLoad %v4float %r8
       %3009 = OpCompositeExtract %float %3008 3
       %3010 = OpFMul %float %3007 %3009
       %3011 = OpLoad %v4float %r10
       %3012 = OpCompositeInsert %v4float %3010 %3011 3
               OpStore %r10 %3012
       %3013 = OpLoad %v4float %r10
       %3014 = OpVectorShuffle %v3float %3013 %3013 3 3 3
       %3015 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_21
       %3016 = OpAccessChain %_ptr_Uniform_float %3015 %uint_0
       %3017 = OpLoad %float %3016
       %3018 = OpAccessChain %_ptr_Uniform_float %3015 %uint_1
       %3019 = OpLoad %float %3018
       %3020 = OpAccessChain %_ptr_Uniform_float %3015 %uint_2
       %3021 = OpLoad %float %3020
       %3022 = OpCompositeConstruct %v3float %3017 %3019 %3021
       %3023 = OpFMul %v3float %3014 %3022
       %3024 = OpLoad %v4float %r12
       %3025 = OpVectorShuffle %v4float %3024 %3023 4 5 6 3
               OpStore %r12 %3025
       %3026 = OpLoad %v4float %r12
       %3027 = OpVectorShuffle %v3float %3026 %3026 0 1 2
       %3028 = OpLoad %v4float %r0
       %3029 = OpVectorShuffle %v3float %3028 %3028 0 1 2
       %3030 = OpLoad %v4float %r10
       %3031 = OpVectorShuffle %v3float %3030 %3030 0 1 2
       %3032 = OpExtInst %v3float %1 Fma %3027 %3029 %3031
       %3033 = OpLoad %v4float %r10
       %3034 = OpVectorShuffle %v4float %3033 %3032 4 5 6 3
               OpStore %r10 %3034
       %3035 = OpLoad %v4float %r5
       %3036 = OpVectorShuffle %v3float %3035 %3035 0 1 2
       %3037 = OpLoad %v4float %r1
       %3038 = OpVectorShuffle %v3float %3037 %3037 1 1 1
       %3039 = OpLoad %v4float %r11
       %3040 = OpVectorShuffle %v3float %3039 %3039 0 1 2
       %3041 = OpExtInst %v3float %1 Fma %3036 %3038 %3040
       %3042 = OpLoad %v4float %r11
       %3043 = OpVectorShuffle %v4float %3042 %3041 4 5 6 3
               OpStore %r11 %3043
       %3044 = OpLoad %v4float %r11
       %3045 = OpVectorShuffle %v3float %3044 %3044 0 1 2
       %3046 = OpLoad %v4float %r11
       %3047 = OpVectorShuffle %v3float %3046 %3046 0 1 2
       %3048 = OpDot %float %3045 %3047
       %3049 = OpLoad %v4float %r10
       %3050 = OpCompositeInsert %v4float %3048 %3049 3
               OpStore %r10 %3050
       %3051 = OpLoad %v4float %r10
       %3052 = OpCompositeExtract %float %3051 3
       %3053 = OpExtInst %float %1 InverseSqrt %3052
       %3054 = OpLoad %v4float %r10
       %3055 = OpCompositeInsert %v4float %3053 %3054 3
               OpStore %r10 %3055
       %3056 = OpLoad %v4float %r10
       %3057 = OpVectorShuffle %v3float %3056 %3056 3 3 3
       %3058 = OpLoad %v4float %r11
       %3059 = OpVectorShuffle %v3float %3058 %3058 0 1 2
       %3060 = OpFMul %v3float %3057 %3059
       %3061 = OpLoad %v4float %r11
       %3062 = OpVectorShuffle %v4float %3061 %3060 4 5 6 3
               OpStore %r11 %3062
       %3063 = OpLoad %v4float %r11
       %3064 = OpVectorShuffle %v3float %3063 %3063 0 1 2
       %3065 = OpLoad %v4float %r6
       %3066 = OpVectorShuffle %v3float %3065 %3065 0 1 2
       %3067 = OpDot %float %3064 %3066
       %3068 = OpExtInst %float %1 NClamp %3067 %float_0 %float_1
       %3069 = OpLoad %v4float %r10
       %3070 = OpCompositeInsert %v4float %3068 %3069 3
               OpStore %r10 %3070
       %3071 = OpLoad %v4float %r10
       %3072 = OpCompositeExtract %float %3071 3
       %3073 = OpFNegate %float %3072
       %3074 = OpBitcast %float %uint_1065353216
       %3075 = OpFAdd %float %3073 %3074
       %3076 = OpLoad %v4float %r10
       %3077 = OpCompositeInsert %v4float %3075 %3076 3
               OpStore %r10 %3077
       %3078 = OpLoad %v4float %r10
       %3079 = OpCompositeExtract %float %3078 3
       %3080 = OpLoad %v4float %r10
       %3081 = OpCompositeExtract %float %3080 3
       %3082 = OpFMul %float %3079 %3081
       %3083 = OpLoad %v4float %r11
       %3084 = OpCompositeInsert %v4float %3082 %3083 3
               OpStore %r11 %3084
       %3085 = OpLoad %v4float %r11
       %3086 = OpCompositeExtract %float %3085 3
       %3087 = OpLoad %v4float %r11
       %3088 = OpCompositeExtract %float %3087 3
       %3089 = OpFMul %float %3086 %3088
       %3090 = OpLoad %v4float %r11
       %3091 = OpCompositeInsert %v4float %3089 %3090 3
               OpStore %r11 %3091
       %3092 = OpLoad %v4float %r10
       %3093 = OpCompositeExtract %float %3092 3
       %3094 = OpLoad %v4float %r11
       %3095 = OpCompositeExtract %float %3094 3
       %3096 = OpFMul %float %3093 %3095
       %3097 = OpLoad %v4float %r10
       %3098 = OpCompositeInsert %v4float %3096 %3097 3
               OpStore %r10 %3098
       %3099 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %3100 = OpAccessChain %_ptr_Uniform_float %3099 %uint_0
       %3101 = OpLoad %float %3100
       %3102 = OpLoad %v4float %r10
       %3103 = OpCompositeExtract %float %3102 3
       %3104 = OpLoad %v4float %r4
       %3105 = OpCompositeExtract %float %3104 3
       %3106 = OpExtInst %float %1 Fma %3101 %3103 %3105
       %3107 = OpLoad %v4float %r10
       %3108 = OpCompositeInsert %v4float %3106 %3107 3
               OpStore %r10 %3108
       %3109 = OpLoad %v4float %r11
       %3110 = OpVectorShuffle %v3float %3109 %3109 0 1 2
       %3111 = OpLoad %v4float %r2
       %3112 = OpVectorShuffle %v3float %3111 %3111 0 1 2
       %3113 = OpDot %float %3110 %3112
       %3114 = OpExtInst %float %1 NClamp %3113 %float_0 %float_1
       %3115 = OpLoad %v4float %r11
       %3116 = OpCompositeInsert %v4float %3114 %3115 0
               OpStore %r11 %3116
       %3117 = OpLoad %v4float %r11
       %3118 = OpCompositeExtract %float %3117 0
       %3119 = OpExtInst %float %1 Log2 %3118
       %3120 = OpLoad %v4float %r11
       %3121 = OpCompositeInsert %v4float %3119 %3120 0
               OpStore %r11 %3121
       %3122 = OpLoad %v4float %r9
       %3123 = OpCompositeExtract %float %3122 3
       %3124 = OpLoad %v4float %r11
       %3125 = OpCompositeExtract %float %3124 0
       %3126 = OpFMul %float %3123 %3125
       %3127 = OpLoad %v4float %r11
       %3128 = OpCompositeInsert %v4float %3126 %3127 0
               OpStore %r11 %3128
       %3129 = OpLoad %v4float %r11
       %3130 = OpCompositeExtract %float %3129 0
       %3131 = OpExtInst %float %1 Exp2 %3130
       %3132 = OpLoad %v4float %r11
       %3133 = OpCompositeInsert %v4float %3131 %3132 0
               OpStore %r11 %3133
       %3134 = OpLoad %v4float %r10
       %3135 = OpCompositeExtract %float %3134 3
       %3136 = OpLoad %v4float %r11
       %3137 = OpCompositeExtract %float %3136 0
       %3138 = OpFMul %float %3135 %3137
       %3139 = OpLoad %v4float %r10
       %3140 = OpCompositeInsert %v4float %3138 %3139 3
               OpStore %r10 %3140
       %3141 = OpLoad %v4float %r8
       %3142 = OpCompositeExtract %float %3141 3
       %3143 = OpLoad %v4float %r10
       %3144 = OpCompositeExtract %float %3143 3
       %3145 = OpFMul %float %3142 %3144
       %3146 = OpLoad %v4float %r8
       %3147 = OpCompositeInsert %v4float %3145 %3146 3
               OpStore %r8 %3147
       %3148 = OpLoad %v4float %r7
       %3149 = OpCompositeExtract %float %3148 3
       %3150 = OpLoad %v4float %r8
       %3151 = OpCompositeExtract %float %3150 3
       %3152 = OpFMul %float %3149 %3151
       %3153 = OpLoad %v4float %r7
       %3154 = OpCompositeInsert %v4float %3152 %3153 3
               OpStore %r7 %3154
       %3155 = OpLoad %v4float %r5
       %3156 = OpCompositeExtract %float %3155 3
       %3157 = OpLoad %v4float %r7
       %3158 = OpCompositeExtract %float %3157 3
       %3159 = OpFMul %float %3156 %3158
       %3160 = OpLoad %v4float %r7
       %3161 = OpCompositeInsert %v4float %3159 %3160 3
               OpStore %r7 %3161
       %3162 = OpLoad %v4float %r7
       %3163 = OpVectorShuffle %v3float %3162 %3162 3 3 3
       %3164 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_21
       %3165 = OpAccessChain %_ptr_Uniform_float %3164 %uint_0
       %3166 = OpLoad %float %3165
       %3167 = OpAccessChain %_ptr_Uniform_float %3164 %uint_1
       %3168 = OpLoad %float %3167
       %3169 = OpAccessChain %_ptr_Uniform_float %3164 %uint_2
       %3170 = OpLoad %float %3169
       %3171 = OpCompositeConstruct %v3float %3166 %3168 %3170
       %3172 = OpLoad %v4float %r9
       %3173 = OpVectorShuffle %v3float %3172 %3172 0 1 2
       %3174 = OpExtInst %v3float %1 Fma %3163 %3171 %3173
       %3175 = OpLoad %v4float %r9
       %3176 = OpVectorShuffle %v4float %3175 %3174 4 5 6 3
               OpStore %r9 %3176
               OpBranch %2777
       %2777 = OpLabel
               OpBranch %2751
       %3177 = OpLabel
       %3178 = OpBitcast %float %uint_4294967295
       %3179 = OpLoad %v4float %r4
       %3180 = OpCompositeInsert %v4float %3178 %3179 2
               OpStore %r4 %3180
               OpBranch %2751
       %2751 = OpLabel
       %3181 = OpLoad %v4float %r4
       %3182 = OpCompositeExtract %float %3181 2
       %3183 = OpBitcast %uint %3182
       %3184 = OpIEqual %bool %3183 %uint_0
               OpSelectionMerge %3186 None
               OpBranchConditional %3184 %3185 %3612
       %3185 = OpLabel
       %3187 = OpBitcast %int %uint_3
       %3188 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %3189 = OpAccessChain %_ptr_Uniform_float %3188 %uint_0
       %3190 = OpLoad %float %3189
       %3191 = OpBitcast %int %3190
       %3192 = OpSGreaterThanEqual %bool %3187 %3191
       %3193 = OpSelect %uint %3192 %uint_4294967295 %uint_0
       %3194 = OpBitcast %float %3193
       %3195 = OpLoad %v4float %r7
       %3196 = OpCompositeInsert %v4float %3194 %3195 3
               OpStore %r7 %3196
       %3197 = OpLoad %v4float %r4
       %3198 = OpCompositeExtract %float %3197 2
       %3199 = OpBitcast %uint %3198
       %3200 = OpLoad %v4float %r7
       %3201 = OpCompositeExtract %float %3200 3
       %3202 = OpBitcast %uint %3201
       %3203 = OpBitwiseOr %uint %3199 %3202
       %3204 = OpBitcast %float %3203
       %3205 = OpLoad %v4float %r4
       %3206 = OpCompositeInsert %v4float %3204 %3205 2
               OpStore %r4 %3206
       %3207 = OpLoad %v4float %r4
       %3208 = OpCompositeExtract %float %3207 2
       %3209 = OpBitcast %uint %3208
       %3210 = OpIEqual %bool %3209 %uint_0
               OpSelectionMerge %3212 None
               OpBranchConditional %3210 %3211 %3212
       %3211 = OpLabel
       %3214 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_22
       %3215 = OpAccessChain %_ptr_Uniform_float %3214 %uint_3
       %3216 = OpLoad %float %3215
       %3217 = OpBitcast %float %uint_0
       %3218 = OpFOrdEqual %bool %3216 %3217
       %3219 = OpSelect %uint %3218 %uint_4294967295 %uint_0
       %3220 = OpBitcast %float %3219
       %3221 = OpLoad %v4float %r7
       %3222 = OpCompositeInsert %v4float %3220 %3221 3
               OpStore %r7 %3222
       %3223 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3224 = OpLoad %v4float %3223
       %3225 = OpVectorShuffle %v3float %3224 %3224 0 1 2
       %3226 = OpFNegate %v3float %3225
       %3227 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_6
       %3228 = OpAccessChain %_ptr_Uniform_float %3227 %uint_0
       %3229 = OpLoad %float %3228
       %3230 = OpAccessChain %_ptr_Uniform_float %3227 %uint_1
       %3231 = OpLoad %float %3230
       %3232 = OpAccessChain %_ptr_Uniform_float %3227 %uint_2
       %3233 = OpLoad %float %3232
       %3234 = OpCompositeConstruct %v3float %3229 %3231 %3233
       %3235 = OpFAdd %v3float %3226 %3234
       %3236 = OpLoad %v4float %r11
       %3237 = OpVectorShuffle %v4float %3236 %3235 4 5 6 3
               OpStore %r11 %3237
       %3238 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3239 = OpLoad %v4float %3238
       %3240 = OpVectorShuffle %v3float %3239 %3239 0 1 2
       %3241 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_6
       %3242 = OpAccessChain %_ptr_Uniform_float %3241 %uint_0
       %3243 = OpLoad %float %3242
       %3244 = OpAccessChain %_ptr_Uniform_float %3241 %uint_1
       %3245 = OpLoad %float %3244
       %3246 = OpAccessChain %_ptr_Uniform_float %3241 %uint_2
       %3247 = OpLoad %float %3246
       %3248 = OpCompositeConstruct %v3float %3243 %3245 %3247
       %3249 = OpFNegate %v3float %3248
       %3250 = OpFAdd %v3float %3240 %3249
       %3251 = OpLoad %v4float %r12
       %3252 = OpVectorShuffle %v4float %3251 %3250 4 5 6 3
               OpStore %r12 %3252
       %3253 = OpLoad %v4float %r12
       %3254 = OpVectorShuffle %v3float %3253 %3253 0 1 2
       %3255 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_14
       %3256 = OpAccessChain %_ptr_Uniform_float %3255 %uint_0
       %3257 = OpLoad %float %3256
       %3258 = OpAccessChain %_ptr_Uniform_float %3255 %uint_1
       %3259 = OpLoad %float %3258
       %3260 = OpAccessChain %_ptr_Uniform_float %3255 %uint_2
       %3261 = OpLoad %float %3260
       %3262 = OpCompositeConstruct %v3float %3257 %3259 %3261
       %3263 = OpDot %float %3254 %3262
       %3264 = OpLoad %v4float %r8
       %3265 = OpCompositeInsert %v4float %3263 %3264 3
               OpStore %r8 %3265
       %3266 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_22
       %3267 = OpAccessChain %_ptr_Uniform_float %3266 %uint_3
       %3268 = OpLoad %float %3267
       %3269 = OpBitcast %float %uint_953267991
       %3270 = OpFAdd %float %3268 %3269
       %3271 = OpLoad %v4float %r10
       %3272 = OpCompositeInsert %v4float %3270 %3271 3
               OpStore %r10 %3272
       %3273 = OpLoad %v4float %r8
       %3274 = OpCompositeExtract %float %3273 3
       %3275 = OpLoad %v4float %r10
       %3276 = OpCompositeExtract %float %3275 3
       %3277 = OpFDiv %float %3274 %3276
       %3278 = OpExtInst %float %1 NClamp %3277 %float_0 %float_1
       %3279 = OpLoad %v4float %r8
       %3280 = OpCompositeInsert %v4float %3278 %3279 3
               OpStore %r8 %3280
       %3281 = OpLoad %v4float %r8
       %3282 = OpCompositeExtract %float %3281 3
       %3283 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_22
       %3284 = OpAccessChain %_ptr_Uniform_float %3283 %uint_3
       %3285 = OpLoad %float %3284
       %3286 = OpFMul %float %3282 %3285
       %3287 = OpLoad %v4float %r8
       %3288 = OpCompositeInsert %v4float %3286 %3287 3
               OpStore %r8 %3288
       %3289 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_14
       %3290 = OpAccessChain %_ptr_Uniform_float %3289 %uint_0
       %3291 = OpLoad %float %3290
       %3292 = OpAccessChain %_ptr_Uniform_float %3289 %uint_1
       %3293 = OpLoad %float %3292
       %3294 = OpAccessChain %_ptr_Uniform_float %3289 %uint_2
       %3295 = OpLoad %float %3294
       %3296 = OpCompositeConstruct %v3float %3291 %3293 %3295
       %3297 = OpLoad %v4float %r8
       %3298 = OpVectorShuffle %v3float %3297 %3297 3 3 3
       %3299 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_6
       %3300 = OpAccessChain %_ptr_Uniform_float %3299 %uint_0
       %3301 = OpLoad %float %3300
       %3302 = OpAccessChain %_ptr_Uniform_float %3299 %uint_1
       %3303 = OpLoad %float %3302
       %3304 = OpAccessChain %_ptr_Uniform_float %3299 %uint_2
       %3305 = OpLoad %float %3304
       %3306 = OpCompositeConstruct %v3float %3301 %3303 %3305
       %3307 = OpExtInst %v3float %1 Fma %3296 %3298 %3306
       %3308 = OpLoad %v4float %r12
       %3309 = OpVectorShuffle %v4float %3308 %3307 4 5 6 3
               OpStore %r12 %3309
       %3310 = OpLoad %v4float %r12
       %3311 = OpVectorShuffle %v3float %3310 %3310 0 1 2
       %3312 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3313 = OpLoad %v4float %3312
       %3314 = OpVectorShuffle %v3float %3313 %3313 0 1 2
       %3315 = OpFNegate %v3float %3314
       %3316 = OpFAdd %v3float %3311 %3315
       %3317 = OpLoad %v4float %r12
       %3318 = OpVectorShuffle %v4float %3317 %3316 4 5 6 3
               OpStore %r12 %3318
       %3319 = OpLoad %v4float %r7
       %3320 = OpVectorShuffle %v3float %3319 %3319 3 3 3
       %3321 = OpBitcast %v3uint %3320
       %3322 = OpLoad %v4float %r11
       %3323 = OpVectorShuffle %v3float %3322 %3322 0 1 2
       %3324 = OpLoad %v4float %r12
       %3325 = OpVectorShuffle %v3float %3324 %3324 0 1 2
       %3326 = OpINotEqual %v3bool %3321 %1998
       %3327 = OpSelect %v3float %3326 %3323 %3325
       %3328 = OpLoad %v4float %r11
       %3329 = OpVectorShuffle %v4float %3328 %3327 4 5 6 3
               OpStore %r11 %3329
       %3330 = OpLoad %v4float %r11
       %3331 = OpVectorShuffle %v3float %3330 %3330 0 1 2
       %3332 = OpLoad %v4float %r11
       %3333 = OpVectorShuffle %v3float %3332 %3332 0 1 2
       %3334 = OpDot %float %3331 %3333
       %3335 = OpLoad %v4float %r7
       %3336 = OpCompositeInsert %v4float %3334 %3335 3
               OpStore %r7 %3336
       %3337 = OpLoad %v4float %r11
       %3338 = OpVectorShuffle %v3float %3337 %3337 0 1 2
       %3339 = OpBitcast %v3float %2013
       %3340 = OpFAdd %v3float %3338 %3339
       %3341 = OpLoad %v4float %r11
       %3342 = OpVectorShuffle %v4float %3341 %3340 4 5 6 3
               OpStore %r11 %3342
       %3343 = OpLoad %v4float %r11
       %3344 = OpVectorShuffle %v3float %3343 %3343 0 1 2
       %3345 = OpLoad %v4float %r11
       %3346 = OpVectorShuffle %v3float %3345 %3345 0 1 2
       %3347 = OpDot %float %3344 %3346
       %3348 = OpLoad %v4float %r8
       %3349 = OpCompositeInsert %v4float %3347 %3348 3
               OpStore %r8 %3349
       %3350 = OpLoad %v4float %r8
       %3351 = OpCompositeExtract %float %3350 3
       %3352 = OpExtInst %float %1 InverseSqrt %3351
       %3353 = OpLoad %v4float %r8
       %3354 = OpCompositeInsert %v4float %3352 %3353 3
               OpStore %r8 %3354
       %3355 = OpLoad %v4float %r8
       %3356 = OpVectorShuffle %v3float %3355 %3355 3 3 3
       %3357 = OpLoad %v4float %r11
       %3358 = OpVectorShuffle %v3float %3357 %3357 0 1 2
       %3359 = OpFMul %v3float %3356 %3358
       %3360 = OpLoad %v4float %r11
       %3361 = OpVectorShuffle %v4float %3360 %3359 4 5 6 3
               OpStore %r11 %3361
       %3362 = OpLoad %v4float %r7
       %3363 = OpCompositeExtract %float %3362 3
       %3364 = OpFNegate %float %3363
       %3365 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_6
       %3366 = OpAccessChain %_ptr_Uniform_float %3365 %uint_3
       %3367 = OpLoad %float %3366
       %3368 = OpBitcast %float %uint_1065353216
       %3369 = OpExtInst %float %1 Fma %3364 %3367 %3368
       %3370 = OpExtInst %float %1 NClamp %3369 %float_0 %float_1
       %3371 = OpLoad %v4float %r7
       %3372 = OpCompositeInsert %v4float %3370 %3371 3
               OpStore %r7 %3372
       %3373 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_14
       %3374 = OpAccessChain %_ptr_Uniform_float %3373 %uint_3
       %3375 = OpLoad %float %3374
       %3376 = OpFNegate %float %3375
       %3377 = OpBitcast %float %uint_1065353216
       %3378 = OpFAdd %float %3376 %3377
       %3379 = OpLoad %v4float %r8
       %3380 = OpCompositeInsert %v4float %3378 %3379 3
               OpStore %r8 %3380
       %3381 = OpLoad %v4float %r8
       %3382 = OpCompositeExtract %float %3381 3
       %3383 = OpLoad %v4float %r7
       %3384 = OpCompositeExtract %float %3383 3
       %3385 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_14
       %3386 = OpAccessChain %_ptr_Uniform_float %3385 %uint_3
       %3387 = OpLoad %float %3386
       %3388 = OpExtInst %float %1 Fma %3382 %3384 %3387
       %3389 = OpLoad %v4float %r8
       %3390 = OpCompositeInsert %v4float %3388 %3389 3
               OpStore %r8 %3390
       %3391 = OpLoad %v4float %r7
       %3392 = OpCompositeExtract %float %3391 3
       %3393 = OpLoad %v4float %r8
       %3394 = OpCompositeExtract %float %3393 3
       %3395 = OpFDiv %float %3392 %3394
       %3396 = OpLoad %v4float %r7
       %3397 = OpCompositeInsert %v4float %3395 %3396 3
               OpStore %r7 %3397
       %3398 = OpLoad %v4float %r11
       %3399 = OpVectorShuffle %v3float %3398 %3398 0 1 2
       %3400 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_14
       %3401 = OpAccessChain %_ptr_Uniform_float %3400 %uint_0
       %3402 = OpLoad %float %3401
       %3403 = OpAccessChain %_ptr_Uniform_float %3400 %uint_1
       %3404 = OpLoad %float %3403
       %3405 = OpAccessChain %_ptr_Uniform_float %3400 %uint_2
       %3406 = OpLoad %float %3405
       %3407 = OpCompositeConstruct %v3float %3402 %3404 %3406
       %3408 = OpFNegate %v3float %3407
       %3409 = OpDot %float %3399 %3408
       %3410 = OpLoad %v4float %r8
       %3411 = OpCompositeInsert %v4float %3409 %3410 3
               OpStore %r8 %3411
       %3412 = OpLoad %v4float %r8
       %3413 = OpCompositeExtract %float %3412 3
       %3415 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_30
       %3416 = OpAccessChain %_ptr_Uniform_float %3415 %uint_0
       %3417 = OpLoad %float %3416
       %3419 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_38
       %3420 = OpAccessChain %_ptr_Uniform_float %3419 %uint_0
       %3421 = OpLoad %float %3420
       %3422 = OpExtInst %float %1 Fma %3413 %3417 %3421
       %3423 = OpExtInst %float %1 NClamp %3422 %float_0 %float_1
       %3424 = OpLoad %v4float %r8
       %3425 = OpCompositeInsert %v4float %3423 %3424 3
               OpStore %r8 %3425
       %3426 = OpLoad %v4float %r11
       %3427 = OpVectorShuffle %v3float %3426 %3426 0 1 2
       %3428 = OpLoad %v4float %r2
       %3429 = OpVectorShuffle %v3float %3428 %3428 0 1 2
       %3430 = OpDot %float %3427 %3429
       %3431 = OpExtInst %float %1 NClamp %3430 %float_0 %float_1
       %3432 = OpLoad %v4float %r10
       %3433 = OpCompositeInsert %v4float %3431 %3432 3
               OpStore %r10 %3433
       %3434 = OpLoad %v4float %r8
       %3435 = OpCompositeExtract %float %3434 3
       %3436 = OpLoad %v4float %r10
       %3437 = OpCompositeExtract %float %3436 3
       %3438 = OpFMul %float %3435 %3437
       %3439 = OpLoad %v4float %r8
       %3440 = OpCompositeInsert %v4float %3438 %3439 3
               OpStore %r8 %3440
       %3441 = OpLoad %v4float %r7
       %3442 = OpCompositeExtract %float %3441 3
       %3443 = OpLoad %v4float %r8
       %3444 = OpCompositeExtract %float %3443 3
       %3445 = OpFMul %float %3442 %3444
       %3446 = OpLoad %v4float %r10
       %3447 = OpCompositeInsert %v4float %3445 %3446 3
               OpStore %r10 %3447
       %3448 = OpLoad %v4float %r10
       %3449 = OpVectorShuffle %v3float %3448 %3448 3 3 3
       %3450 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_22
       %3451 = OpAccessChain %_ptr_Uniform_float %3450 %uint_0
       %3452 = OpLoad %float %3451
       %3453 = OpAccessChain %_ptr_Uniform_float %3450 %uint_1
       %3454 = OpLoad %float %3453
       %3455 = OpAccessChain %_ptr_Uniform_float %3450 %uint_2
       %3456 = OpLoad %float %3455
       %3457 = OpCompositeConstruct %v3float %3452 %3454 %3456
       %3458 = OpFMul %v3float %3449 %3457
       %3459 = OpLoad %v4float %r12
       %3460 = OpVectorShuffle %v4float %3459 %3458 4 5 6 3
               OpStore %r12 %3460
       %3461 = OpLoad %v4float %r12
       %3462 = OpVectorShuffle %v3float %3461 %3461 0 1 2
       %3463 = OpLoad %v4float %r0
       %3464 = OpVectorShuffle %v3float %3463 %3463 0 1 2
       %3465 = OpLoad %v4float %r10
       %3466 = OpVectorShuffle %v3float %3465 %3465 0 1 2
       %3467 = OpExtInst %v3float %1 Fma %3462 %3464 %3466
       %3468 = OpLoad %v4float %r10
       %3469 = OpVectorShuffle %v4float %3468 %3467 4 5 6 3
               OpStore %r10 %3469
       %3470 = OpLoad %v4float %r5
       %3471 = OpVectorShuffle %v3float %3470 %3470 0 1 2
       %3472 = OpLoad %v4float %r1
       %3473 = OpVectorShuffle %v3float %3472 %3472 1 1 1
       %3474 = OpLoad %v4float %r11
       %3475 = OpVectorShuffle %v3float %3474 %3474 0 1 2
       %3476 = OpExtInst %v3float %1 Fma %3471 %3473 %3475
       %3477 = OpLoad %v4float %r11
       %3478 = OpVectorShuffle %v4float %3477 %3476 4 5 6 3
               OpStore %r11 %3478
       %3479 = OpLoad %v4float %r11
       %3480 = OpVectorShuffle %v3float %3479 %3479 0 1 2
       %3481 = OpLoad %v4float %r11
       %3482 = OpVectorShuffle %v3float %3481 %3481 0 1 2
       %3483 = OpDot %float %3480 %3482
       %3484 = OpLoad %v4float %r10
       %3485 = OpCompositeInsert %v4float %3483 %3484 3
               OpStore %r10 %3485
       %3486 = OpLoad %v4float %r10
       %3487 = OpCompositeExtract %float %3486 3
       %3488 = OpExtInst %float %1 InverseSqrt %3487
       %3489 = OpLoad %v4float %r10
       %3490 = OpCompositeInsert %v4float %3488 %3489 3
               OpStore %r10 %3490
       %3491 = OpLoad %v4float %r10
       %3492 = OpVectorShuffle %v3float %3491 %3491 3 3 3
       %3493 = OpLoad %v4float %r11
       %3494 = OpVectorShuffle %v3float %3493 %3493 0 1 2
       %3495 = OpFMul %v3float %3492 %3494
       %3496 = OpLoad %v4float %r11
       %3497 = OpVectorShuffle %v4float %3496 %3495 4 5 6 3
               OpStore %r11 %3497
       %3498 = OpLoad %v4float %r11
       %3499 = OpVectorShuffle %v3float %3498 %3498 0 1 2
       %3500 = OpLoad %v4float %r6
       %3501 = OpVectorShuffle %v3float %3500 %3500 0 1 2
       %3502 = OpDot %float %3499 %3501
       %3503 = OpExtInst %float %1 NClamp %3502 %float_0 %float_1
       %3504 = OpLoad %v4float %r10
       %3505 = OpCompositeInsert %v4float %3503 %3504 3
               OpStore %r10 %3505
       %3506 = OpLoad %v4float %r10
       %3507 = OpCompositeExtract %float %3506 3
       %3508 = OpFNegate %float %3507
       %3509 = OpBitcast %float %uint_1065353216
       %3510 = OpFAdd %float %3508 %3509
       %3511 = OpLoad %v4float %r10
       %3512 = OpCompositeInsert %v4float %3510 %3511 3
               OpStore %r10 %3512
       %3513 = OpLoad %v4float %r10
       %3514 = OpCompositeExtract %float %3513 3
       %3515 = OpLoad %v4float %r10
       %3516 = OpCompositeExtract %float %3515 3
       %3517 = OpFMul %float %3514 %3516
       %3518 = OpLoad %v4float %r11
       %3519 = OpCompositeInsert %v4float %3517 %3518 3
               OpStore %r11 %3519
       %3520 = OpLoad %v4float %r11
       %3521 = OpCompositeExtract %float %3520 3
       %3522 = OpLoad %v4float %r11
       %3523 = OpCompositeExtract %float %3522 3
       %3524 = OpFMul %float %3521 %3523
       %3525 = OpLoad %v4float %r11
       %3526 = OpCompositeInsert %v4float %3524 %3525 3
               OpStore %r11 %3526
       %3527 = OpLoad %v4float %r10
       %3528 = OpCompositeExtract %float %3527 3
       %3529 = OpLoad %v4float %r11
       %3530 = OpCompositeExtract %float %3529 3
       %3531 = OpFMul %float %3528 %3530
       %3532 = OpLoad %v4float %r10
       %3533 = OpCompositeInsert %v4float %3531 %3532 3
               OpStore %r10 %3533
       %3534 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %3535 = OpAccessChain %_ptr_Uniform_float %3534 %uint_0
       %3536 = OpLoad %float %3535
       %3537 = OpLoad %v4float %r10
       %3538 = OpCompositeExtract %float %3537 3
       %3539 = OpLoad %v4float %r4
       %3540 = OpCompositeExtract %float %3539 3
       %3541 = OpExtInst %float %1 Fma %3536 %3538 %3540
       %3542 = OpLoad %v4float %r10
       %3543 = OpCompositeInsert %v4float %3541 %3542 3
               OpStore %r10 %3543
       %3544 = OpLoad %v4float %r11
       %3545 = OpVectorShuffle %v3float %3544 %3544 0 1 2
       %3546 = OpLoad %v4float %r2
       %3547 = OpVectorShuffle %v3float %3546 %3546 0 1 2
       %3548 = OpDot %float %3545 %3547
       %3549 = OpExtInst %float %1 NClamp %3548 %float_0 %float_1
       %3550 = OpLoad %v4float %r11
       %3551 = OpCompositeInsert %v4float %3549 %3550 0
               OpStore %r11 %3551
       %3552 = OpLoad %v4float %r11
       %3553 = OpCompositeExtract %float %3552 0
       %3554 = OpExtInst %float %1 Log2 %3553
       %3555 = OpLoad %v4float %r11
       %3556 = OpCompositeInsert %v4float %3554 %3555 0
               OpStore %r11 %3556
       %3557 = OpLoad %v4float %r9
       %3558 = OpCompositeExtract %float %3557 3
       %3559 = OpLoad %v4float %r11
       %3560 = OpCompositeExtract %float %3559 0
       %3561 = OpFMul %float %3558 %3560
       %3562 = OpLoad %v4float %r11
       %3563 = OpCompositeInsert %v4float %3561 %3562 0
               OpStore %r11 %3563
       %3564 = OpLoad %v4float %r11
       %3565 = OpCompositeExtract %float %3564 0
       %3566 = OpExtInst %float %1 Exp2 %3565
       %3567 = OpLoad %v4float %r11
       %3568 = OpCompositeInsert %v4float %3566 %3567 0
               OpStore %r11 %3568
       %3569 = OpLoad %v4float %r10
       %3570 = OpCompositeExtract %float %3569 3
       %3571 = OpLoad %v4float %r11
       %3572 = OpCompositeExtract %float %3571 0
       %3573 = OpFMul %float %3570 %3572
       %3574 = OpLoad %v4float %r10
       %3575 = OpCompositeInsert %v4float %3573 %3574 3
               OpStore %r10 %3575
       %3576 = OpLoad %v4float %r8
       %3577 = OpCompositeExtract %float %3576 3
       %3578 = OpLoad %v4float %r10
       %3579 = OpCompositeExtract %float %3578 3
       %3580 = OpFMul %float %3577 %3579
       %3581 = OpLoad %v4float %r8
       %3582 = OpCompositeInsert %v4float %3580 %3581 3
               OpStore %r8 %3582
       %3583 = OpLoad %v4float %r7
       %3584 = OpCompositeExtract %float %3583 3
       %3585 = OpLoad %v4float %r8
       %3586 = OpCompositeExtract %float %3585 3
       %3587 = OpFMul %float %3584 %3586
       %3588 = OpLoad %v4float %r7
       %3589 = OpCompositeInsert %v4float %3587 %3588 3
               OpStore %r7 %3589
       %3590 = OpLoad %v4float %r5
       %3591 = OpCompositeExtract %float %3590 3
       %3592 = OpLoad %v4float %r7
       %3593 = OpCompositeExtract %float %3592 3
       %3594 = OpFMul %float %3591 %3593
       %3595 = OpLoad %v4float %r7
       %3596 = OpCompositeInsert %v4float %3594 %3595 3
               OpStore %r7 %3596
       %3597 = OpLoad %v4float %r7
       %3598 = OpVectorShuffle %v3float %3597 %3597 3 3 3
       %3599 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_22
       %3600 = OpAccessChain %_ptr_Uniform_float %3599 %uint_0
       %3601 = OpLoad %float %3600
       %3602 = OpAccessChain %_ptr_Uniform_float %3599 %uint_1
       %3603 = OpLoad %float %3602
       %3604 = OpAccessChain %_ptr_Uniform_float %3599 %uint_2
       %3605 = OpLoad %float %3604
       %3606 = OpCompositeConstruct %v3float %3601 %3603 %3605
       %3607 = OpLoad %v4float %r9
       %3608 = OpVectorShuffle %v3float %3607 %3607 0 1 2
       %3609 = OpExtInst %v3float %1 Fma %3598 %3606 %3608
       %3610 = OpLoad %v4float %r9
       %3611 = OpVectorShuffle %v4float %3610 %3609 4 5 6 3
               OpStore %r9 %3611
               OpBranch %3212
       %3212 = OpLabel
               OpBranch %3186
       %3612 = OpLabel
       %3613 = OpBitcast %float %uint_4294967295
       %3614 = OpLoad %v4float %r4
       %3615 = OpCompositeInsert %v4float %3613 %3614 2
               OpStore %r4 %3615
               OpBranch %3186
       %3186 = OpLabel
       %3616 = OpLoad %v4float %r4
       %3617 = OpCompositeExtract %float %3616 2
       %3618 = OpBitcast %uint %3617
       %3619 = OpIEqual %bool %3618 %uint_0
               OpSelectionMerge %3621 None
               OpBranchConditional %3619 %3620 %4047
       %3620 = OpLabel
       %3622 = OpBitcast %int %uint_4
       %3623 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %3624 = OpAccessChain %_ptr_Uniform_float %3623 %uint_0
       %3625 = OpLoad %float %3624
       %3626 = OpBitcast %int %3625
       %3627 = OpSGreaterThanEqual %bool %3622 %3626
       %3628 = OpSelect %uint %3627 %uint_4294967295 %uint_0
       %3629 = OpBitcast %float %3628
       %3630 = OpLoad %v4float %r7
       %3631 = OpCompositeInsert %v4float %3629 %3630 3
               OpStore %r7 %3631
       %3632 = OpLoad %v4float %r4
       %3633 = OpCompositeExtract %float %3632 2
       %3634 = OpBitcast %uint %3633
       %3635 = OpLoad %v4float %r7
       %3636 = OpCompositeExtract %float %3635 3
       %3637 = OpBitcast %uint %3636
       %3638 = OpBitwiseOr %uint %3634 %3637
       %3639 = OpBitcast %float %3638
       %3640 = OpLoad %v4float %r4
       %3641 = OpCompositeInsert %v4float %3639 %3640 2
               OpStore %r4 %3641
       %3642 = OpLoad %v4float %r4
       %3643 = OpCompositeExtract %float %3642 2
       %3644 = OpBitcast %uint %3643
       %3645 = OpIEqual %bool %3644 %uint_0
               OpSelectionMerge %3647 None
               OpBranchConditional %3645 %3646 %3647
       %3646 = OpLabel
       %3649 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_23
       %3650 = OpAccessChain %_ptr_Uniform_float %3649 %uint_3
       %3651 = OpLoad %float %3650
       %3652 = OpBitcast %float %uint_0
       %3653 = OpFOrdEqual %bool %3651 %3652
       %3654 = OpSelect %uint %3653 %uint_4294967295 %uint_0
       %3655 = OpBitcast %float %3654
       %3656 = OpLoad %v4float %r7
       %3657 = OpCompositeInsert %v4float %3655 %3656 3
               OpStore %r7 %3657
       %3658 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3659 = OpLoad %v4float %3658
       %3660 = OpVectorShuffle %v3float %3659 %3659 0 1 2
       %3661 = OpFNegate %v3float %3660
       %3662 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_7
       %3663 = OpAccessChain %_ptr_Uniform_float %3662 %uint_0
       %3664 = OpLoad %float %3663
       %3665 = OpAccessChain %_ptr_Uniform_float %3662 %uint_1
       %3666 = OpLoad %float %3665
       %3667 = OpAccessChain %_ptr_Uniform_float %3662 %uint_2
       %3668 = OpLoad %float %3667
       %3669 = OpCompositeConstruct %v3float %3664 %3666 %3668
       %3670 = OpFAdd %v3float %3661 %3669
       %3671 = OpLoad %v4float %r11
       %3672 = OpVectorShuffle %v4float %3671 %3670 4 5 6 3
               OpStore %r11 %3672
       %3673 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3674 = OpLoad %v4float %3673
       %3675 = OpVectorShuffle %v3float %3674 %3674 0 1 2
       %3676 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_7
       %3677 = OpAccessChain %_ptr_Uniform_float %3676 %uint_0
       %3678 = OpLoad %float %3677
       %3679 = OpAccessChain %_ptr_Uniform_float %3676 %uint_1
       %3680 = OpLoad %float %3679
       %3681 = OpAccessChain %_ptr_Uniform_float %3676 %uint_2
       %3682 = OpLoad %float %3681
       %3683 = OpCompositeConstruct %v3float %3678 %3680 %3682
       %3684 = OpFNegate %v3float %3683
       %3685 = OpFAdd %v3float %3675 %3684
       %3686 = OpLoad %v4float %r12
       %3687 = OpVectorShuffle %v4float %3686 %3685 4 5 6 3
               OpStore %r12 %3687
       %3688 = OpLoad %v4float %r12
       %3689 = OpVectorShuffle %v3float %3688 %3688 0 1 2
       %3690 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_15
       %3691 = OpAccessChain %_ptr_Uniform_float %3690 %uint_0
       %3692 = OpLoad %float %3691
       %3693 = OpAccessChain %_ptr_Uniform_float %3690 %uint_1
       %3694 = OpLoad %float %3693
       %3695 = OpAccessChain %_ptr_Uniform_float %3690 %uint_2
       %3696 = OpLoad %float %3695
       %3697 = OpCompositeConstruct %v3float %3692 %3694 %3696
       %3698 = OpDot %float %3689 %3697
       %3699 = OpLoad %v4float %r8
       %3700 = OpCompositeInsert %v4float %3698 %3699 3
               OpStore %r8 %3700
       %3701 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_23
       %3702 = OpAccessChain %_ptr_Uniform_float %3701 %uint_3
       %3703 = OpLoad %float %3702
       %3704 = OpBitcast %float %uint_953267991
       %3705 = OpFAdd %float %3703 %3704
       %3706 = OpLoad %v4float %r10
       %3707 = OpCompositeInsert %v4float %3705 %3706 3
               OpStore %r10 %3707
       %3708 = OpLoad %v4float %r8
       %3709 = OpCompositeExtract %float %3708 3
       %3710 = OpLoad %v4float %r10
       %3711 = OpCompositeExtract %float %3710 3
       %3712 = OpFDiv %float %3709 %3711
       %3713 = OpExtInst %float %1 NClamp %3712 %float_0 %float_1
       %3714 = OpLoad %v4float %r8
       %3715 = OpCompositeInsert %v4float %3713 %3714 3
               OpStore %r8 %3715
       %3716 = OpLoad %v4float %r8
       %3717 = OpCompositeExtract %float %3716 3
       %3718 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_23
       %3719 = OpAccessChain %_ptr_Uniform_float %3718 %uint_3
       %3720 = OpLoad %float %3719
       %3721 = OpFMul %float %3717 %3720
       %3722 = OpLoad %v4float %r8
       %3723 = OpCompositeInsert %v4float %3721 %3722 3
               OpStore %r8 %3723
       %3724 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_15
       %3725 = OpAccessChain %_ptr_Uniform_float %3724 %uint_0
       %3726 = OpLoad %float %3725
       %3727 = OpAccessChain %_ptr_Uniform_float %3724 %uint_1
       %3728 = OpLoad %float %3727
       %3729 = OpAccessChain %_ptr_Uniform_float %3724 %uint_2
       %3730 = OpLoad %float %3729
       %3731 = OpCompositeConstruct %v3float %3726 %3728 %3730
       %3732 = OpLoad %v4float %r8
       %3733 = OpVectorShuffle %v3float %3732 %3732 3 3 3
       %3734 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_7
       %3735 = OpAccessChain %_ptr_Uniform_float %3734 %uint_0
       %3736 = OpLoad %float %3735
       %3737 = OpAccessChain %_ptr_Uniform_float %3734 %uint_1
       %3738 = OpLoad %float %3737
       %3739 = OpAccessChain %_ptr_Uniform_float %3734 %uint_2
       %3740 = OpLoad %float %3739
       %3741 = OpCompositeConstruct %v3float %3736 %3738 %3740
       %3742 = OpExtInst %v3float %1 Fma %3731 %3733 %3741
       %3743 = OpLoad %v4float %r12
       %3744 = OpVectorShuffle %v4float %3743 %3742 4 5 6 3
               OpStore %r12 %3744
       %3745 = OpLoad %v4float %r12
       %3746 = OpVectorShuffle %v3float %3745 %3745 0 1 2
       %3747 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %3748 = OpLoad %v4float %3747
       %3749 = OpVectorShuffle %v3float %3748 %3748 0 1 2
       %3750 = OpFNegate %v3float %3749
       %3751 = OpFAdd %v3float %3746 %3750
       %3752 = OpLoad %v4float %r12
       %3753 = OpVectorShuffle %v4float %3752 %3751 4 5 6 3
               OpStore %r12 %3753
       %3754 = OpLoad %v4float %r7
       %3755 = OpVectorShuffle %v3float %3754 %3754 3 3 3
       %3756 = OpBitcast %v3uint %3755
       %3757 = OpLoad %v4float %r11
       %3758 = OpVectorShuffle %v3float %3757 %3757 0 1 2
       %3759 = OpLoad %v4float %r12
       %3760 = OpVectorShuffle %v3float %3759 %3759 0 1 2
       %3761 = OpINotEqual %v3bool %3756 %1998
       %3762 = OpSelect %v3float %3761 %3758 %3760
       %3763 = OpLoad %v4float %r11
       %3764 = OpVectorShuffle %v4float %3763 %3762 4 5 6 3
               OpStore %r11 %3764
       %3765 = OpLoad %v4float %r11
       %3766 = OpVectorShuffle %v3float %3765 %3765 0 1 2
       %3767 = OpLoad %v4float %r11
       %3768 = OpVectorShuffle %v3float %3767 %3767 0 1 2
       %3769 = OpDot %float %3766 %3768
       %3770 = OpLoad %v4float %r7
       %3771 = OpCompositeInsert %v4float %3769 %3770 3
               OpStore %r7 %3771
       %3772 = OpLoad %v4float %r11
       %3773 = OpVectorShuffle %v3float %3772 %3772 0 1 2
       %3774 = OpBitcast %v3float %2013
       %3775 = OpFAdd %v3float %3773 %3774
       %3776 = OpLoad %v4float %r11
       %3777 = OpVectorShuffle %v4float %3776 %3775 4 5 6 3
               OpStore %r11 %3777
       %3778 = OpLoad %v4float %r11
       %3779 = OpVectorShuffle %v3float %3778 %3778 0 1 2
       %3780 = OpLoad %v4float %r11
       %3781 = OpVectorShuffle %v3float %3780 %3780 0 1 2
       %3782 = OpDot %float %3779 %3781
       %3783 = OpLoad %v4float %r8
       %3784 = OpCompositeInsert %v4float %3782 %3783 3
               OpStore %r8 %3784
       %3785 = OpLoad %v4float %r8
       %3786 = OpCompositeExtract %float %3785 3
       %3787 = OpExtInst %float %1 InverseSqrt %3786
       %3788 = OpLoad %v4float %r8
       %3789 = OpCompositeInsert %v4float %3787 %3788 3
               OpStore %r8 %3789
       %3790 = OpLoad %v4float %r8
       %3791 = OpVectorShuffle %v3float %3790 %3790 3 3 3
       %3792 = OpLoad %v4float %r11
       %3793 = OpVectorShuffle %v3float %3792 %3792 0 1 2
       %3794 = OpFMul %v3float %3791 %3793
       %3795 = OpLoad %v4float %r11
       %3796 = OpVectorShuffle %v4float %3795 %3794 4 5 6 3
               OpStore %r11 %3796
       %3797 = OpLoad %v4float %r7
       %3798 = OpCompositeExtract %float %3797 3
       %3799 = OpFNegate %float %3798
       %3800 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_7
       %3801 = OpAccessChain %_ptr_Uniform_float %3800 %uint_3
       %3802 = OpLoad %float %3801
       %3803 = OpBitcast %float %uint_1065353216
       %3804 = OpExtInst %float %1 Fma %3799 %3802 %3803
       %3805 = OpExtInst %float %1 NClamp %3804 %float_0 %float_1
       %3806 = OpLoad %v4float %r7
       %3807 = OpCompositeInsert %v4float %3805 %3806 3
               OpStore %r7 %3807
       %3808 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_15
       %3809 = OpAccessChain %_ptr_Uniform_float %3808 %uint_3
       %3810 = OpLoad %float %3809
       %3811 = OpFNegate %float %3810
       %3812 = OpBitcast %float %uint_1065353216
       %3813 = OpFAdd %float %3811 %3812
       %3814 = OpLoad %v4float %r8
       %3815 = OpCompositeInsert %v4float %3813 %3814 3
               OpStore %r8 %3815
       %3816 = OpLoad %v4float %r8
       %3817 = OpCompositeExtract %float %3816 3
       %3818 = OpLoad %v4float %r7
       %3819 = OpCompositeExtract %float %3818 3
       %3820 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_15
       %3821 = OpAccessChain %_ptr_Uniform_float %3820 %uint_3
       %3822 = OpLoad %float %3821
       %3823 = OpExtInst %float %1 Fma %3817 %3819 %3822
       %3824 = OpLoad %v4float %r8
       %3825 = OpCompositeInsert %v4float %3823 %3824 3
               OpStore %r8 %3825
       %3826 = OpLoad %v4float %r7
       %3827 = OpCompositeExtract %float %3826 3
       %3828 = OpLoad %v4float %r8
       %3829 = OpCompositeExtract %float %3828 3
       %3830 = OpFDiv %float %3827 %3829
       %3831 = OpLoad %v4float %r7
       %3832 = OpCompositeInsert %v4float %3830 %3831 3
               OpStore %r7 %3832
       %3833 = OpLoad %v4float %r11
       %3834 = OpVectorShuffle %v3float %3833 %3833 0 1 2
       %3835 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_15
       %3836 = OpAccessChain %_ptr_Uniform_float %3835 %uint_0
       %3837 = OpLoad %float %3836
       %3838 = OpAccessChain %_ptr_Uniform_float %3835 %uint_1
       %3839 = OpLoad %float %3838
       %3840 = OpAccessChain %_ptr_Uniform_float %3835 %uint_2
       %3841 = OpLoad %float %3840
       %3842 = OpCompositeConstruct %v3float %3837 %3839 %3841
       %3843 = OpFNegate %v3float %3842
       %3844 = OpDot %float %3834 %3843
       %3845 = OpLoad %v4float %r8
       %3846 = OpCompositeInsert %v4float %3844 %3845 3
               OpStore %r8 %3846
       %3847 = OpLoad %v4float %r8
       %3848 = OpCompositeExtract %float %3847 3
       %3850 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_31
       %3851 = OpAccessChain %_ptr_Uniform_float %3850 %uint_0
       %3852 = OpLoad %float %3851
       %3854 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_39
       %3855 = OpAccessChain %_ptr_Uniform_float %3854 %uint_0
       %3856 = OpLoad %float %3855
       %3857 = OpExtInst %float %1 Fma %3848 %3852 %3856
       %3858 = OpExtInst %float %1 NClamp %3857 %float_0 %float_1
       %3859 = OpLoad %v4float %r8
       %3860 = OpCompositeInsert %v4float %3858 %3859 3
               OpStore %r8 %3860
       %3861 = OpLoad %v4float %r11
       %3862 = OpVectorShuffle %v3float %3861 %3861 0 1 2
       %3863 = OpLoad %v4float %r2
       %3864 = OpVectorShuffle %v3float %3863 %3863 0 1 2
       %3865 = OpDot %float %3862 %3864
       %3866 = OpExtInst %float %1 NClamp %3865 %float_0 %float_1
       %3867 = OpLoad %v4float %r10
       %3868 = OpCompositeInsert %v4float %3866 %3867 3
               OpStore %r10 %3868
       %3869 = OpLoad %v4float %r8
       %3870 = OpCompositeExtract %float %3869 3
       %3871 = OpLoad %v4float %r10
       %3872 = OpCompositeExtract %float %3871 3
       %3873 = OpFMul %float %3870 %3872
       %3874 = OpLoad %v4float %r8
       %3875 = OpCompositeInsert %v4float %3873 %3874 3
               OpStore %r8 %3875
       %3876 = OpLoad %v4float %r7
       %3877 = OpCompositeExtract %float %3876 3
       %3878 = OpLoad %v4float %r8
       %3879 = OpCompositeExtract %float %3878 3
       %3880 = OpFMul %float %3877 %3879
       %3881 = OpLoad %v4float %r10
       %3882 = OpCompositeInsert %v4float %3880 %3881 3
               OpStore %r10 %3882
       %3883 = OpLoad %v4float %r10
       %3884 = OpVectorShuffle %v3float %3883 %3883 3 3 3
       %3885 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_23
       %3886 = OpAccessChain %_ptr_Uniform_float %3885 %uint_0
       %3887 = OpLoad %float %3886
       %3888 = OpAccessChain %_ptr_Uniform_float %3885 %uint_1
       %3889 = OpLoad %float %3888
       %3890 = OpAccessChain %_ptr_Uniform_float %3885 %uint_2
       %3891 = OpLoad %float %3890
       %3892 = OpCompositeConstruct %v3float %3887 %3889 %3891
       %3893 = OpFMul %v3float %3884 %3892
       %3894 = OpLoad %v4float %r12
       %3895 = OpVectorShuffle %v4float %3894 %3893 4 5 6 3
               OpStore %r12 %3895
       %3896 = OpLoad %v4float %r12
       %3897 = OpVectorShuffle %v3float %3896 %3896 0 1 2
       %3898 = OpLoad %v4float %r0
       %3899 = OpVectorShuffle %v3float %3898 %3898 0 1 2
       %3900 = OpLoad %v4float %r10
       %3901 = OpVectorShuffle %v3float %3900 %3900 0 1 2
       %3902 = OpExtInst %v3float %1 Fma %3897 %3899 %3901
       %3903 = OpLoad %v4float %r10
       %3904 = OpVectorShuffle %v4float %3903 %3902 4 5 6 3
               OpStore %r10 %3904
       %3905 = OpLoad %v4float %r5
       %3906 = OpVectorShuffle %v3float %3905 %3905 0 1 2
       %3907 = OpLoad %v4float %r1
       %3908 = OpVectorShuffle %v3float %3907 %3907 1 1 1
       %3909 = OpLoad %v4float %r11
       %3910 = OpVectorShuffle %v3float %3909 %3909 0 1 2
       %3911 = OpExtInst %v3float %1 Fma %3906 %3908 %3910
       %3912 = OpLoad %v4float %r11
       %3913 = OpVectorShuffle %v4float %3912 %3911 4 5 6 3
               OpStore %r11 %3913
       %3914 = OpLoad %v4float %r11
       %3915 = OpVectorShuffle %v3float %3914 %3914 0 1 2
       %3916 = OpLoad %v4float %r11
       %3917 = OpVectorShuffle %v3float %3916 %3916 0 1 2
       %3918 = OpDot %float %3915 %3917
       %3919 = OpLoad %v4float %r10
       %3920 = OpCompositeInsert %v4float %3918 %3919 3
               OpStore %r10 %3920
       %3921 = OpLoad %v4float %r10
       %3922 = OpCompositeExtract %float %3921 3
       %3923 = OpExtInst %float %1 InverseSqrt %3922
       %3924 = OpLoad %v4float %r10
       %3925 = OpCompositeInsert %v4float %3923 %3924 3
               OpStore %r10 %3925
       %3926 = OpLoad %v4float %r10
       %3927 = OpVectorShuffle %v3float %3926 %3926 3 3 3
       %3928 = OpLoad %v4float %r11
       %3929 = OpVectorShuffle %v3float %3928 %3928 0 1 2
       %3930 = OpFMul %v3float %3927 %3929
       %3931 = OpLoad %v4float %r11
       %3932 = OpVectorShuffle %v4float %3931 %3930 4 5 6 3
               OpStore %r11 %3932
       %3933 = OpLoad %v4float %r11
       %3934 = OpVectorShuffle %v3float %3933 %3933 0 1 2
       %3935 = OpLoad %v4float %r6
       %3936 = OpVectorShuffle %v3float %3935 %3935 0 1 2
       %3937 = OpDot %float %3934 %3936
       %3938 = OpExtInst %float %1 NClamp %3937 %float_0 %float_1
       %3939 = OpLoad %v4float %r10
       %3940 = OpCompositeInsert %v4float %3938 %3939 3
               OpStore %r10 %3940
       %3941 = OpLoad %v4float %r10
       %3942 = OpCompositeExtract %float %3941 3
       %3943 = OpFNegate %float %3942
       %3944 = OpBitcast %float %uint_1065353216
       %3945 = OpFAdd %float %3943 %3944
       %3946 = OpLoad %v4float %r10
       %3947 = OpCompositeInsert %v4float %3945 %3946 3
               OpStore %r10 %3947
       %3948 = OpLoad %v4float %r10
       %3949 = OpCompositeExtract %float %3948 3
       %3950 = OpLoad %v4float %r10
       %3951 = OpCompositeExtract %float %3950 3
       %3952 = OpFMul %float %3949 %3951
       %3953 = OpLoad %v4float %r11
       %3954 = OpCompositeInsert %v4float %3952 %3953 3
               OpStore %r11 %3954
       %3955 = OpLoad %v4float %r11
       %3956 = OpCompositeExtract %float %3955 3
       %3957 = OpLoad %v4float %r11
       %3958 = OpCompositeExtract %float %3957 3
       %3959 = OpFMul %float %3956 %3958
       %3960 = OpLoad %v4float %r11
       %3961 = OpCompositeInsert %v4float %3959 %3960 3
               OpStore %r11 %3961
       %3962 = OpLoad %v4float %r10
       %3963 = OpCompositeExtract %float %3962 3
       %3964 = OpLoad %v4float %r11
       %3965 = OpCompositeExtract %float %3964 3
       %3966 = OpFMul %float %3963 %3965
       %3967 = OpLoad %v4float %r10
       %3968 = OpCompositeInsert %v4float %3966 %3967 3
               OpStore %r10 %3968
       %3969 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %3970 = OpAccessChain %_ptr_Uniform_float %3969 %uint_0
       %3971 = OpLoad %float %3970
       %3972 = OpLoad %v4float %r10
       %3973 = OpCompositeExtract %float %3972 3
       %3974 = OpLoad %v4float %r4
       %3975 = OpCompositeExtract %float %3974 3
       %3976 = OpExtInst %float %1 Fma %3971 %3973 %3975
       %3977 = OpLoad %v4float %r10
       %3978 = OpCompositeInsert %v4float %3976 %3977 3
               OpStore %r10 %3978
       %3979 = OpLoad %v4float %r11
       %3980 = OpVectorShuffle %v3float %3979 %3979 0 1 2
       %3981 = OpLoad %v4float %r2
       %3982 = OpVectorShuffle %v3float %3981 %3981 0 1 2
       %3983 = OpDot %float %3980 %3982
       %3984 = OpExtInst %float %1 NClamp %3983 %float_0 %float_1
       %3985 = OpLoad %v4float %r11
       %3986 = OpCompositeInsert %v4float %3984 %3985 0
               OpStore %r11 %3986
       %3987 = OpLoad %v4float %r11
       %3988 = OpCompositeExtract %float %3987 0
       %3989 = OpExtInst %float %1 Log2 %3988
       %3990 = OpLoad %v4float %r11
       %3991 = OpCompositeInsert %v4float %3989 %3990 0
               OpStore %r11 %3991
       %3992 = OpLoad %v4float %r9
       %3993 = OpCompositeExtract %float %3992 3
       %3994 = OpLoad %v4float %r11
       %3995 = OpCompositeExtract %float %3994 0
       %3996 = OpFMul %float %3993 %3995
       %3997 = OpLoad %v4float %r11
       %3998 = OpCompositeInsert %v4float %3996 %3997 0
               OpStore %r11 %3998
       %3999 = OpLoad %v4float %r11
       %4000 = OpCompositeExtract %float %3999 0
       %4001 = OpExtInst %float %1 Exp2 %4000
       %4002 = OpLoad %v4float %r11
       %4003 = OpCompositeInsert %v4float %4001 %4002 0
               OpStore %r11 %4003
       %4004 = OpLoad %v4float %r10
       %4005 = OpCompositeExtract %float %4004 3
       %4006 = OpLoad %v4float %r11
       %4007 = OpCompositeExtract %float %4006 0
       %4008 = OpFMul %float %4005 %4007
       %4009 = OpLoad %v4float %r10
       %4010 = OpCompositeInsert %v4float %4008 %4009 3
               OpStore %r10 %4010
       %4011 = OpLoad %v4float %r8
       %4012 = OpCompositeExtract %float %4011 3
       %4013 = OpLoad %v4float %r10
       %4014 = OpCompositeExtract %float %4013 3
       %4015 = OpFMul %float %4012 %4014
       %4016 = OpLoad %v4float %r8
       %4017 = OpCompositeInsert %v4float %4015 %4016 3
               OpStore %r8 %4017
       %4018 = OpLoad %v4float %r7
       %4019 = OpCompositeExtract %float %4018 3
       %4020 = OpLoad %v4float %r8
       %4021 = OpCompositeExtract %float %4020 3
       %4022 = OpFMul %float %4019 %4021
       %4023 = OpLoad %v4float %r7
       %4024 = OpCompositeInsert %v4float %4022 %4023 3
               OpStore %r7 %4024
       %4025 = OpLoad %v4float %r5
       %4026 = OpCompositeExtract %float %4025 3
       %4027 = OpLoad %v4float %r7
       %4028 = OpCompositeExtract %float %4027 3
       %4029 = OpFMul %float %4026 %4028
       %4030 = OpLoad %v4float %r7
       %4031 = OpCompositeInsert %v4float %4029 %4030 3
               OpStore %r7 %4031
       %4032 = OpLoad %v4float %r7
       %4033 = OpVectorShuffle %v3float %4032 %4032 3 3 3
       %4034 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_23
       %4035 = OpAccessChain %_ptr_Uniform_float %4034 %uint_0
       %4036 = OpLoad %float %4035
       %4037 = OpAccessChain %_ptr_Uniform_float %4034 %uint_1
       %4038 = OpLoad %float %4037
       %4039 = OpAccessChain %_ptr_Uniform_float %4034 %uint_2
       %4040 = OpLoad %float %4039
       %4041 = OpCompositeConstruct %v3float %4036 %4038 %4040
       %4042 = OpLoad %v4float %r9
       %4043 = OpVectorShuffle %v3float %4042 %4042 0 1 2
       %4044 = OpExtInst %v3float %1 Fma %4033 %4041 %4043
       %4045 = OpLoad %v4float %r9
       %4046 = OpVectorShuffle %v4float %4045 %4044 4 5 6 3
               OpStore %r9 %4046
               OpBranch %3647
       %3647 = OpLabel
               OpBranch %3621
       %4047 = OpLabel
       %4048 = OpBitcast %float %uint_4294967295
       %4049 = OpLoad %v4float %r4
       %4050 = OpCompositeInsert %v4float %4048 %4049 2
               OpStore %r4 %4050
               OpBranch %3621
       %3621 = OpLabel
       %4051 = OpLoad %v4float %r4
       %4052 = OpCompositeExtract %float %4051 2
       %4053 = OpBitcast %uint %4052
       %4054 = OpIEqual %bool %4053 %uint_0
               OpSelectionMerge %4056 None
               OpBranchConditional %4054 %4055 %4484
       %4055 = OpLabel
       %4058 = OpBitcast %int %uint_5
       %4059 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %4060 = OpAccessChain %_ptr_Uniform_float %4059 %uint_0
       %4061 = OpLoad %float %4060
       %4062 = OpBitcast %int %4061
       %4063 = OpSGreaterThanEqual %bool %4058 %4062
       %4064 = OpSelect %uint %4063 %uint_4294967295 %uint_0
       %4065 = OpBitcast %float %4064
       %4066 = OpLoad %v4float %r7
       %4067 = OpCompositeInsert %v4float %4065 %4066 3
               OpStore %r7 %4067
       %4068 = OpLoad %v4float %r4
       %4069 = OpCompositeExtract %float %4068 2
       %4070 = OpBitcast %uint %4069
       %4071 = OpLoad %v4float %r7
       %4072 = OpCompositeExtract %float %4071 3
       %4073 = OpBitcast %uint %4072
       %4074 = OpBitwiseOr %uint %4070 %4073
       %4075 = OpBitcast %float %4074
       %4076 = OpLoad %v4float %r4
       %4077 = OpCompositeInsert %v4float %4075 %4076 2
               OpStore %r4 %4077
       %4078 = OpLoad %v4float %r4
       %4079 = OpCompositeExtract %float %4078 2
       %4080 = OpBitcast %uint %4079
       %4081 = OpIEqual %bool %4080 %uint_0
               OpSelectionMerge %4083 None
               OpBranchConditional %4081 %4082 %4083
       %4082 = OpLabel
       %4085 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_24
       %4086 = OpAccessChain %_ptr_Uniform_float %4085 %uint_3
       %4087 = OpLoad %float %4086
       %4088 = OpBitcast %float %uint_0
       %4089 = OpFOrdEqual %bool %4087 %4088
       %4090 = OpSelect %uint %4089 %uint_4294967295 %uint_0
       %4091 = OpBitcast %float %4090
       %4092 = OpLoad %v4float %r7
       %4093 = OpCompositeInsert %v4float %4091 %4092 3
               OpStore %r7 %4093
       %4094 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4095 = OpLoad %v4float %4094
       %4096 = OpVectorShuffle %v3float %4095 %4095 0 1 2
       %4097 = OpFNegate %v3float %4096
       %4098 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_8
       %4099 = OpAccessChain %_ptr_Uniform_float %4098 %uint_0
       %4100 = OpLoad %float %4099
       %4101 = OpAccessChain %_ptr_Uniform_float %4098 %uint_1
       %4102 = OpLoad %float %4101
       %4103 = OpAccessChain %_ptr_Uniform_float %4098 %uint_2
       %4104 = OpLoad %float %4103
       %4105 = OpCompositeConstruct %v3float %4100 %4102 %4104
       %4106 = OpFAdd %v3float %4097 %4105
       %4107 = OpLoad %v4float %r11
       %4108 = OpVectorShuffle %v4float %4107 %4106 4 5 6 3
               OpStore %r11 %4108
       %4109 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4110 = OpLoad %v4float %4109
       %4111 = OpVectorShuffle %v3float %4110 %4110 0 1 2
       %4112 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_8
       %4113 = OpAccessChain %_ptr_Uniform_float %4112 %uint_0
       %4114 = OpLoad %float %4113
       %4115 = OpAccessChain %_ptr_Uniform_float %4112 %uint_1
       %4116 = OpLoad %float %4115
       %4117 = OpAccessChain %_ptr_Uniform_float %4112 %uint_2
       %4118 = OpLoad %float %4117
       %4119 = OpCompositeConstruct %v3float %4114 %4116 %4118
       %4120 = OpFNegate %v3float %4119
       %4121 = OpFAdd %v3float %4111 %4120
       %4122 = OpLoad %v4float %r12
       %4123 = OpVectorShuffle %v4float %4122 %4121 4 5 6 3
               OpStore %r12 %4123
       %4124 = OpLoad %v4float %r12
       %4125 = OpVectorShuffle %v3float %4124 %4124 0 1 2
       %4127 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_16
       %4128 = OpAccessChain %_ptr_Uniform_float %4127 %uint_0
       %4129 = OpLoad %float %4128
       %4130 = OpAccessChain %_ptr_Uniform_float %4127 %uint_1
       %4131 = OpLoad %float %4130
       %4132 = OpAccessChain %_ptr_Uniform_float %4127 %uint_2
       %4133 = OpLoad %float %4132
       %4134 = OpCompositeConstruct %v3float %4129 %4131 %4133
       %4135 = OpDot %float %4125 %4134
       %4136 = OpLoad %v4float %r8
       %4137 = OpCompositeInsert %v4float %4135 %4136 3
               OpStore %r8 %4137
       %4138 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_24
       %4139 = OpAccessChain %_ptr_Uniform_float %4138 %uint_3
       %4140 = OpLoad %float %4139
       %4141 = OpBitcast %float %uint_953267991
       %4142 = OpFAdd %float %4140 %4141
       %4143 = OpLoad %v4float %r10
       %4144 = OpCompositeInsert %v4float %4142 %4143 3
               OpStore %r10 %4144
       %4145 = OpLoad %v4float %r8
       %4146 = OpCompositeExtract %float %4145 3
       %4147 = OpLoad %v4float %r10
       %4148 = OpCompositeExtract %float %4147 3
       %4149 = OpFDiv %float %4146 %4148
       %4150 = OpExtInst %float %1 NClamp %4149 %float_0 %float_1
       %4151 = OpLoad %v4float %r8
       %4152 = OpCompositeInsert %v4float %4150 %4151 3
               OpStore %r8 %4152
       %4153 = OpLoad %v4float %r8
       %4154 = OpCompositeExtract %float %4153 3
       %4155 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_24
       %4156 = OpAccessChain %_ptr_Uniform_float %4155 %uint_3
       %4157 = OpLoad %float %4156
       %4158 = OpFMul %float %4154 %4157
       %4159 = OpLoad %v4float %r8
       %4160 = OpCompositeInsert %v4float %4158 %4159 3
               OpStore %r8 %4160
       %4161 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_16
       %4162 = OpAccessChain %_ptr_Uniform_float %4161 %uint_0
       %4163 = OpLoad %float %4162
       %4164 = OpAccessChain %_ptr_Uniform_float %4161 %uint_1
       %4165 = OpLoad %float %4164
       %4166 = OpAccessChain %_ptr_Uniform_float %4161 %uint_2
       %4167 = OpLoad %float %4166
       %4168 = OpCompositeConstruct %v3float %4163 %4165 %4167
       %4169 = OpLoad %v4float %r8
       %4170 = OpVectorShuffle %v3float %4169 %4169 3 3 3
       %4171 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_8
       %4172 = OpAccessChain %_ptr_Uniform_float %4171 %uint_0
       %4173 = OpLoad %float %4172
       %4174 = OpAccessChain %_ptr_Uniform_float %4171 %uint_1
       %4175 = OpLoad %float %4174
       %4176 = OpAccessChain %_ptr_Uniform_float %4171 %uint_2
       %4177 = OpLoad %float %4176
       %4178 = OpCompositeConstruct %v3float %4173 %4175 %4177
       %4179 = OpExtInst %v3float %1 Fma %4168 %4170 %4178
       %4180 = OpLoad %v4float %r12
       %4181 = OpVectorShuffle %v4float %4180 %4179 4 5 6 3
               OpStore %r12 %4181
       %4182 = OpLoad %v4float %r12
       %4183 = OpVectorShuffle %v3float %4182 %4182 0 1 2
       %4184 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4185 = OpLoad %v4float %4184
       %4186 = OpVectorShuffle %v3float %4185 %4185 0 1 2
       %4187 = OpFNegate %v3float %4186
       %4188 = OpFAdd %v3float %4183 %4187
       %4189 = OpLoad %v4float %r12
       %4190 = OpVectorShuffle %v4float %4189 %4188 4 5 6 3
               OpStore %r12 %4190
       %4191 = OpLoad %v4float %r7
       %4192 = OpVectorShuffle %v3float %4191 %4191 3 3 3
       %4193 = OpBitcast %v3uint %4192
       %4194 = OpLoad %v4float %r11
       %4195 = OpVectorShuffle %v3float %4194 %4194 0 1 2
       %4196 = OpLoad %v4float %r12
       %4197 = OpVectorShuffle %v3float %4196 %4196 0 1 2
       %4198 = OpINotEqual %v3bool %4193 %1998
       %4199 = OpSelect %v3float %4198 %4195 %4197
       %4200 = OpLoad %v4float %r11
       %4201 = OpVectorShuffle %v4float %4200 %4199 4 5 6 3
               OpStore %r11 %4201
       %4202 = OpLoad %v4float %r11
       %4203 = OpVectorShuffle %v3float %4202 %4202 0 1 2
       %4204 = OpLoad %v4float %r11
       %4205 = OpVectorShuffle %v3float %4204 %4204 0 1 2
       %4206 = OpDot %float %4203 %4205
       %4207 = OpLoad %v4float %r7
       %4208 = OpCompositeInsert %v4float %4206 %4207 3
               OpStore %r7 %4208
       %4209 = OpLoad %v4float %r11
       %4210 = OpVectorShuffle %v3float %4209 %4209 0 1 2
       %4211 = OpBitcast %v3float %2013
       %4212 = OpFAdd %v3float %4210 %4211
       %4213 = OpLoad %v4float %r11
       %4214 = OpVectorShuffle %v4float %4213 %4212 4 5 6 3
               OpStore %r11 %4214
       %4215 = OpLoad %v4float %r11
       %4216 = OpVectorShuffle %v3float %4215 %4215 0 1 2
       %4217 = OpLoad %v4float %r11
       %4218 = OpVectorShuffle %v3float %4217 %4217 0 1 2
       %4219 = OpDot %float %4216 %4218
       %4220 = OpLoad %v4float %r8
       %4221 = OpCompositeInsert %v4float %4219 %4220 3
               OpStore %r8 %4221
       %4222 = OpLoad %v4float %r8
       %4223 = OpCompositeExtract %float %4222 3
       %4224 = OpExtInst %float %1 InverseSqrt %4223
       %4225 = OpLoad %v4float %r8
       %4226 = OpCompositeInsert %v4float %4224 %4225 3
               OpStore %r8 %4226
       %4227 = OpLoad %v4float %r8
       %4228 = OpVectorShuffle %v3float %4227 %4227 3 3 3
       %4229 = OpLoad %v4float %r11
       %4230 = OpVectorShuffle %v3float %4229 %4229 0 1 2
       %4231 = OpFMul %v3float %4228 %4230
       %4232 = OpLoad %v4float %r11
       %4233 = OpVectorShuffle %v4float %4232 %4231 4 5 6 3
               OpStore %r11 %4233
       %4234 = OpLoad %v4float %r7
       %4235 = OpCompositeExtract %float %4234 3
       %4236 = OpFNegate %float %4235
       %4237 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_8
       %4238 = OpAccessChain %_ptr_Uniform_float %4237 %uint_3
       %4239 = OpLoad %float %4238
       %4240 = OpBitcast %float %uint_1065353216
       %4241 = OpExtInst %float %1 Fma %4236 %4239 %4240
       %4242 = OpExtInst %float %1 NClamp %4241 %float_0 %float_1
       %4243 = OpLoad %v4float %r7
       %4244 = OpCompositeInsert %v4float %4242 %4243 3
               OpStore %r7 %4244
       %4245 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_16
       %4246 = OpAccessChain %_ptr_Uniform_float %4245 %uint_3
       %4247 = OpLoad %float %4246
       %4248 = OpFNegate %float %4247
       %4249 = OpBitcast %float %uint_1065353216
       %4250 = OpFAdd %float %4248 %4249
       %4251 = OpLoad %v4float %r8
       %4252 = OpCompositeInsert %v4float %4250 %4251 3
               OpStore %r8 %4252
       %4253 = OpLoad %v4float %r8
       %4254 = OpCompositeExtract %float %4253 3
       %4255 = OpLoad %v4float %r7
       %4256 = OpCompositeExtract %float %4255 3
       %4257 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_16
       %4258 = OpAccessChain %_ptr_Uniform_float %4257 %uint_3
       %4259 = OpLoad %float %4258
       %4260 = OpExtInst %float %1 Fma %4254 %4256 %4259
       %4261 = OpLoad %v4float %r8
       %4262 = OpCompositeInsert %v4float %4260 %4261 3
               OpStore %r8 %4262
       %4263 = OpLoad %v4float %r7
       %4264 = OpCompositeExtract %float %4263 3
       %4265 = OpLoad %v4float %r8
       %4266 = OpCompositeExtract %float %4265 3
       %4267 = OpFDiv %float %4264 %4266
       %4268 = OpLoad %v4float %r7
       %4269 = OpCompositeInsert %v4float %4267 %4268 3
               OpStore %r7 %4269
       %4270 = OpLoad %v4float %r11
       %4271 = OpVectorShuffle %v3float %4270 %4270 0 1 2
       %4272 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_16
       %4273 = OpAccessChain %_ptr_Uniform_float %4272 %uint_0
       %4274 = OpLoad %float %4273
       %4275 = OpAccessChain %_ptr_Uniform_float %4272 %uint_1
       %4276 = OpLoad %float %4275
       %4277 = OpAccessChain %_ptr_Uniform_float %4272 %uint_2
       %4278 = OpLoad %float %4277
       %4279 = OpCompositeConstruct %v3float %4274 %4276 %4278
       %4280 = OpFNegate %v3float %4279
       %4281 = OpDot %float %4271 %4280
       %4282 = OpLoad %v4float %r8
       %4283 = OpCompositeInsert %v4float %4281 %4282 3
               OpStore %r8 %4283
       %4284 = OpLoad %v4float %r8
       %4285 = OpCompositeExtract %float %4284 3
       %4287 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_32
       %4288 = OpAccessChain %_ptr_Uniform_float %4287 %uint_0
       %4289 = OpLoad %float %4288
       %4291 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_40
       %4292 = OpAccessChain %_ptr_Uniform_float %4291 %uint_0
       %4293 = OpLoad %float %4292
       %4294 = OpExtInst %float %1 Fma %4285 %4289 %4293
       %4295 = OpExtInst %float %1 NClamp %4294 %float_0 %float_1
       %4296 = OpLoad %v4float %r8
       %4297 = OpCompositeInsert %v4float %4295 %4296 3
               OpStore %r8 %4297
       %4298 = OpLoad %v4float %r11
       %4299 = OpVectorShuffle %v3float %4298 %4298 0 1 2
       %4300 = OpLoad %v4float %r2
       %4301 = OpVectorShuffle %v3float %4300 %4300 0 1 2
       %4302 = OpDot %float %4299 %4301
       %4303 = OpExtInst %float %1 NClamp %4302 %float_0 %float_1
       %4304 = OpLoad %v4float %r10
       %4305 = OpCompositeInsert %v4float %4303 %4304 3
               OpStore %r10 %4305
       %4306 = OpLoad %v4float %r8
       %4307 = OpCompositeExtract %float %4306 3
       %4308 = OpLoad %v4float %r10
       %4309 = OpCompositeExtract %float %4308 3
       %4310 = OpFMul %float %4307 %4309
       %4311 = OpLoad %v4float %r8
       %4312 = OpCompositeInsert %v4float %4310 %4311 3
               OpStore %r8 %4312
       %4313 = OpLoad %v4float %r7
       %4314 = OpCompositeExtract %float %4313 3
       %4315 = OpLoad %v4float %r8
       %4316 = OpCompositeExtract %float %4315 3
       %4317 = OpFMul %float %4314 %4316
       %4318 = OpLoad %v4float %r10
       %4319 = OpCompositeInsert %v4float %4317 %4318 3
               OpStore %r10 %4319
       %4320 = OpLoad %v4float %r10
       %4321 = OpVectorShuffle %v3float %4320 %4320 3 3 3
       %4322 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_24
       %4323 = OpAccessChain %_ptr_Uniform_float %4322 %uint_0
       %4324 = OpLoad %float %4323
       %4325 = OpAccessChain %_ptr_Uniform_float %4322 %uint_1
       %4326 = OpLoad %float %4325
       %4327 = OpAccessChain %_ptr_Uniform_float %4322 %uint_2
       %4328 = OpLoad %float %4327
       %4329 = OpCompositeConstruct %v3float %4324 %4326 %4328
       %4330 = OpFMul %v3float %4321 %4329
       %4331 = OpLoad %v4float %r12
       %4332 = OpVectorShuffle %v4float %4331 %4330 4 5 6 3
               OpStore %r12 %4332
       %4333 = OpLoad %v4float %r12
       %4334 = OpVectorShuffle %v3float %4333 %4333 0 1 2
       %4335 = OpLoad %v4float %r0
       %4336 = OpVectorShuffle %v3float %4335 %4335 0 1 2
       %4337 = OpLoad %v4float %r10
       %4338 = OpVectorShuffle %v3float %4337 %4337 0 1 2
       %4339 = OpExtInst %v3float %1 Fma %4334 %4336 %4338
       %4340 = OpLoad %v4float %r10
       %4341 = OpVectorShuffle %v4float %4340 %4339 4 5 6 3
               OpStore %r10 %4341
       %4342 = OpLoad %v4float %r5
       %4343 = OpVectorShuffle %v3float %4342 %4342 0 1 2
       %4344 = OpLoad %v4float %r1
       %4345 = OpVectorShuffle %v3float %4344 %4344 1 1 1
       %4346 = OpLoad %v4float %r11
       %4347 = OpVectorShuffle %v3float %4346 %4346 0 1 2
       %4348 = OpExtInst %v3float %1 Fma %4343 %4345 %4347
       %4349 = OpLoad %v4float %r11
       %4350 = OpVectorShuffle %v4float %4349 %4348 4 5 6 3
               OpStore %r11 %4350
       %4351 = OpLoad %v4float %r11
       %4352 = OpVectorShuffle %v3float %4351 %4351 0 1 2
       %4353 = OpLoad %v4float %r11
       %4354 = OpVectorShuffle %v3float %4353 %4353 0 1 2
       %4355 = OpDot %float %4352 %4354
       %4356 = OpLoad %v4float %r10
       %4357 = OpCompositeInsert %v4float %4355 %4356 3
               OpStore %r10 %4357
       %4358 = OpLoad %v4float %r10
       %4359 = OpCompositeExtract %float %4358 3
       %4360 = OpExtInst %float %1 InverseSqrt %4359
       %4361 = OpLoad %v4float %r10
       %4362 = OpCompositeInsert %v4float %4360 %4361 3
               OpStore %r10 %4362
       %4363 = OpLoad %v4float %r10
       %4364 = OpVectorShuffle %v3float %4363 %4363 3 3 3
       %4365 = OpLoad %v4float %r11
       %4366 = OpVectorShuffle %v3float %4365 %4365 0 1 2
       %4367 = OpFMul %v3float %4364 %4366
       %4368 = OpLoad %v4float %r11
       %4369 = OpVectorShuffle %v4float %4368 %4367 4 5 6 3
               OpStore %r11 %4369
       %4370 = OpLoad %v4float %r11
       %4371 = OpVectorShuffle %v3float %4370 %4370 0 1 2
       %4372 = OpLoad %v4float %r6
       %4373 = OpVectorShuffle %v3float %4372 %4372 0 1 2
       %4374 = OpDot %float %4371 %4373
       %4375 = OpExtInst %float %1 NClamp %4374 %float_0 %float_1
       %4376 = OpLoad %v4float %r10
       %4377 = OpCompositeInsert %v4float %4375 %4376 3
               OpStore %r10 %4377
       %4378 = OpLoad %v4float %r10
       %4379 = OpCompositeExtract %float %4378 3
       %4380 = OpFNegate %float %4379
       %4381 = OpBitcast %float %uint_1065353216
       %4382 = OpFAdd %float %4380 %4381
       %4383 = OpLoad %v4float %r10
       %4384 = OpCompositeInsert %v4float %4382 %4383 3
               OpStore %r10 %4384
       %4385 = OpLoad %v4float %r10
       %4386 = OpCompositeExtract %float %4385 3
       %4387 = OpLoad %v4float %r10
       %4388 = OpCompositeExtract %float %4387 3
       %4389 = OpFMul %float %4386 %4388
       %4390 = OpLoad %v4float %r11
       %4391 = OpCompositeInsert %v4float %4389 %4390 3
               OpStore %r11 %4391
       %4392 = OpLoad %v4float %r11
       %4393 = OpCompositeExtract %float %4392 3
       %4394 = OpLoad %v4float %r11
       %4395 = OpCompositeExtract %float %4394 3
       %4396 = OpFMul %float %4393 %4395
       %4397 = OpLoad %v4float %r11
       %4398 = OpCompositeInsert %v4float %4396 %4397 3
               OpStore %r11 %4398
       %4399 = OpLoad %v4float %r10
       %4400 = OpCompositeExtract %float %4399 3
       %4401 = OpLoad %v4float %r11
       %4402 = OpCompositeExtract %float %4401 3
       %4403 = OpFMul %float %4400 %4402
       %4404 = OpLoad %v4float %r10
       %4405 = OpCompositeInsert %v4float %4403 %4404 3
               OpStore %r10 %4405
       %4406 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %4407 = OpAccessChain %_ptr_Uniform_float %4406 %uint_0
       %4408 = OpLoad %float %4407
       %4409 = OpLoad %v4float %r10
       %4410 = OpCompositeExtract %float %4409 3
       %4411 = OpLoad %v4float %r4
       %4412 = OpCompositeExtract %float %4411 3
       %4413 = OpExtInst %float %1 Fma %4408 %4410 %4412
       %4414 = OpLoad %v4float %r10
       %4415 = OpCompositeInsert %v4float %4413 %4414 3
               OpStore %r10 %4415
       %4416 = OpLoad %v4float %r11
       %4417 = OpVectorShuffle %v3float %4416 %4416 0 1 2
       %4418 = OpLoad %v4float %r2
       %4419 = OpVectorShuffle %v3float %4418 %4418 0 1 2
       %4420 = OpDot %float %4417 %4419
       %4421 = OpExtInst %float %1 NClamp %4420 %float_0 %float_1
       %4422 = OpLoad %v4float %r11
       %4423 = OpCompositeInsert %v4float %4421 %4422 0
               OpStore %r11 %4423
       %4424 = OpLoad %v4float %r11
       %4425 = OpCompositeExtract %float %4424 0
       %4426 = OpExtInst %float %1 Log2 %4425
       %4427 = OpLoad %v4float %r11
       %4428 = OpCompositeInsert %v4float %4426 %4427 0
               OpStore %r11 %4428
       %4429 = OpLoad %v4float %r9
       %4430 = OpCompositeExtract %float %4429 3
       %4431 = OpLoad %v4float %r11
       %4432 = OpCompositeExtract %float %4431 0
       %4433 = OpFMul %float %4430 %4432
       %4434 = OpLoad %v4float %r11
       %4435 = OpCompositeInsert %v4float %4433 %4434 0
               OpStore %r11 %4435
       %4436 = OpLoad %v4float %r11
       %4437 = OpCompositeExtract %float %4436 0
       %4438 = OpExtInst %float %1 Exp2 %4437
       %4439 = OpLoad %v4float %r11
       %4440 = OpCompositeInsert %v4float %4438 %4439 0
               OpStore %r11 %4440
       %4441 = OpLoad %v4float %r10
       %4442 = OpCompositeExtract %float %4441 3
       %4443 = OpLoad %v4float %r11
       %4444 = OpCompositeExtract %float %4443 0
       %4445 = OpFMul %float %4442 %4444
       %4446 = OpLoad %v4float %r10
       %4447 = OpCompositeInsert %v4float %4445 %4446 3
               OpStore %r10 %4447
       %4448 = OpLoad %v4float %r8
       %4449 = OpCompositeExtract %float %4448 3
       %4450 = OpLoad %v4float %r10
       %4451 = OpCompositeExtract %float %4450 3
       %4452 = OpFMul %float %4449 %4451
       %4453 = OpLoad %v4float %r8
       %4454 = OpCompositeInsert %v4float %4452 %4453 3
               OpStore %r8 %4454
       %4455 = OpLoad %v4float %r7
       %4456 = OpCompositeExtract %float %4455 3
       %4457 = OpLoad %v4float %r8
       %4458 = OpCompositeExtract %float %4457 3
       %4459 = OpFMul %float %4456 %4458
       %4460 = OpLoad %v4float %r7
       %4461 = OpCompositeInsert %v4float %4459 %4460 3
               OpStore %r7 %4461
       %4462 = OpLoad %v4float %r5
       %4463 = OpCompositeExtract %float %4462 3
       %4464 = OpLoad %v4float %r7
       %4465 = OpCompositeExtract %float %4464 3
       %4466 = OpFMul %float %4463 %4465
       %4467 = OpLoad %v4float %r7
       %4468 = OpCompositeInsert %v4float %4466 %4467 3
               OpStore %r7 %4468
       %4469 = OpLoad %v4float %r7
       %4470 = OpVectorShuffle %v3float %4469 %4469 3 3 3
       %4471 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_24
       %4472 = OpAccessChain %_ptr_Uniform_float %4471 %uint_0
       %4473 = OpLoad %float %4472
       %4474 = OpAccessChain %_ptr_Uniform_float %4471 %uint_1
       %4475 = OpLoad %float %4474
       %4476 = OpAccessChain %_ptr_Uniform_float %4471 %uint_2
       %4477 = OpLoad %float %4476
       %4478 = OpCompositeConstruct %v3float %4473 %4475 %4477
       %4479 = OpLoad %v4float %r9
       %4480 = OpVectorShuffle %v3float %4479 %4479 0 1 2
       %4481 = OpExtInst %v3float %1 Fma %4470 %4478 %4480
       %4482 = OpLoad %v4float %r9
       %4483 = OpVectorShuffle %v4float %4482 %4481 4 5 6 3
               OpStore %r9 %4483
               OpBranch %4083
       %4083 = OpLabel
               OpBranch %4056
       %4484 = OpLabel
       %4485 = OpBitcast %float %uint_4294967295
       %4486 = OpLoad %v4float %r4
       %4487 = OpCompositeInsert %v4float %4485 %4486 2
               OpStore %r4 %4487
               OpBranch %4056
       %4056 = OpLabel
       %4488 = OpLoad %v4float %r4
       %4489 = OpCompositeExtract %float %4488 2
       %4490 = OpBitcast %uint %4489
       %4491 = OpIEqual %bool %4490 %uint_0
               OpSelectionMerge %4493 None
               OpBranchConditional %4491 %4492 %4921
       %4492 = OpLabel
       %4495 = OpBitcast %int %uint_6
       %4496 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %4497 = OpAccessChain %_ptr_Uniform_float %4496 %uint_0
       %4498 = OpLoad %float %4497
       %4499 = OpBitcast %int %4498
       %4500 = OpSGreaterThanEqual %bool %4495 %4499
       %4501 = OpSelect %uint %4500 %uint_4294967295 %uint_0
       %4502 = OpBitcast %float %4501
       %4503 = OpLoad %v4float %r7
       %4504 = OpCompositeInsert %v4float %4502 %4503 3
               OpStore %r7 %4504
       %4505 = OpLoad %v4float %r4
       %4506 = OpCompositeExtract %float %4505 2
       %4507 = OpBitcast %uint %4506
       %4508 = OpLoad %v4float %r7
       %4509 = OpCompositeExtract %float %4508 3
       %4510 = OpBitcast %uint %4509
       %4511 = OpBitwiseOr %uint %4507 %4510
       %4512 = OpBitcast %float %4511
       %4513 = OpLoad %v4float %r4
       %4514 = OpCompositeInsert %v4float %4512 %4513 2
               OpStore %r4 %4514
       %4515 = OpLoad %v4float %r4
       %4516 = OpCompositeExtract %float %4515 2
       %4517 = OpBitcast %uint %4516
       %4518 = OpIEqual %bool %4517 %uint_0
               OpSelectionMerge %4520 None
               OpBranchConditional %4518 %4519 %4520
       %4519 = OpLabel
       %4522 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_25
       %4523 = OpAccessChain %_ptr_Uniform_float %4522 %uint_3
       %4524 = OpLoad %float %4523
       %4525 = OpBitcast %float %uint_0
       %4526 = OpFOrdEqual %bool %4524 %4525
       %4527 = OpSelect %uint %4526 %uint_4294967295 %uint_0
       %4528 = OpBitcast %float %4527
       %4529 = OpLoad %v4float %r7
       %4530 = OpCompositeInsert %v4float %4528 %4529 3
               OpStore %r7 %4530
       %4531 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4532 = OpLoad %v4float %4531
       %4533 = OpVectorShuffle %v3float %4532 %4532 0 1 2
       %4534 = OpFNegate %v3float %4533
       %4535 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_9
       %4536 = OpAccessChain %_ptr_Uniform_float %4535 %uint_0
       %4537 = OpLoad %float %4536
       %4538 = OpAccessChain %_ptr_Uniform_float %4535 %uint_1
       %4539 = OpLoad %float %4538
       %4540 = OpAccessChain %_ptr_Uniform_float %4535 %uint_2
       %4541 = OpLoad %float %4540
       %4542 = OpCompositeConstruct %v3float %4537 %4539 %4541
       %4543 = OpFAdd %v3float %4534 %4542
       %4544 = OpLoad %v4float %r11
       %4545 = OpVectorShuffle %v4float %4544 %4543 4 5 6 3
               OpStore %r11 %4545
       %4546 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4547 = OpLoad %v4float %4546
       %4548 = OpVectorShuffle %v3float %4547 %4547 0 1 2
       %4549 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_9
       %4550 = OpAccessChain %_ptr_Uniform_float %4549 %uint_0
       %4551 = OpLoad %float %4550
       %4552 = OpAccessChain %_ptr_Uniform_float %4549 %uint_1
       %4553 = OpLoad %float %4552
       %4554 = OpAccessChain %_ptr_Uniform_float %4549 %uint_2
       %4555 = OpLoad %float %4554
       %4556 = OpCompositeConstruct %v3float %4551 %4553 %4555
       %4557 = OpFNegate %v3float %4556
       %4558 = OpFAdd %v3float %4548 %4557
       %4559 = OpLoad %v4float %r12
       %4560 = OpVectorShuffle %v4float %4559 %4558 4 5 6 3
               OpStore %r12 %4560
       %4561 = OpLoad %v4float %r12
       %4562 = OpVectorShuffle %v3float %4561 %4561 0 1 2
       %4564 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_17
       %4565 = OpAccessChain %_ptr_Uniform_float %4564 %uint_0
       %4566 = OpLoad %float %4565
       %4567 = OpAccessChain %_ptr_Uniform_float %4564 %uint_1
       %4568 = OpLoad %float %4567
       %4569 = OpAccessChain %_ptr_Uniform_float %4564 %uint_2
       %4570 = OpLoad %float %4569
       %4571 = OpCompositeConstruct %v3float %4566 %4568 %4570
       %4572 = OpDot %float %4562 %4571
       %4573 = OpLoad %v4float %r8
       %4574 = OpCompositeInsert %v4float %4572 %4573 3
               OpStore %r8 %4574
       %4575 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_25
       %4576 = OpAccessChain %_ptr_Uniform_float %4575 %uint_3
       %4577 = OpLoad %float %4576
       %4578 = OpBitcast %float %uint_953267991
       %4579 = OpFAdd %float %4577 %4578
       %4580 = OpLoad %v4float %r10
       %4581 = OpCompositeInsert %v4float %4579 %4580 3
               OpStore %r10 %4581
       %4582 = OpLoad %v4float %r8
       %4583 = OpCompositeExtract %float %4582 3
       %4584 = OpLoad %v4float %r10
       %4585 = OpCompositeExtract %float %4584 3
       %4586 = OpFDiv %float %4583 %4585
       %4587 = OpExtInst %float %1 NClamp %4586 %float_0 %float_1
       %4588 = OpLoad %v4float %r8
       %4589 = OpCompositeInsert %v4float %4587 %4588 3
               OpStore %r8 %4589
       %4590 = OpLoad %v4float %r8
       %4591 = OpCompositeExtract %float %4590 3
       %4592 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_25
       %4593 = OpAccessChain %_ptr_Uniform_float %4592 %uint_3
       %4594 = OpLoad %float %4593
       %4595 = OpFMul %float %4591 %4594
       %4596 = OpLoad %v4float %r8
       %4597 = OpCompositeInsert %v4float %4595 %4596 3
               OpStore %r8 %4597
       %4598 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_17
       %4599 = OpAccessChain %_ptr_Uniform_float %4598 %uint_0
       %4600 = OpLoad %float %4599
       %4601 = OpAccessChain %_ptr_Uniform_float %4598 %uint_1
       %4602 = OpLoad %float %4601
       %4603 = OpAccessChain %_ptr_Uniform_float %4598 %uint_2
       %4604 = OpLoad %float %4603
       %4605 = OpCompositeConstruct %v3float %4600 %4602 %4604
       %4606 = OpLoad %v4float %r8
       %4607 = OpVectorShuffle %v3float %4606 %4606 3 3 3
       %4608 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_9
       %4609 = OpAccessChain %_ptr_Uniform_float %4608 %uint_0
       %4610 = OpLoad %float %4609
       %4611 = OpAccessChain %_ptr_Uniform_float %4608 %uint_1
       %4612 = OpLoad %float %4611
       %4613 = OpAccessChain %_ptr_Uniform_float %4608 %uint_2
       %4614 = OpLoad %float %4613
       %4615 = OpCompositeConstruct %v3float %4610 %4612 %4614
       %4616 = OpExtInst %v3float %1 Fma %4605 %4607 %4615
       %4617 = OpLoad %v4float %r12
       %4618 = OpVectorShuffle %v4float %4617 %4616 4 5 6 3
               OpStore %r12 %4618
       %4619 = OpLoad %v4float %r12
       %4620 = OpVectorShuffle %v3float %4619 %4619 0 1 2
       %4621 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4622 = OpLoad %v4float %4621
       %4623 = OpVectorShuffle %v3float %4622 %4622 0 1 2
       %4624 = OpFNegate %v3float %4623
       %4625 = OpFAdd %v3float %4620 %4624
       %4626 = OpLoad %v4float %r12
       %4627 = OpVectorShuffle %v4float %4626 %4625 4 5 6 3
               OpStore %r12 %4627
       %4628 = OpLoad %v4float %r7
       %4629 = OpVectorShuffle %v3float %4628 %4628 3 3 3
       %4630 = OpBitcast %v3uint %4629
       %4631 = OpLoad %v4float %r11
       %4632 = OpVectorShuffle %v3float %4631 %4631 0 1 2
       %4633 = OpLoad %v4float %r12
       %4634 = OpVectorShuffle %v3float %4633 %4633 0 1 2
       %4635 = OpINotEqual %v3bool %4630 %1998
       %4636 = OpSelect %v3float %4635 %4632 %4634
       %4637 = OpLoad %v4float %r11
       %4638 = OpVectorShuffle %v4float %4637 %4636 4 5 6 3
               OpStore %r11 %4638
       %4639 = OpLoad %v4float %r11
       %4640 = OpVectorShuffle %v3float %4639 %4639 0 1 2
       %4641 = OpLoad %v4float %r11
       %4642 = OpVectorShuffle %v3float %4641 %4641 0 1 2
       %4643 = OpDot %float %4640 %4642
       %4644 = OpLoad %v4float %r7
       %4645 = OpCompositeInsert %v4float %4643 %4644 3
               OpStore %r7 %4645
       %4646 = OpLoad %v4float %r11
       %4647 = OpVectorShuffle %v3float %4646 %4646 0 1 2
       %4648 = OpBitcast %v3float %2013
       %4649 = OpFAdd %v3float %4647 %4648
       %4650 = OpLoad %v4float %r11
       %4651 = OpVectorShuffle %v4float %4650 %4649 4 5 6 3
               OpStore %r11 %4651
       %4652 = OpLoad %v4float %r11
       %4653 = OpVectorShuffle %v3float %4652 %4652 0 1 2
       %4654 = OpLoad %v4float %r11
       %4655 = OpVectorShuffle %v3float %4654 %4654 0 1 2
       %4656 = OpDot %float %4653 %4655
       %4657 = OpLoad %v4float %r8
       %4658 = OpCompositeInsert %v4float %4656 %4657 3
               OpStore %r8 %4658
       %4659 = OpLoad %v4float %r8
       %4660 = OpCompositeExtract %float %4659 3
       %4661 = OpExtInst %float %1 InverseSqrt %4660
       %4662 = OpLoad %v4float %r8
       %4663 = OpCompositeInsert %v4float %4661 %4662 3
               OpStore %r8 %4663
       %4664 = OpLoad %v4float %r8
       %4665 = OpVectorShuffle %v3float %4664 %4664 3 3 3
       %4666 = OpLoad %v4float %r11
       %4667 = OpVectorShuffle %v3float %4666 %4666 0 1 2
       %4668 = OpFMul %v3float %4665 %4667
       %4669 = OpLoad %v4float %r11
       %4670 = OpVectorShuffle %v4float %4669 %4668 4 5 6 3
               OpStore %r11 %4670
       %4671 = OpLoad %v4float %r7
       %4672 = OpCompositeExtract %float %4671 3
       %4673 = OpFNegate %float %4672
       %4674 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_9
       %4675 = OpAccessChain %_ptr_Uniform_float %4674 %uint_3
       %4676 = OpLoad %float %4675
       %4677 = OpBitcast %float %uint_1065353216
       %4678 = OpExtInst %float %1 Fma %4673 %4676 %4677
       %4679 = OpExtInst %float %1 NClamp %4678 %float_0 %float_1
       %4680 = OpLoad %v4float %r7
       %4681 = OpCompositeInsert %v4float %4679 %4680 3
               OpStore %r7 %4681
       %4682 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_17
       %4683 = OpAccessChain %_ptr_Uniform_float %4682 %uint_3
       %4684 = OpLoad %float %4683
       %4685 = OpFNegate %float %4684
       %4686 = OpBitcast %float %uint_1065353216
       %4687 = OpFAdd %float %4685 %4686
       %4688 = OpLoad %v4float %r8
       %4689 = OpCompositeInsert %v4float %4687 %4688 3
               OpStore %r8 %4689
       %4690 = OpLoad %v4float %r8
       %4691 = OpCompositeExtract %float %4690 3
       %4692 = OpLoad %v4float %r7
       %4693 = OpCompositeExtract %float %4692 3
       %4694 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_17
       %4695 = OpAccessChain %_ptr_Uniform_float %4694 %uint_3
       %4696 = OpLoad %float %4695
       %4697 = OpExtInst %float %1 Fma %4691 %4693 %4696
       %4698 = OpLoad %v4float %r8
       %4699 = OpCompositeInsert %v4float %4697 %4698 3
               OpStore %r8 %4699
       %4700 = OpLoad %v4float %r7
       %4701 = OpCompositeExtract %float %4700 3
       %4702 = OpLoad %v4float %r8
       %4703 = OpCompositeExtract %float %4702 3
       %4704 = OpFDiv %float %4701 %4703
       %4705 = OpLoad %v4float %r7
       %4706 = OpCompositeInsert %v4float %4704 %4705 3
               OpStore %r7 %4706
       %4707 = OpLoad %v4float %r11
       %4708 = OpVectorShuffle %v3float %4707 %4707 0 1 2
       %4709 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_17
       %4710 = OpAccessChain %_ptr_Uniform_float %4709 %uint_0
       %4711 = OpLoad %float %4710
       %4712 = OpAccessChain %_ptr_Uniform_float %4709 %uint_1
       %4713 = OpLoad %float %4712
       %4714 = OpAccessChain %_ptr_Uniform_float %4709 %uint_2
       %4715 = OpLoad %float %4714
       %4716 = OpCompositeConstruct %v3float %4711 %4713 %4715
       %4717 = OpFNegate %v3float %4716
       %4718 = OpDot %float %4708 %4717
       %4719 = OpLoad %v4float %r8
       %4720 = OpCompositeInsert %v4float %4718 %4719 3
               OpStore %r8 %4720
       %4721 = OpLoad %v4float %r8
       %4722 = OpCompositeExtract %float %4721 3
       %4724 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_33
       %4725 = OpAccessChain %_ptr_Uniform_float %4724 %uint_0
       %4726 = OpLoad %float %4725
       %4728 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_41
       %4729 = OpAccessChain %_ptr_Uniform_float %4728 %uint_0
       %4730 = OpLoad %float %4729
       %4731 = OpExtInst %float %1 Fma %4722 %4726 %4730
       %4732 = OpExtInst %float %1 NClamp %4731 %float_0 %float_1
       %4733 = OpLoad %v4float %r8
       %4734 = OpCompositeInsert %v4float %4732 %4733 3
               OpStore %r8 %4734
       %4735 = OpLoad %v4float %r11
       %4736 = OpVectorShuffle %v3float %4735 %4735 0 1 2
       %4737 = OpLoad %v4float %r2
       %4738 = OpVectorShuffle %v3float %4737 %4737 0 1 2
       %4739 = OpDot %float %4736 %4738
       %4740 = OpExtInst %float %1 NClamp %4739 %float_0 %float_1
       %4741 = OpLoad %v4float %r10
       %4742 = OpCompositeInsert %v4float %4740 %4741 3
               OpStore %r10 %4742
       %4743 = OpLoad %v4float %r8
       %4744 = OpCompositeExtract %float %4743 3
       %4745 = OpLoad %v4float %r10
       %4746 = OpCompositeExtract %float %4745 3
       %4747 = OpFMul %float %4744 %4746
       %4748 = OpLoad %v4float %r8
       %4749 = OpCompositeInsert %v4float %4747 %4748 3
               OpStore %r8 %4749
       %4750 = OpLoad %v4float %r7
       %4751 = OpCompositeExtract %float %4750 3
       %4752 = OpLoad %v4float %r8
       %4753 = OpCompositeExtract %float %4752 3
       %4754 = OpFMul %float %4751 %4753
       %4755 = OpLoad %v4float %r10
       %4756 = OpCompositeInsert %v4float %4754 %4755 3
               OpStore %r10 %4756
       %4757 = OpLoad %v4float %r10
       %4758 = OpVectorShuffle %v3float %4757 %4757 3 3 3
       %4759 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_25
       %4760 = OpAccessChain %_ptr_Uniform_float %4759 %uint_0
       %4761 = OpLoad %float %4760
       %4762 = OpAccessChain %_ptr_Uniform_float %4759 %uint_1
       %4763 = OpLoad %float %4762
       %4764 = OpAccessChain %_ptr_Uniform_float %4759 %uint_2
       %4765 = OpLoad %float %4764
       %4766 = OpCompositeConstruct %v3float %4761 %4763 %4765
       %4767 = OpFMul %v3float %4758 %4766
       %4768 = OpLoad %v4float %r12
       %4769 = OpVectorShuffle %v4float %4768 %4767 4 5 6 3
               OpStore %r12 %4769
       %4770 = OpLoad %v4float %r12
       %4771 = OpVectorShuffle %v3float %4770 %4770 0 1 2
       %4772 = OpLoad %v4float %r0
       %4773 = OpVectorShuffle %v3float %4772 %4772 0 1 2
       %4774 = OpLoad %v4float %r10
       %4775 = OpVectorShuffle %v3float %4774 %4774 0 1 2
       %4776 = OpExtInst %v3float %1 Fma %4771 %4773 %4775
       %4777 = OpLoad %v4float %r10
       %4778 = OpVectorShuffle %v4float %4777 %4776 4 5 6 3
               OpStore %r10 %4778
       %4779 = OpLoad %v4float %r5
       %4780 = OpVectorShuffle %v3float %4779 %4779 0 1 2
       %4781 = OpLoad %v4float %r1
       %4782 = OpVectorShuffle %v3float %4781 %4781 1 1 1
       %4783 = OpLoad %v4float %r11
       %4784 = OpVectorShuffle %v3float %4783 %4783 0 1 2
       %4785 = OpExtInst %v3float %1 Fma %4780 %4782 %4784
       %4786 = OpLoad %v4float %r11
       %4787 = OpVectorShuffle %v4float %4786 %4785 4 5 6 3
               OpStore %r11 %4787
       %4788 = OpLoad %v4float %r11
       %4789 = OpVectorShuffle %v3float %4788 %4788 0 1 2
       %4790 = OpLoad %v4float %r11
       %4791 = OpVectorShuffle %v3float %4790 %4790 0 1 2
       %4792 = OpDot %float %4789 %4791
       %4793 = OpLoad %v4float %r10
       %4794 = OpCompositeInsert %v4float %4792 %4793 3
               OpStore %r10 %4794
       %4795 = OpLoad %v4float %r10
       %4796 = OpCompositeExtract %float %4795 3
       %4797 = OpExtInst %float %1 InverseSqrt %4796
       %4798 = OpLoad %v4float %r10
       %4799 = OpCompositeInsert %v4float %4797 %4798 3
               OpStore %r10 %4799
       %4800 = OpLoad %v4float %r10
       %4801 = OpVectorShuffle %v3float %4800 %4800 3 3 3
       %4802 = OpLoad %v4float %r11
       %4803 = OpVectorShuffle %v3float %4802 %4802 0 1 2
       %4804 = OpFMul %v3float %4801 %4803
       %4805 = OpLoad %v4float %r11
       %4806 = OpVectorShuffle %v4float %4805 %4804 4 5 6 3
               OpStore %r11 %4806
       %4807 = OpLoad %v4float %r11
       %4808 = OpVectorShuffle %v3float %4807 %4807 0 1 2
       %4809 = OpLoad %v4float %r6
       %4810 = OpVectorShuffle %v3float %4809 %4809 0 1 2
       %4811 = OpDot %float %4808 %4810
       %4812 = OpExtInst %float %1 NClamp %4811 %float_0 %float_1
       %4813 = OpLoad %v4float %r10
       %4814 = OpCompositeInsert %v4float %4812 %4813 3
               OpStore %r10 %4814
       %4815 = OpLoad %v4float %r10
       %4816 = OpCompositeExtract %float %4815 3
       %4817 = OpFNegate %float %4816
       %4818 = OpBitcast %float %uint_1065353216
       %4819 = OpFAdd %float %4817 %4818
       %4820 = OpLoad %v4float %r10
       %4821 = OpCompositeInsert %v4float %4819 %4820 3
               OpStore %r10 %4821
       %4822 = OpLoad %v4float %r10
       %4823 = OpCompositeExtract %float %4822 3
       %4824 = OpLoad %v4float %r10
       %4825 = OpCompositeExtract %float %4824 3
       %4826 = OpFMul %float %4823 %4825
       %4827 = OpLoad %v4float %r11
       %4828 = OpCompositeInsert %v4float %4826 %4827 3
               OpStore %r11 %4828
       %4829 = OpLoad %v4float %r11
       %4830 = OpCompositeExtract %float %4829 3
       %4831 = OpLoad %v4float %r11
       %4832 = OpCompositeExtract %float %4831 3
       %4833 = OpFMul %float %4830 %4832
       %4834 = OpLoad %v4float %r11
       %4835 = OpCompositeInsert %v4float %4833 %4834 3
               OpStore %r11 %4835
       %4836 = OpLoad %v4float %r10
       %4837 = OpCompositeExtract %float %4836 3
       %4838 = OpLoad %v4float %r11
       %4839 = OpCompositeExtract %float %4838 3
       %4840 = OpFMul %float %4837 %4839
       %4841 = OpLoad %v4float %r10
       %4842 = OpCompositeInsert %v4float %4840 %4841 3
               OpStore %r10 %4842
       %4843 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %4844 = OpAccessChain %_ptr_Uniform_float %4843 %uint_0
       %4845 = OpLoad %float %4844
       %4846 = OpLoad %v4float %r10
       %4847 = OpCompositeExtract %float %4846 3
       %4848 = OpLoad %v4float %r4
       %4849 = OpCompositeExtract %float %4848 3
       %4850 = OpExtInst %float %1 Fma %4845 %4847 %4849
       %4851 = OpLoad %v4float %r10
       %4852 = OpCompositeInsert %v4float %4850 %4851 3
               OpStore %r10 %4852
       %4853 = OpLoad %v4float %r11
       %4854 = OpVectorShuffle %v3float %4853 %4853 0 1 2
       %4855 = OpLoad %v4float %r2
       %4856 = OpVectorShuffle %v3float %4855 %4855 0 1 2
       %4857 = OpDot %float %4854 %4856
       %4858 = OpExtInst %float %1 NClamp %4857 %float_0 %float_1
       %4859 = OpLoad %v4float %r11
       %4860 = OpCompositeInsert %v4float %4858 %4859 0
               OpStore %r11 %4860
       %4861 = OpLoad %v4float %r11
       %4862 = OpCompositeExtract %float %4861 0
       %4863 = OpExtInst %float %1 Log2 %4862
       %4864 = OpLoad %v4float %r11
       %4865 = OpCompositeInsert %v4float %4863 %4864 0
               OpStore %r11 %4865
       %4866 = OpLoad %v4float %r9
       %4867 = OpCompositeExtract %float %4866 3
       %4868 = OpLoad %v4float %r11
       %4869 = OpCompositeExtract %float %4868 0
       %4870 = OpFMul %float %4867 %4869
       %4871 = OpLoad %v4float %r11
       %4872 = OpCompositeInsert %v4float %4870 %4871 0
               OpStore %r11 %4872
       %4873 = OpLoad %v4float %r11
       %4874 = OpCompositeExtract %float %4873 0
       %4875 = OpExtInst %float %1 Exp2 %4874
       %4876 = OpLoad %v4float %r11
       %4877 = OpCompositeInsert %v4float %4875 %4876 0
               OpStore %r11 %4877
       %4878 = OpLoad %v4float %r10
       %4879 = OpCompositeExtract %float %4878 3
       %4880 = OpLoad %v4float %r11
       %4881 = OpCompositeExtract %float %4880 0
       %4882 = OpFMul %float %4879 %4881
       %4883 = OpLoad %v4float %r10
       %4884 = OpCompositeInsert %v4float %4882 %4883 3
               OpStore %r10 %4884
       %4885 = OpLoad %v4float %r8
       %4886 = OpCompositeExtract %float %4885 3
       %4887 = OpLoad %v4float %r10
       %4888 = OpCompositeExtract %float %4887 3
       %4889 = OpFMul %float %4886 %4888
       %4890 = OpLoad %v4float %r8
       %4891 = OpCompositeInsert %v4float %4889 %4890 3
               OpStore %r8 %4891
       %4892 = OpLoad %v4float %r7
       %4893 = OpCompositeExtract %float %4892 3
       %4894 = OpLoad %v4float %r8
       %4895 = OpCompositeExtract %float %4894 3
       %4896 = OpFMul %float %4893 %4895
       %4897 = OpLoad %v4float %r7
       %4898 = OpCompositeInsert %v4float %4896 %4897 3
               OpStore %r7 %4898
       %4899 = OpLoad %v4float %r5
       %4900 = OpCompositeExtract %float %4899 3
       %4901 = OpLoad %v4float %r7
       %4902 = OpCompositeExtract %float %4901 3
       %4903 = OpFMul %float %4900 %4902
       %4904 = OpLoad %v4float %r7
       %4905 = OpCompositeInsert %v4float %4903 %4904 3
               OpStore %r7 %4905
       %4906 = OpLoad %v4float %r7
       %4907 = OpVectorShuffle %v3float %4906 %4906 3 3 3
       %4908 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_25
       %4909 = OpAccessChain %_ptr_Uniform_float %4908 %uint_0
       %4910 = OpLoad %float %4909
       %4911 = OpAccessChain %_ptr_Uniform_float %4908 %uint_1
       %4912 = OpLoad %float %4911
       %4913 = OpAccessChain %_ptr_Uniform_float %4908 %uint_2
       %4914 = OpLoad %float %4913
       %4915 = OpCompositeConstruct %v3float %4910 %4912 %4914
       %4916 = OpLoad %v4float %r9
       %4917 = OpVectorShuffle %v3float %4916 %4916 0 1 2
       %4918 = OpExtInst %v3float %1 Fma %4907 %4915 %4917
       %4919 = OpLoad %v4float %r9
       %4920 = OpVectorShuffle %v4float %4919 %4918 4 5 6 3
               OpStore %r9 %4920
               OpBranch %4520
       %4520 = OpLabel
               OpBranch %4493
       %4921 = OpLabel
       %4922 = OpBitcast %float %uint_4294967295
       %4923 = OpLoad %v4float %r4
       %4924 = OpCompositeInsert %v4float %4922 %4923 2
               OpStore %r4 %4924
               OpBranch %4493
       %4493 = OpLabel
       %4925 = OpLoad %v4float %r4
       %4926 = OpCompositeExtract %float %4925 2
       %4927 = OpBitcast %uint %4926
       %4928 = OpIEqual %bool %4927 %uint_0
               OpSelectionMerge %4930 None
               OpBranchConditional %4928 %4929 %4930
       %4929 = OpLabel
       %4932 = OpBitcast %int %uint_7
       %4933 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_2
       %4934 = OpAccessChain %_ptr_Uniform_float %4933 %uint_0
       %4935 = OpLoad %float %4934
       %4936 = OpBitcast %int %4935
       %4937 = OpSGreaterThanEqual %bool %4932 %4936
       %4938 = OpSelect %uint %4937 %uint_4294967295 %uint_0
       %4939 = OpBitcast %float %4938
       %4940 = OpLoad %v4float %r7
       %4941 = OpCompositeInsert %v4float %4939 %4940 3
               OpStore %r7 %4941
       %4942 = OpLoad %v4float %r4
       %4943 = OpCompositeExtract %float %4942 2
       %4944 = OpBitcast %uint %4943
       %4945 = OpLoad %v4float %r7
       %4946 = OpCompositeExtract %float %4945 3
       %4947 = OpBitcast %uint %4946
       %4948 = OpBitwiseOr %uint %4944 %4947
       %4949 = OpBitcast %float %4948
       %4950 = OpLoad %v4float %r4
       %4951 = OpCompositeInsert %v4float %4949 %4950 2
               OpStore %r4 %4951
       %4952 = OpLoad %v4float %r4
       %4953 = OpCompositeExtract %float %4952 2
       %4954 = OpBitcast %uint %4953
       %4955 = OpIEqual %bool %4954 %uint_0
               OpSelectionMerge %4957 None
               OpBranchConditional %4955 %4956 %4957
       %4956 = OpLabel
       %4959 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_26
       %4960 = OpAccessChain %_ptr_Uniform_float %4959 %uint_3
       %4961 = OpLoad %float %4960
       %4962 = OpBitcast %float %uint_0
       %4963 = OpFOrdEqual %bool %4961 %4962
       %4964 = OpSelect %uint %4963 %uint_4294967295 %uint_0
       %4965 = OpBitcast %float %4964
       %4966 = OpLoad %v4float %r4
       %4967 = OpCompositeInsert %v4float %4965 %4966 2
               OpStore %r4 %4967
       %4968 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4969 = OpLoad %v4float %4968
       %4970 = OpVectorShuffle %v3float %4969 %4969 0 1 2
       %4971 = OpFNegate %v3float %4970
       %4972 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_10
       %4973 = OpAccessChain %_ptr_Uniform_float %4972 %uint_0
       %4974 = OpLoad %float %4973
       %4975 = OpAccessChain %_ptr_Uniform_float %4972 %uint_1
       %4976 = OpLoad %float %4975
       %4977 = OpAccessChain %_ptr_Uniform_float %4972 %uint_2
       %4978 = OpLoad %float %4977
       %4979 = OpCompositeConstruct %v3float %4974 %4976 %4978
       %4980 = OpFAdd %v3float %4971 %4979
       %4981 = OpLoad %v4float %r11
       %4982 = OpVectorShuffle %v4float %4981 %4980 4 5 6 3
               OpStore %r11 %4982
       %4983 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %4984 = OpLoad %v4float %4983
       %4985 = OpVectorShuffle %v3float %4984 %4984 0 1 2
       %4986 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_10
       %4987 = OpAccessChain %_ptr_Uniform_float %4986 %uint_0
       %4988 = OpLoad %float %4987
       %4989 = OpAccessChain %_ptr_Uniform_float %4986 %uint_1
       %4990 = OpLoad %float %4989
       %4991 = OpAccessChain %_ptr_Uniform_float %4986 %uint_2
       %4992 = OpLoad %float %4991
       %4993 = OpCompositeConstruct %v3float %4988 %4990 %4992
       %4994 = OpFNegate %v3float %4993
       %4995 = OpFAdd %v3float %4985 %4994
       %4996 = OpLoad %v4float %r12
       %4997 = OpVectorShuffle %v4float %4996 %4995 4 5 6 3
               OpStore %r12 %4997
       %4998 = OpLoad %v4float %r12
       %4999 = OpVectorShuffle %v3float %4998 %4998 0 1 2
       %5001 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_18
       %5002 = OpAccessChain %_ptr_Uniform_float %5001 %uint_0
       %5003 = OpLoad %float %5002
       %5004 = OpAccessChain %_ptr_Uniform_float %5001 %uint_1
       %5005 = OpLoad %float %5004
       %5006 = OpAccessChain %_ptr_Uniform_float %5001 %uint_2
       %5007 = OpLoad %float %5006
       %5008 = OpCompositeConstruct %v3float %5003 %5005 %5007
       %5009 = OpDot %float %4999 %5008
       %5010 = OpLoad %v4float %r7
       %5011 = OpCompositeInsert %v4float %5009 %5010 3
               OpStore %r7 %5011
       %5012 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_26
       %5013 = OpAccessChain %_ptr_Uniform_float %5012 %uint_3
       %5014 = OpLoad %float %5013
       %5015 = OpBitcast %float %uint_953267991
       %5016 = OpFAdd %float %5014 %5015
       %5017 = OpLoad %v4float %r8
       %5018 = OpCompositeInsert %v4float %5016 %5017 3
               OpStore %r8 %5018
       %5019 = OpLoad %v4float %r7
       %5020 = OpCompositeExtract %float %5019 3
       %5021 = OpLoad %v4float %r8
       %5022 = OpCompositeExtract %float %5021 3
       %5023 = OpFDiv %float %5020 %5022
       %5024 = OpExtInst %float %1 NClamp %5023 %float_0 %float_1
       %5025 = OpLoad %v4float %r7
       %5026 = OpCompositeInsert %v4float %5024 %5025 3
               OpStore %r7 %5026
       %5027 = OpLoad %v4float %r7
       %5028 = OpCompositeExtract %float %5027 3
       %5029 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_26
       %5030 = OpAccessChain %_ptr_Uniform_float %5029 %uint_3
       %5031 = OpLoad %float %5030
       %5032 = OpFMul %float %5028 %5031
       %5033 = OpLoad %v4float %r7
       %5034 = OpCompositeInsert %v4float %5032 %5033 3
               OpStore %r7 %5034
       %5035 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_18
       %5036 = OpAccessChain %_ptr_Uniform_float %5035 %uint_0
       %5037 = OpLoad %float %5036
       %5038 = OpAccessChain %_ptr_Uniform_float %5035 %uint_1
       %5039 = OpLoad %float %5038
       %5040 = OpAccessChain %_ptr_Uniform_float %5035 %uint_2
       %5041 = OpLoad %float %5040
       %5042 = OpCompositeConstruct %v3float %5037 %5039 %5041
       %5043 = OpLoad %v4float %r7
       %5044 = OpVectorShuffle %v3float %5043 %5043 3 3 3
       %5045 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_10
       %5046 = OpAccessChain %_ptr_Uniform_float %5045 %uint_0
       %5047 = OpLoad %float %5046
       %5048 = OpAccessChain %_ptr_Uniform_float %5045 %uint_1
       %5049 = OpLoad %float %5048
       %5050 = OpAccessChain %_ptr_Uniform_float %5045 %uint_2
       %5051 = OpLoad %float %5050
       %5052 = OpCompositeConstruct %v3float %5047 %5049 %5051
       %5053 = OpExtInst %v3float %1 Fma %5042 %5044 %5052
       %5054 = OpLoad %v4float %r12
       %5055 = OpVectorShuffle %v4float %5054 %5053 4 5 6 3
               OpStore %r12 %5055
       %5056 = OpLoad %v4float %r12
       %5057 = OpVectorShuffle %v3float %5056 %5056 0 1 2
       %5058 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
       %5059 = OpLoad %v4float %5058
       %5060 = OpVectorShuffle %v3float %5059 %5059 0 1 2
       %5061 = OpFNegate %v3float %5060
       %5062 = OpFAdd %v3float %5057 %5061
       %5063 = OpLoad %v4float %r12
       %5064 = OpVectorShuffle %v4float %5063 %5062 4 5 6 3
               OpStore %r12 %5064
       %5065 = OpLoad %v4float %r4
       %5066 = OpVectorShuffle %v3float %5065 %5065 2 2 2
       %5067 = OpBitcast %v3uint %5066
       %5068 = OpLoad %v4float %r11
       %5069 = OpVectorShuffle %v3float %5068 %5068 0 1 2
       %5070 = OpLoad %v4float %r12
       %5071 = OpVectorShuffle %v3float %5070 %5070 0 1 2
       %5072 = OpINotEqual %v3bool %5067 %1998
       %5073 = OpSelect %v3float %5072 %5069 %5071
       %5074 = OpLoad %v4float %r11
       %5075 = OpVectorShuffle %v4float %5074 %5073 4 5 6 3
               OpStore %r11 %5075
       %5076 = OpLoad %v4float %r11
       %5077 = OpVectorShuffle %v3float %5076 %5076 0 1 2
       %5078 = OpLoad %v4float %r11
       %5079 = OpVectorShuffle %v3float %5078 %5078 0 1 2
       %5080 = OpDot %float %5077 %5079
       %5081 = OpLoad %v4float %r4
       %5082 = OpCompositeInsert %v4float %5080 %5081 2
               OpStore %r4 %5082
       %5083 = OpLoad %v4float %r11
       %5084 = OpVectorShuffle %v3float %5083 %5083 0 1 2
       %5085 = OpBitcast %v3float %2013
       %5086 = OpFAdd %v3float %5084 %5085
       %5087 = OpLoad %v4float %r11
       %5088 = OpVectorShuffle %v4float %5087 %5086 4 5 6 3
               OpStore %r11 %5088
       %5089 = OpLoad %v4float %r11
       %5090 = OpVectorShuffle %v3float %5089 %5089 0 1 2
       %5091 = OpLoad %v4float %r11
       %5092 = OpVectorShuffle %v3float %5091 %5091 0 1 2
       %5093 = OpDot %float %5090 %5092
       %5094 = OpLoad %v4float %r7
       %5095 = OpCompositeInsert %v4float %5093 %5094 3
               OpStore %r7 %5095
       %5096 = OpLoad %v4float %r7
       %5097 = OpCompositeExtract %float %5096 3
       %5098 = OpExtInst %float %1 InverseSqrt %5097
       %5099 = OpLoad %v4float %r7
       %5100 = OpCompositeInsert %v4float %5098 %5099 3
               OpStore %r7 %5100
       %5101 = OpLoad %v4float %r7
       %5102 = OpVectorShuffle %v3float %5101 %5101 3 3 3
       %5103 = OpLoad %v4float %r11
       %5104 = OpVectorShuffle %v3float %5103 %5103 0 1 2
       %5105 = OpFMul %v3float %5102 %5104
       %5106 = OpLoad %v4float %r11
       %5107 = OpVectorShuffle %v4float %5106 %5105 4 5 6 3
               OpStore %r11 %5107
       %5108 = OpLoad %v4float %r4
       %5109 = OpCompositeExtract %float %5108 2
       %5110 = OpFNegate %float %5109
       %5111 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_10
       %5112 = OpAccessChain %_ptr_Uniform_float %5111 %uint_3
       %5113 = OpLoad %float %5112
       %5114 = OpBitcast %float %uint_1065353216
       %5115 = OpExtInst %float %1 Fma %5110 %5113 %5114
       %5116 = OpExtInst %float %1 NClamp %5115 %float_0 %float_1
       %5117 = OpLoad %v4float %r4
       %5118 = OpCompositeInsert %v4float %5116 %5117 2
               OpStore %r4 %5118
       %5119 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_18
       %5120 = OpAccessChain %_ptr_Uniform_float %5119 %uint_3
       %5121 = OpLoad %float %5120
       %5122 = OpFNegate %float %5121
       %5123 = OpBitcast %float %uint_1065353216
       %5124 = OpFAdd %float %5122 %5123
       %5125 = OpLoad %v4float %r7
       %5126 = OpCompositeInsert %v4float %5124 %5125 3
               OpStore %r7 %5126
       %5127 = OpLoad %v4float %r7
       %5128 = OpCompositeExtract %float %5127 3
       %5129 = OpLoad %v4float %r4
       %5130 = OpCompositeExtract %float %5129 2
       %5131 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_18
       %5132 = OpAccessChain %_ptr_Uniform_float %5131 %uint_3
       %5133 = OpLoad %float %5132
       %5134 = OpExtInst %float %1 Fma %5128 %5130 %5133
       %5135 = OpLoad %v4float %r7
       %5136 = OpCompositeInsert %v4float %5134 %5135 3
               OpStore %r7 %5136
       %5137 = OpLoad %v4float %r4
       %5138 = OpCompositeExtract %float %5137 2
       %5139 = OpLoad %v4float %r7
       %5140 = OpCompositeExtract %float %5139 3
       %5141 = OpFDiv %float %5138 %5140
       %5142 = OpLoad %v4float %r4
       %5143 = OpCompositeInsert %v4float %5141 %5142 2
               OpStore %r4 %5143
       %5144 = OpLoad %v4float %r11
       %5145 = OpVectorShuffle %v3float %5144 %5144 0 1 2
       %5146 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_18
       %5147 = OpAccessChain %_ptr_Uniform_float %5146 %uint_0
       %5148 = OpLoad %float %5147
       %5149 = OpAccessChain %_ptr_Uniform_float %5146 %uint_1
       %5150 = OpLoad %float %5149
       %5151 = OpAccessChain %_ptr_Uniform_float %5146 %uint_2
       %5152 = OpLoad %float %5151
       %5153 = OpCompositeConstruct %v3float %5148 %5150 %5152
       %5154 = OpFNegate %v3float %5153
       %5155 = OpDot %float %5145 %5154
       %5156 = OpLoad %v4float %r7
       %5157 = OpCompositeInsert %v4float %5155 %5156 3
               OpStore %r7 %5157
       %5158 = OpLoad %v4float %r7
       %5159 = OpCompositeExtract %float %5158 3
       %5161 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_34
       %5162 = OpAccessChain %_ptr_Uniform_float %5161 %uint_0
       %5163 = OpLoad %float %5162
       %5165 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_42
       %5166 = OpAccessChain %_ptr_Uniform_float %5165 %uint_0
       %5167 = OpLoad %float %5166
       %5168 = OpExtInst %float %1 Fma %5159 %5163 %5167
       %5169 = OpExtInst %float %1 NClamp %5168 %float_0 %float_1
       %5170 = OpLoad %v4float %r7
       %5171 = OpCompositeInsert %v4float %5169 %5170 3
               OpStore %r7 %5171
       %5172 = OpLoad %v4float %r11
       %5173 = OpVectorShuffle %v3float %5172 %5172 0 1 2
       %5174 = OpLoad %v4float %r2
       %5175 = OpVectorShuffle %v3float %5174 %5174 0 1 2
       %5176 = OpDot %float %5173 %5175
       %5177 = OpExtInst %float %1 NClamp %5176 %float_0 %float_1
       %5178 = OpLoad %v4float %r8
       %5179 = OpCompositeInsert %v4float %5177 %5178 3
               OpStore %r8 %5179
       %5180 = OpLoad %v4float %r7
       %5181 = OpCompositeExtract %float %5180 3
       %5182 = OpLoad %v4float %r8
       %5183 = OpCompositeExtract %float %5182 3
       %5184 = OpFMul %float %5181 %5183
       %5185 = OpLoad %v4float %r7
       %5186 = OpCompositeInsert %v4float %5184 %5185 3
               OpStore %r7 %5186
       %5187 = OpLoad %v4float %r4
       %5188 = OpCompositeExtract %float %5187 2
       %5189 = OpLoad %v4float %r7
       %5190 = OpCompositeExtract %float %5189 3
       %5191 = OpFMul %float %5188 %5190
       %5192 = OpLoad %v4float %r8
       %5193 = OpCompositeInsert %v4float %5191 %5192 3
               OpStore %r8 %5193
       %5194 = OpLoad %v4float %r8
       %5195 = OpVectorShuffle %v3float %5194 %5194 3 3 3
       %5196 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_26
       %5197 = OpAccessChain %_ptr_Uniform_float %5196 %uint_0
       %5198 = OpLoad %float %5197
       %5199 = OpAccessChain %_ptr_Uniform_float %5196 %uint_1
       %5200 = OpLoad %float %5199
       %5201 = OpAccessChain %_ptr_Uniform_float %5196 %uint_2
       %5202 = OpLoad %float %5201
       %5203 = OpCompositeConstruct %v3float %5198 %5200 %5202
       %5204 = OpFMul %v3float %5195 %5203
       %5205 = OpLoad %v4float %r12
       %5206 = OpVectorShuffle %v4float %5205 %5204 4 5 6 3
               OpStore %r12 %5206
       %5207 = OpLoad %v4float %r12
       %5208 = OpVectorShuffle %v3float %5207 %5207 0 1 2
       %5209 = OpLoad %v4float %r0
       %5210 = OpVectorShuffle %v3float %5209 %5209 0 1 2
       %5211 = OpLoad %v4float %r10
       %5212 = OpVectorShuffle %v3float %5211 %5211 0 1 2
       %5213 = OpExtInst %v3float %1 Fma %5208 %5210 %5212
       %5214 = OpLoad %v4float %r10
       %5215 = OpVectorShuffle %v4float %5214 %5213 4 5 6 3
               OpStore %r10 %5215
       %5216 = OpLoad %v4float %r5
       %5217 = OpVectorShuffle %v3float %5216 %5216 0 1 2
       %5218 = OpLoad %v4float %r1
       %5219 = OpVectorShuffle %v3float %5218 %5218 1 1 1
       %5220 = OpLoad %v4float %r11
       %5221 = OpVectorShuffle %v3float %5220 %5220 0 1 2
       %5222 = OpExtInst %v3float %1 Fma %5217 %5219 %5221
       %5223 = OpLoad %v4float %r5
       %5224 = OpVectorShuffle %v4float %5223 %5222 4 5 6 3
               OpStore %r5 %5224
       %5225 = OpLoad %v4float %r5
       %5226 = OpVectorShuffle %v3float %5225 %5225 0 1 2
       %5227 = OpLoad %v4float %r5
       %5228 = OpVectorShuffle %v3float %5227 %5227 0 1 2
       %5229 = OpDot %float %5226 %5228
       %5230 = OpLoad %v4float %r1
       %5231 = OpCompositeInsert %v4float %5229 %5230 1
               OpStore %r1 %5231
       %5232 = OpLoad %v4float %r1
       %5233 = OpCompositeExtract %float %5232 1
       %5234 = OpExtInst %float %1 InverseSqrt %5233
       %5235 = OpLoad %v4float %r1
       %5236 = OpCompositeInsert %v4float %5234 %5235 1
               OpStore %r1 %5236
       %5237 = OpLoad %v4float %r1
       %5238 = OpVectorShuffle %v3float %5237 %5237 1 1 1
       %5239 = OpLoad %v4float %r5
       %5240 = OpVectorShuffle %v3float %5239 %5239 0 1 2
       %5241 = OpFMul %v3float %5238 %5240
       %5242 = OpLoad %v4float %r5
       %5243 = OpVectorShuffle %v4float %5242 %5241 4 5 6 3
               OpStore %r5 %5243
       %5244 = OpLoad %v4float %r5
       %5245 = OpVectorShuffle %v3float %5244 %5244 0 1 2
       %5246 = OpLoad %v4float %r6
       %5247 = OpVectorShuffle %v3float %5246 %5246 0 1 2
       %5248 = OpDot %float %5245 %5247
       %5249 = OpExtInst %float %1 NClamp %5248 %float_0 %float_1
       %5250 = OpLoad %v4float %r1
       %5251 = OpCompositeInsert %v4float %5249 %5250 1
               OpStore %r1 %5251
       %5252 = OpLoad %v4float %r1
       %5253 = OpCompositeExtract %float %5252 1
       %5254 = OpFNegate %float %5253
       %5255 = OpBitcast %float %uint_1065353216
       %5256 = OpFAdd %float %5254 %5255
       %5257 = OpLoad %v4float %r1
       %5258 = OpCompositeInsert %v4float %5256 %5257 1
               OpStore %r1 %5258
       %5259 = OpLoad %v4float %r1
       %5260 = OpCompositeExtract %float %5259 1
       %5261 = OpLoad %v4float %r1
       %5262 = OpCompositeExtract %float %5261 1
       %5263 = OpFMul %float %5260 %5262
       %5264 = OpLoad %v4float %r6
       %5265 = OpCompositeInsert %v4float %5263 %5264 0
               OpStore %r6 %5265
       %5266 = OpLoad %v4float %r6
       %5267 = OpCompositeExtract %float %5266 0
       %5268 = OpLoad %v4float %r6
       %5269 = OpCompositeExtract %float %5268 0
       %5270 = OpFMul %float %5267 %5269
       %5271 = OpLoad %v4float %r6
       %5272 = OpCompositeInsert %v4float %5270 %5271 0
               OpStore %r6 %5272
       %5273 = OpLoad %v4float %r1
       %5274 = OpCompositeExtract %float %5273 1
       %5275 = OpLoad %v4float %r6
       %5276 = OpCompositeExtract %float %5275 0
       %5277 = OpFMul %float %5274 %5276
       %5278 = OpLoad %v4float %r1
       %5279 = OpCompositeInsert %v4float %5277 %5278 1
               OpStore %r1 %5279
       %5280 = OpAccessChain %_ptr_Uniform_v4float %cb12 %int_0 %int_0
       %5281 = OpAccessChain %_ptr_Uniform_float %5280 %uint_0
       %5282 = OpLoad %float %5281
       %5283 = OpLoad %v4float %r1
       %5284 = OpCompositeExtract %float %5283 1
       %5285 = OpLoad %v4float %r4
       %5286 = OpCompositeExtract %float %5285 3
       %5287 = OpExtInst %float %1 Fma %5282 %5284 %5286
       %5288 = OpLoad %v4float %r1
       %5289 = OpCompositeInsert %v4float %5287 %5288 1
               OpStore %r1 %5289
       %5290 = OpLoad %v4float %r5
       %5291 = OpVectorShuffle %v3float %5290 %5290 0 1 2
       %5292 = OpLoad %v4float %r2
       %5293 = OpVectorShuffle %v3float %5292 %5292 0 1 2
       %5294 = OpDot %float %5291 %5293
       %5295 = OpExtInst %float %1 NClamp %5294 %float_0 %float_1
       %5296 = OpLoad %v4float %r4
       %5297 = OpCompositeInsert %v4float %5295 %5296 3
               OpStore %r4 %5297
       %5298 = OpLoad %v4float %r4
       %5299 = OpCompositeExtract %float %5298 3
       %5300 = OpExtInst %float %1 Log2 %5299
       %5301 = OpLoad %v4float %r4
       %5302 = OpCompositeInsert %v4float %5300 %5301 3
               OpStore %r4 %5302
       %5303 = OpLoad %v4float %r4
       %5304 = OpCompositeExtract %float %5303 3
       %5305 = OpLoad %v4float %r9
       %5306 = OpCompositeExtract %float %5305 3
       %5307 = OpFMul %float %5304 %5306
       %5308 = OpLoad %v4float %r4
       %5309 = OpCompositeInsert %v4float %5307 %5308 3
               OpStore %r4 %5309
       %5310 = OpLoad %v4float %r4
       %5311 = OpCompositeExtract %float %5310 3
       %5312 = OpExtInst %float %1 Exp2 %5311
       %5313 = OpLoad %v4float %r4
       %5314 = OpCompositeInsert %v4float %5312 %5313 3
               OpStore %r4 %5314
       %5315 = OpLoad %v4float %r1
       %5316 = OpCompositeExtract %float %5315 1
       %5317 = OpLoad %v4float %r4
       %5318 = OpCompositeExtract %float %5317 3
       %5319 = OpFMul %float %5316 %5318
       %5320 = OpLoad %v4float %r1
       %5321 = OpCompositeInsert %v4float %5319 %5320 1
               OpStore %r1 %5321
       %5322 = OpLoad %v4float %r7
       %5323 = OpCompositeExtract %float %5322 3
       %5324 = OpLoad %v4float %r1
       %5325 = OpCompositeExtract %float %5324 1
       %5326 = OpFMul %float %5323 %5325
       %5327 = OpLoad %v4float %r1
       %5328 = OpCompositeInsert %v4float %5326 %5327 1
               OpStore %r1 %5328
       %5329 = OpLoad %v4float %r4
       %5330 = OpCompositeExtract %float %5329 2
       %5331 = OpLoad %v4float %r1
       %5332 = OpCompositeExtract %float %5331 1
       %5333 = OpFMul %float %5330 %5332
       %5334 = OpLoad %v4float %r1
       %5335 = OpCompositeInsert %v4float %5333 %5334 1
               OpStore %r1 %5335
       %5336 = OpLoad %v4float %r5
       %5337 = OpCompositeExtract %float %5336 3
       %5338 = OpLoad %v4float %r1
       %5339 = OpCompositeExtract %float %5338 1
       %5340 = OpFMul %float %5337 %5339
       %5341 = OpLoad %v4float %r1
       %5342 = OpCompositeInsert %v4float %5340 %5341 1
               OpStore %r1 %5342
       %5343 = OpLoad %v4float %r1
       %5344 = OpVectorShuffle %v3float %5343 %5343 1 1 1
       %5345 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_26
       %5346 = OpAccessChain %_ptr_Uniform_float %5345 %uint_0
       %5347 = OpLoad %float %5346
       %5348 = OpAccessChain %_ptr_Uniform_float %5345 %uint_1
       %5349 = OpLoad %float %5348
       %5350 = OpAccessChain %_ptr_Uniform_float %5345 %uint_2
       %5351 = OpLoad %float %5350
       %5352 = OpCompositeConstruct %v3float %5347 %5349 %5351
       %5353 = OpLoad %v4float %r9
       %5354 = OpVectorShuffle %v3float %5353 %5353 0 1 2
       %5355 = OpExtInst %v3float %1 Fma %5344 %5352 %5354
       %5356 = OpLoad %v4float %r9
       %5357 = OpVectorShuffle %v4float %5356 %5355 4 5 6 3
               OpStore %r9 %5357
               OpBranch %4957
       %4957 = OpLabel
               OpBranch %4930
       %4930 = OpLabel
       %5358 = OpLoad %v4float %r6
       %5359 = OpCompositeExtract %float %5358 3
       %5360 = OpLoad %v4float %r6
       %5361 = OpCompositeExtract %float %5360 3
       %5362 = OpFMul %float %5359 %5361
       %5363 = OpLoad %v4float %r1
       %5364 = OpCompositeInsert %v4float %5362 %5363 1
               OpStore %r1 %5364
       %5365 = OpLoad %v4float %r1
       %5366 = OpCompositeExtract %float %5365 0
       %5367 = OpLoad %v4float %r1
       %5368 = OpCompositeExtract %float %5367 0
       %5369 = OpFMul %float %5366 %5368
       %5370 = OpLoad %v4float %r1
       %5371 = OpCompositeInsert %v4float %5369 %5370 0
               OpStore %r1 %5371
       %5372 = OpLoad %v4float %r9
       %5373 = OpVectorShuffle %v3float %5372 %5372 0 1 2
       %5374 = OpLoad %v4float %r1
       %5375 = OpVectorShuffle %v3float %5374 %5374 0 0 0
       %5376 = OpFMul %v3float %5373 %5375
       %5377 = OpLoad %v4float %r5
       %5378 = OpVectorShuffle %v4float %5377 %5376 4 5 6 3
               OpStore %r5 %5378
       %5379 = OpLoad %v4float %r1
       %5380 = OpVectorShuffle %v3float %5379 %5379 1 1 1
       %5381 = OpLoad %v4float %r10
       %5382 = OpVectorShuffle %v3float %5381 %5381 0 1 2
       %5383 = OpLoad %v4float %r5
       %5384 = OpVectorShuffle %v3float %5383 %5383 0 1 2
       %5385 = OpExtInst %v3float %1 Fma %5380 %5382 %5384
       %5386 = OpLoad %v4float %r5
       %5387 = OpVectorShuffle %v4float %5386 %5385 4 5 6 3
               OpStore %r5 %5387
       %5388 = OpLoad %v4float %r7
       %5389 = OpVectorShuffle %v3float %5388 %5388 0 1 2
       %5390 = OpLoad %v4float %r3
       %5391 = OpVectorShuffle %v3float %5390 %5390 3 3 3
       %5392 = OpLoad %v4float %r5
       %5393 = OpVectorShuffle %v3float %5392 %5392 0 1 2
       %5394 = OpExtInst %v3float %1 Fma %5389 %5391 %5393
       %5395 = OpLoad %v4float %r5
       %5396 = OpVectorShuffle %v4float %5395 %5394 4 5 6 3
               OpStore %r5 %5396
       %5397 = OpLoad %v4float %r1
       %5398 = OpCompositeExtract %float %5397 2
       %5399 = OpLoad %v4float %r1
       %5400 = OpCompositeExtract %float %5399 3
       %5402 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_43
       %5403 = OpAccessChain %_ptr_Uniform_float %5402 %uint_3
       %5404 = OpLoad %float %5403
       %5405 = OpExtInst %float %1 Fma %5398 %5400 %5404
       %5406 = OpLoad %v4float %r1
       %5407 = OpCompositeInsert %v4float %5405 %5406 0
               OpStore %r1 %5407
       %5408 = OpLoad %v4float %r1
       %5409 = OpCompositeExtract %float %5408 0
       %5411 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_44
       %5412 = OpAccessChain %_ptr_Uniform_float %5411 %uint_3
       %5413 = OpLoad %float %5412
       %5414 = OpFMul %float %5409 %5413
       %5415 = OpLoad %v4float %r1
       %5416 = OpCompositeInsert %v4float %5414 %5415 0
               OpStore %r1 %5416
       %5417 = OpLoad %v4float %r1
       %5418 = OpCompositeExtract %float %5417 0
       %5419 = OpBitcast %float %uint_0
       %5420 = OpExtInst %float %1 NMax %5418 %5419
       %5421 = OpLoad %v4float %r1
       %5422 = OpCompositeInsert %v4float %5420 %5421 0
               OpStore %r1 %5422
       %5424 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_47
       %5425 = OpAccessChain %_ptr_Uniform_float %5424 %uint_0
       %5426 = OpLoad %float %5425
       %5427 = OpAccessChain %_ptr_Uniform_float %5424 %uint_1
       %5428 = OpLoad %float %5427
       %5429 = OpAccessChain %_ptr_Uniform_float %5424 %uint_2
       %5430 = OpLoad %float %5429
       %5431 = OpCompositeConstruct %v3float %5426 %5428 %5430
       %5432 = OpLoad %v4float %r1
       %5433 = OpVectorShuffle %v3float %5432 %5432 0 0 0
       %5435 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_48
       %5436 = OpAccessChain %_ptr_Uniform_float %5435 %uint_0
       %5437 = OpLoad %float %5436
       %5438 = OpAccessChain %_ptr_Uniform_float %5435 %uint_1
       %5439 = OpLoad %float %5438
       %5440 = OpAccessChain %_ptr_Uniform_float %5435 %uint_2
       %5441 = OpLoad %float %5440
       %5442 = OpCompositeConstruct %v3float %5437 %5439 %5441
       %5443 = OpExtInst %v3float %1 Fma %5431 %5433 %5442
       %5444 = OpLoad %v4float %r1
       %5445 = OpVectorShuffle %v4float %5444 %5443 0 4 5 6
               OpStore %r1 %5445
       %5446 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_13
       %5447 = OpAccessChain %_ptr_Uniform_float %5446 %uint_2
       %5448 = OpLoad %float %5447
       %5449 = OpFNegate %float %5448
       %5450 = OpBitcast %float %uint_1065353216
       %5451 = OpFAdd %float %5449 %5450
       %5452 = OpLoad %v4float %r3
       %5453 = OpCompositeInsert %v4float %5451 %5452 3
               OpStore %r3 %5453
       %5455 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_45
       %5456 = OpAccessChain %_ptr_Uniform_float %5455 %uint_0
       %5457 = OpLoad %float %5456
       %5458 = OpAccessChain %_ptr_Uniform_float %5455 %uint_1
       %5459 = OpLoad %float %5458
       %5460 = OpAccessChain %_ptr_Uniform_float %5455 %uint_2
       %5461 = OpLoad %float %5460
       %5462 = OpCompositeConstruct %v3float %5457 %5459 %5461
       %5463 = OpLoad %v4float %r1
       %5464 = OpVectorShuffle %v3float %5463 %5463 0 0 0
       %5466 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_46
       %5467 = OpAccessChain %_ptr_Uniform_float %5466 %uint_0
       %5468 = OpLoad %float %5467
       %5469 = OpAccessChain %_ptr_Uniform_float %5466 %uint_1
       %5470 = OpLoad %float %5469
       %5471 = OpAccessChain %_ptr_Uniform_float %5466 %uint_2
       %5472 = OpLoad %float %5471
       %5473 = OpCompositeConstruct %v3float %5468 %5470 %5472
       %5474 = OpExtInst %v3float %1 Fma %5462 %5464 %5473
       %5475 = OpLoad %v4float %r6
       %5476 = OpVectorShuffle %v4float %5475 %5474 4 5 6 3
               OpStore %r6 %5476
       %5477 = OpLoad %v4float %r6
       %5478 = OpVectorShuffle %v3float %5477 %5477 0 1 2
       %5479 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_13
       %5480 = OpAccessChain %_ptr_Uniform_float %5479 %uint_2
       %5481 = OpLoad %float %5480
       %5482 = OpCompositeConstruct %v3float %5481 %5481 %5481
       %5483 = OpFMul %v3float %5478 %5482
       %5484 = OpLoad %v4float %r6
       %5485 = OpVectorShuffle %v4float %5484 %5483 4 5 6 3
               OpStore %r6 %5485
       %5486 = OpLoad %v4float %r1
       %5487 = OpVectorShuffle %v3float %5486 %5486 1 2 3
       %5488 = OpLoad %v4float %r3
       %5489 = OpVectorShuffle %v3float %5488 %5488 3 3 3
       %5490 = OpLoad %v4float %r6
       %5491 = OpVectorShuffle %v3float %5490 %5490 0 1 2
       %5492 = OpExtInst %v3float %1 Fma %5487 %5489 %5491
       %5493 = OpLoad %v4float %r1
       %5494 = OpVectorShuffle %v4float %5493 %5492 0 4 5 6
               OpStore %r1 %5494
       %5495 = OpLoad %v4float %r4
       %5496 = OpVectorShuffle %v3float %5495 %5495 1 1 1
       %5497 = OpLoad %v4float %r1
       %5498 = OpVectorShuffle %v3float %5497 %5497 1 2 3
       %5499 = OpFMul %v3float %5496 %5498
       %5500 = OpLoad %v4float %r1
       %5501 = OpVectorShuffle %v4float %5500 %5499 0 4 5 6
               OpStore %r1 %5501
       %5502 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_43
       %5503 = OpAccessChain %_ptr_Uniform_float %5502 %uint_0
       %5504 = OpLoad %float %5503
       %5505 = OpAccessChain %_ptr_Uniform_float %5502 %uint_1
       %5506 = OpLoad %float %5505
       %5507 = OpAccessChain %_ptr_Uniform_float %5502 %uint_2
       %5508 = OpLoad %float %5507
       %5509 = OpCompositeConstruct %v3float %5504 %5506 %5508
       %5510 = OpLoad %v4float %r1
       %5511 = OpVectorShuffle %v3float %5510 %5510 0 0 0
       %5512 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_44
       %5513 = OpAccessChain %_ptr_Uniform_float %5512 %uint_0
       %5514 = OpLoad %float %5513
       %5515 = OpAccessChain %_ptr_Uniform_float %5512 %uint_1
       %5516 = OpLoad %float %5515
       %5517 = OpAccessChain %_ptr_Uniform_float %5512 %uint_2
       %5518 = OpLoad %float %5517
       %5519 = OpCompositeConstruct %v3float %5514 %5516 %5518
       %5520 = OpExtInst %v3float %1 Fma %5509 %5511 %5519
       %5521 = OpLoad %v4float %r6
       %5522 = OpVectorShuffle %v4float %5521 %5520 4 5 6 3
               OpStore %r6 %5522
       %5523 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_46
       %5524 = OpAccessChain %_ptr_Uniform_float %5523 %uint_3
       %5525 = OpLoad %float %5524
       %5526 = OpLoad %v4float %r7
       %5527 = OpCompositeInsert %v4float %5525 %5526 0
               OpStore %r7 %5527
       %5528 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_47
       %5529 = OpAccessChain %_ptr_Uniform_float %5528 %uint_3
       %5530 = OpLoad %float %5529
       %5531 = OpLoad %v4float %r7
       %5532 = OpCompositeInsert %v4float %5530 %5531 1
               OpStore %r7 %5532
       %5533 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_48
       %5534 = OpAccessChain %_ptr_Uniform_float %5533 %uint_3
       %5535 = OpLoad %float %5534
       %5536 = OpLoad %v4float %r7
       %5537 = OpCompositeInsert %v4float %5535 %5536 2
               OpStore %r7 %5537
       %5538 = OpLoad %v4float %r7
       %5539 = OpVectorShuffle %v3float %5538 %5538 0 1 2
       %5540 = OpLoad %v4float %r2
       %5541 = OpVectorShuffle %v3float %5540 %5540 0 1 2
       %5542 = OpDot %float %5539 %5541
       %5543 = OpExtInst %float %1 NClamp %5542 %float_0 %float_1
       %5544 = OpLoad %v4float %r1
       %5545 = OpCompositeInsert %v4float %5543 %5544 0
               OpStore %r1 %5545
       %5547 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_49
       %5548 = OpAccessChain %_ptr_Uniform_float %5547 %uint_0
       %5549 = OpLoad %float %5548
       %5550 = OpAccessChain %_ptr_Uniform_float %5547 %uint_1
       %5551 = OpLoad %float %5550
       %5552 = OpAccessChain %_ptr_Uniform_float %5547 %uint_2
       %5553 = OpLoad %float %5552
       %5554 = OpCompositeConstruct %v3float %5549 %5551 %5553
       %5555 = OpLoad %v4float %r1
       %5556 = OpVectorShuffle %v3float %5555 %5555 0 0 0
       %5557 = OpLoad %v4float %r6
       %5558 = OpVectorShuffle %v3float %5557 %5557 0 1 2
       %5559 = OpExtInst %v3float %1 Fma %5554 %5556 %5558
       %5560 = OpLoad %v4float %r2
       %5561 = OpVectorShuffle %v4float %5560 %5559 4 5 6 3
               OpStore %r2 %5561
       %5562 = OpLoad %v4float %r2
       %5563 = OpVectorShuffle %v3float %5562 %5562 0 1 2
       %5564 = OpLoad %v4float %r4
       %5565 = OpVectorShuffle %v3float %5564 %5564 0 0 0
       %5566 = OpLoad %v4float %r1
       %5567 = OpVectorShuffle %v3float %5566 %5566 1 2 3
       %5568 = OpExtInst %v3float %1 Fma %5563 %5565 %5567
       %5569 = OpLoad %v4float %r1
       %5570 = OpVectorShuffle %v4float %5569 %5568 4 5 6 3
               OpStore %r1 %5570
       %5571 = OpLoad %v4float %r6
       %5572 = OpVectorShuffle %v3float %5571 %5571 3 3 3
       %5573 = OpLoad %v4float %r1
       %5574 = OpVectorShuffle %v3float %5573 %5573 0 1 2
       %5575 = OpFMul %v3float %5572 %5574
       %5576 = OpLoad %v4float %r1
       %5577 = OpVectorShuffle %v4float %5576 %5575 4 5 6 3
               OpStore %r1 %5577
       %5578 = OpLoad %v4float %r1
       %5579 = OpVectorShuffle %v3float %5578 %5578 0 1 2
       %5580 = OpLoad %v4float %r0
       %5581 = OpVectorShuffle %v3float %5580 %5580 0 1 2
       %5582 = OpLoad %v4float %r5
       %5583 = OpVectorShuffle %v3float %5582 %5582 0 1 2
       %5584 = OpExtInst %v3float %1 Fma %5579 %5581 %5583
       %5585 = OpLoad %v4float %r0
       %5586 = OpVectorShuffle %v4float %5585 %5584 4 5 6 3
               OpStore %r0 %5586
       %5587 = OpLoad %v4float %r6
       %5588 = OpCompositeExtract %float %5587 3
       %5589 = OpFNegate %float %5588
       %5590 = OpBitcast %float %uint_1065353216
       %5591 = OpFAdd %float %5589 %5590
       %5592 = OpLoad %v4float %r1
       %5593 = OpCompositeInsert %v4float %5591 %5592 0
               OpStore %r1 %5593
       %5594 = OpLoad %v4float %r4
       %5595 = OpCompositeExtract %float %5594 1
       %5596 = OpLoad %v4float %r4
       %5597 = OpCompositeExtract %float %5596 0
       %5598 = OpExtInst %float %1 NMax %5595 %5597
       %5599 = OpLoad %v4float %r1
       %5600 = OpCompositeInsert %v4float %5598 %5599 1
               OpStore %r1 %5600
       %5601 = OpLoad %v4float %r1
       %5602 = OpVectorShuffle %v3float %5601 %5601 1 1 1
       %5603 = OpLoad %v4float %r3
       %5604 = OpVectorShuffle %v3float %5603 %5603 0 1 2
       %5605 = OpFMul %v3float %5602 %5604
       %5606 = OpLoad %v4float %r1
       %5607 = OpVectorShuffle %v4float %5606 %5605 0 4 5 6
               OpStore %r1 %5607
       %5608 = OpLoad %v4float %r2
       %5609 = OpCompositeExtract %float %5608 3
       %5611 = OpBitcast %float %uint_988335961
       %5612 = OpFMul %float %5609 %5611
       %5613 = OpExtInst %float %1 NClamp %5612 %float_0 %float_1
       %5614 = OpLoad %v4float %r2
       %5615 = OpCompositeInsert %v4float %5613 %5614 0
               OpStore %r2 %5615
       %5616 = OpLoad %v4float %r1
       %5617 = OpVectorShuffle %v3float %5616 %5616 1 2 3
       %5618 = OpLoad %v4float %r2
       %5619 = OpVectorShuffle %v3float %5618 %5618 0 0 0
       %5620 = OpFMul %v3float %5617 %5619
       %5621 = OpLoad %v4float %r2
       %5622 = OpVectorShuffle %v4float %5621 %5620 4 5 6 3
               OpStore %r2 %5622
       %5623 = OpLoad %v4float %r2
       %5624 = OpVectorShuffle %v3float %5623 %5623 0 1 2
       %5627 = OpBitcast %v3float %5626
       %5628 = OpFMul %v3float %5624 %5627
       %5629 = OpLoad %v4float %r2
       %5630 = OpVectorShuffle %v4float %5629 %5628 4 5 6 3
               OpStore %r2 %5630
       %5631 = OpLoad %v4float %r1
       %5632 = OpVectorShuffle %v3float %5631 %5631 1 2 3
       %5635 = OpBitcast %v3float %5634
       %5636 = OpLoad %v4float %r2
       %5637 = OpVectorShuffle %v3float %5636 %5636 0 1 2
       %5638 = OpExtInst %v3float %1 Fma %5632 %5635 %5637
       %5639 = OpLoad %v4float %r1
       %5640 = OpVectorShuffle %v4float %5639 %5638 0 4 5 6
               OpStore %r1 %5640
       %5641 = OpLoad %v4float %r1
       %5642 = OpVectorShuffle %v3float %5641 %5641 1 2 3
       %5643 = OpLoad %v4float %r1
       %5644 = OpVectorShuffle %v3float %5643 %5643 0 0 0
       %5645 = OpLoad %v4float %r0
       %5646 = OpVectorShuffle %v3float %5645 %5645 0 1 2
       %5647 = OpExtInst %v3float %1 Fma %5642 %5644 %5646
       %5648 = OpLoad %v4float %r0
       %5649 = OpVectorShuffle %v4float %5648 %5647 4 5 6 3
               OpStore %r0 %5649
       %5650 = OpLoad %v4float %r0
       %5651 = OpCompositeExtract %float %5650 3
       %5652 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_12
       %5653 = OpAccessChain %_ptr_Uniform_float %5652 %uint_0
       %5654 = OpLoad %float %5653
       %5655 = OpFMul %float %5651 %5654
       %5656 = OpLoad %v4float %r0
       %5657 = OpCompositeInsert %v4float %5655 %5656 3
               OpStore %r0 %5657
       %5658 = OpAccessChain %_ptr_Uniform_v4float %cb5 %int_0 %int_7
       %5659 = OpAccessChain %_ptr_Uniform_float %5658 %uint_0
       %5660 = OpLoad %float %5659
       %5661 = OpBitcast %uint %5660
       %5662 = OpINotEqual %bool %5661 %uint_0
               OpSelectionMerge %5664 None
               OpBranchConditional %5662 %5663 %6187
       %5663 = OpLabel
       %5665 = OpLoad %v4float %r8
       %5666 = OpVectorShuffle %v3float %5665 %5665 0 1 2
       %5667 = OpLoad %v4float %r8
       %5668 = OpVectorShuffle %v3float %5667 %5667 0 1 2
       %5669 = OpDot %float %5666 %5668
       %5670 = OpLoad %v4float %r1
       %5671 = OpCompositeInsert %v4float %5669 %5670 0
               OpStore %r1 %5671
       %5672 = OpLoad %v4float %r1
       %5673 = OpCompositeExtract %float %5672 0
       %5674 = OpExtInst %float %1 Sqrt %5673
       %5675 = OpLoad %v4float %r1
       %5676 = OpCompositeInsert %v4float %5674 %5675 1
               OpStore %r1 %5676
       %5677 = OpLoad %v4float %r1
       %5678 = OpCompositeExtract %float %5677 1
       %5680 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_50
       %5681 = OpAccessChain %_ptr_Uniform_float %5680 %uint_0
       %5682 = OpLoad %float %5681
       %5683 = OpFNegate %float %5682
       %5684 = OpFAdd %float %5678 %5683
       %5685 = OpLoad %v4float %r1
       %5686 = OpCompositeInsert %v4float %5684 %5685 2
               OpStore %r1 %5686
       %5687 = OpLoad %v4float %r1
       %5688 = OpCompositeExtract %float %5687 2
       %5689 = OpBitcast %float %uint_0
       %5690 = OpExtInst %float %1 NMax %5688 %5689
       %5691 = OpLoad %v4float %r1
       %5692 = OpCompositeInsert %v4float %5690 %5691 2
               OpStore %r1 %5692
       %5693 = OpLoad %v4float %r1
       %5694 = OpCompositeExtract %float %5693 2
       %5695 = OpLoad %v4float %r1
       %5696 = OpCompositeExtract %float %5695 1
       %5697 = OpFDiv %float %5694 %5696
       %5698 = OpLoad %v4float %r1
       %5699 = OpCompositeInsert %v4float %5697 %5698 1
               OpStore %r1 %5699
       %5700 = OpLoad %v4float %r1
       %5701 = OpCompositeExtract %float %5700 1
       %5702 = OpLoad %v4float %r8
       %5703 = OpCompositeExtract %float %5702 2
       %5704 = OpFMul %float %5701 %5703
       %5705 = OpLoad %v4float %r1
       %5706 = OpCompositeInsert %v4float %5704 %5705 1
               OpStore %r1 %5706
       %5707 = OpLoad %v4float %r1
       %5708 = OpCompositeExtract %float %5707 1
       %5710 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %5711 = OpAccessChain %_ptr_Uniform_float %5710 %uint_2
       %5712 = OpLoad %float %5711
       %5713 = OpFMul %float %5708 %5712
       %5714 = OpLoad %v4float %r1
       %5715 = OpCompositeInsert %v4float %5713 %5714 3
               OpStore %r1 %5715
       %5717 = OpBitcast %float %uint_1008981770
       %5718 = OpLoad %v4float %r1
       %5719 = OpCompositeExtract %float %5718 1
       %5720 = OpExtInst %float %1 FAbs %5719
       %5721 = OpFOrdLessThan %bool %5717 %5720
       %5722 = OpSelect %uint %5721 %uint_4294967295 %uint_0
       %5723 = OpBitcast %float %5722
       %5724 = OpLoad %v4float %r1
       %5725 = OpCompositeInsert %v4float %5723 %5724 1
               OpStore %r1 %5725
       %5726 = OpLoad %v4float %r1
       %5727 = OpCompositeExtract %float %5726 3
       %5729 = OpBitcast %float %uint_3216550459
       %5730 = OpFMul %float %5727 %5729
       %5731 = OpLoad %v4float %r2
       %5732 = OpCompositeInsert %v4float %5730 %5731 0
               OpStore %r2 %5732
       %5733 = OpLoad %v4float %r2
       %5734 = OpCompositeExtract %float %5733 0
       %5735 = OpExtInst %float %1 Exp2 %5734
       %5736 = OpLoad %v4float %r2
       %5737 = OpCompositeInsert %v4float %5735 %5736 0
               OpStore %r2 %5737
       %5738 = OpLoad %v4float %r2
       %5739 = OpCompositeExtract %float %5738 0
       %5740 = OpFNegate %float %5739
       %5741 = OpBitcast %float %uint_1065353216
       %5742 = OpFAdd %float %5740 %5741
       %5743 = OpLoad %v4float %r2
       %5744 = OpCompositeInsert %v4float %5742 %5743 0
               OpStore %r2 %5744
       %5745 = OpLoad %v4float %r2
       %5746 = OpCompositeExtract %float %5745 0
       %5747 = OpLoad %v4float %r1
       %5748 = OpCompositeExtract %float %5747 3
       %5749 = OpFDiv %float %5746 %5748
       %5750 = OpLoad %v4float %r1
       %5751 = OpCompositeInsert %v4float %5749 %5750 3
               OpStore %r1 %5751
       %5752 = OpLoad %v4float %r1
       %5753 = OpCompositeExtract %float %5752 1
       %5754 = OpBitcast %uint %5753
       %5755 = OpLoad %v4float %r1
       %5756 = OpCompositeExtract %float %5755 3
       %5757 = OpBitcast %float %uint_1065353216
       %5758 = OpINotEqual %bool %5754 %uint_0
       %5759 = OpSelect %float %5758 %5756 %5757
       %5760 = OpLoad %v4float %r1
       %5761 = OpCompositeInsert %v4float %5759 %5760 1
               OpStore %r1 %5761
       %5762 = OpLoad %v4float %r1
       %5763 = OpCompositeExtract %float %5762 2
       %5765 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %5766 = OpAccessChain %_ptr_Uniform_float %5765 %uint_3
       %5767 = OpLoad %float %5766
       %5768 = OpFMul %float %5763 %5767
       %5769 = OpLoad %v4float %r1
       %5770 = OpCompositeInsert %v4float %5768 %5769 3
               OpStore %r1 %5770
       %5771 = OpLoad %v4float %r1
       %5772 = OpCompositeExtract %float %5771 1
       %5773 = OpLoad %v4float %r1
       %5774 = OpCompositeExtract %float %5773 3
       %5775 = OpFMul %float %5772 %5774
       %5776 = OpLoad %v4float %r1
       %5777 = OpCompositeInsert %v4float %5775 %5776 1
               OpStore %r1 %5777
       %5778 = OpLoad %v4float %r1
       %5779 = OpCompositeExtract %float %5778 1
       %5780 = OpBitcast %float %uint_1065353216
       %5781 = OpExtInst %float %1 NMin %5779 %5780
       %5782 = OpLoad %v4float %r1
       %5783 = OpCompositeInsert %v4float %5781 %5782 1
               OpStore %r1 %5783
       %5784 = OpLoad %v4float %r1
       %5785 = OpCompositeExtract %float %5784 1
       %5787 = OpBitcast %float %uint_1069066811
       %5788 = OpFMul %float %5785 %5787
       %5789 = OpLoad %v4float %r1
       %5790 = OpCompositeInsert %v4float %5788 %5789 1
               OpStore %r1 %5790
       %5791 = OpLoad %v4float %r1
       %5792 = OpCompositeExtract %float %5791 1
       %5793 = OpExtInst %float %1 Exp2 %5792
       %5794 = OpLoad %v4float %r1
       %5795 = OpCompositeInsert %v4float %5793 %5794 1
               OpStore %r1 %5795
       %5796 = OpLoad %v4float %r1
       %5797 = OpCompositeExtract %float %5796 1
       %5798 = OpBitcast %float %uint_1065353216
       %5799 = OpExtInst %float %1 NMin %5797 %5798
       %5800 = OpLoad %v4float %r1
       %5801 = OpCompositeInsert %v4float %5799 %5800 1
               OpStore %r1 %5801
       %5802 = OpLoad %v4float %r1
       %5803 = OpCompositeExtract %float %5802 1
       %5804 = OpFNegate %float %5803
       %5805 = OpBitcast %float %uint_1065353216
       %5806 = OpFAdd %float %5804 %5805
       %5807 = OpLoad %v4float %r1
       %5808 = OpCompositeInsert %v4float %5806 %5807 1
               OpStore %r1 %5808
       %5809 = OpLoad %v4float %r1
       %5810 = OpCompositeExtract %float %5809 1
       %5811 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %5812 = OpAccessChain %_ptr_Uniform_float %5811 %uint_1
       %5813 = OpLoad %float %5812
       %5814 = OpFMul %float %5810 %5813
       %5815 = OpLoad %v4float %r1
       %5816 = OpCompositeInsert %v4float %5814 %5815 3
               OpStore %r1 %5816
       %5817 = OpLoad %v4float %r1
       %5818 = OpCompositeExtract %float %5817 0
       %5819 = OpExtInst %float %1 InverseSqrt %5818
       %5820 = OpLoad %v4float %r1
       %5821 = OpCompositeInsert %v4float %5819 %5820 0
               OpStore %r1 %5821
       %5822 = OpLoad %v4float %r1
       %5823 = OpVectorShuffle %v3float %5822 %5822 0 0 0
       %5824 = OpLoad %v4float %r8
       %5825 = OpVectorShuffle %v3float %5824 %5824 0 1 2
       %5826 = OpFMul %v3float %5823 %5825
       %5827 = OpLoad %v4float %r2
       %5828 = OpVectorShuffle %v4float %5827 %5826 4 5 6 3
               OpStore %r2 %5828
       %5829 = OpLoad %v4float %r2
       %5830 = OpVectorShuffle %v3float %5829 %5829 0 1 2
       %5832 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_54
       %5833 = OpAccessChain %_ptr_Uniform_float %5832 %uint_0
       %5834 = OpLoad %float %5833
       %5835 = OpAccessChain %_ptr_Uniform_float %5832 %uint_1
       %5836 = OpLoad %float %5835
       %5837 = OpAccessChain %_ptr_Uniform_float %5832 %uint_2
       %5838 = OpLoad %float %5837
       %5839 = OpCompositeConstruct %v3float %5834 %5836 %5838
       %5840 = OpDot %float %5830 %5839
       %5841 = OpExtInst %float %1 NClamp %5840 %float_0 %float_1
       %5842 = OpLoad %v4float %r1
       %5843 = OpCompositeInsert %v4float %5841 %5842 0
               OpStore %r1 %5843
       %5844 = OpLoad %v4float %r1
       %5845 = OpCompositeExtract %float %5844 0
       %5846 = OpExtInst %float %1 Log2 %5845
       %5847 = OpLoad %v4float %r1
       %5848 = OpCompositeInsert %v4float %5846 %5847 0
               OpStore %r1 %5848
       %5849 = OpLoad %v4float %r1
       %5850 = OpCompositeExtract %float %5849 0
       %5851 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_54
       %5852 = OpAccessChain %_ptr_Uniform_float %5851 %uint_3
       %5853 = OpLoad %float %5852
       %5854 = OpFMul %float %5850 %5853
       %5855 = OpLoad %v4float %r1
       %5856 = OpCompositeInsert %v4float %5854 %5855 0
               OpStore %r1 %5856
       %5857 = OpLoad %v4float %r1
       %5858 = OpCompositeExtract %float %5857 0
       %5859 = OpExtInst %float %1 Exp2 %5858
       %5860 = OpLoad %v4float %r1
       %5861 = OpCompositeInsert %v4float %5859 %5860 0
               OpStore %r1 %5861
       %5862 = OpLoad %v4float %r2
       %5863 = OpVectorShuffle %v3float %5862 %5862 0 1 2
       %5865 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_53
       %5866 = OpAccessChain %_ptr_Uniform_float %5865 %uint_0
       %5867 = OpLoad %float %5866
       %5868 = OpAccessChain %_ptr_Uniform_float %5865 %uint_1
       %5869 = OpLoad %float %5868
       %5870 = OpAccessChain %_ptr_Uniform_float %5865 %uint_2
       %5871 = OpLoad %float %5870
       %5872 = OpCompositeConstruct %v3float %5867 %5869 %5871
       %5873 = OpDot %float %5863 %5872
       %5874 = OpExtInst %float %1 NClamp %5873 %float_0 %float_1
       %5875 = OpLoad %v4float %r2
       %5876 = OpCompositeInsert %v4float %5874 %5875 0
               OpStore %r2 %5876
       %5877 = OpLoad %v4float %r2
       %5878 = OpCompositeExtract %float %5877 0
       %5879 = OpExtInst %float %1 Log2 %5878
       %5880 = OpLoad %v4float %r2
       %5881 = OpCompositeInsert %v4float %5879 %5880 0
               OpStore %r2 %5881
       %5882 = OpLoad %v4float %r2
       %5883 = OpCompositeExtract %float %5882 0
       %5884 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_53
       %5885 = OpAccessChain %_ptr_Uniform_float %5884 %uint_3
       %5886 = OpLoad %float %5885
       %5887 = OpFMul %float %5883 %5886
       %5888 = OpLoad %v4float %r2
       %5889 = OpCompositeInsert %v4float %5887 %5888 0
               OpStore %r2 %5889
       %5890 = OpLoad %v4float %r2
       %5891 = OpCompositeExtract %float %5890 0
       %5892 = OpExtInst %float %1 Exp2 %5891
       %5893 = OpLoad %v4float %r2
       %5894 = OpCompositeInsert %v4float %5892 %5893 0
               OpStore %r2 %5894
       %5895 = OpLoad %v4float %r1
       %5896 = OpCompositeExtract %float %5895 1
       %5897 = OpFNegate %float %5896
       %5898 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %5899 = OpAccessChain %_ptr_Uniform_float %5898 %uint_1
       %5900 = OpLoad %float %5899
       %5901 = OpBitcast %float %uint_1065353216
       %5902 = OpExtInst %float %1 Fma %5897 %5900 %5901
       %5903 = OpLoad %v4float %r1
       %5904 = OpCompositeInsert %v4float %5902 %5903 1
               OpStore %r1 %5904
       %5905 = OpLoad %v4float %r1
       %5906 = OpCompositeExtract %float %5905 1
       %5907 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %5908 = OpAccessChain %_ptr_Uniform_float %5907 %uint_1
       %5909 = OpLoad %float %5908
       %5910 = OpFMul %float %5906 %5909
       %5911 = OpLoad %v4float %r1
       %5912 = OpCompositeInsert %v4float %5910 %5911 1
               OpStore %r1 %5912
       %5913 = OpLoad %v4float %r1
       %5914 = OpCompositeExtract %float %5913 2
       %5915 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %5916 = OpAccessChain %_ptr_Uniform_float %5915 %uint_0
       %5917 = OpLoad %float %5916
       %5918 = OpFNegate %float %5917
       %5919 = OpFAdd %float %5914 %5918
       %5920 = OpLoad %v4float %r2
       %5921 = OpCompositeInsert %v4float %5919 %5920 1
               OpStore %r2 %5921
       %5922 = OpLoad %v4float %r2
       %5923 = OpCompositeExtract %float %5922 1
       %5924 = OpBitcast %float %uint_0
       %5925 = OpExtInst %float %1 NMax %5923 %5924
       %5926 = OpLoad %v4float %r2
       %5927 = OpCompositeInsert %v4float %5925 %5926 1
               OpStore %r2 %5927
       %5928 = OpLoad %v4float %r2
       %5929 = OpCompositeExtract %float %5928 1
       %5930 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %5931 = OpAccessChain %_ptr_Uniform_float %5930 %uint_0
       %5932 = OpLoad %float %5931
       %5933 = OpFMul %float %5929 %5932
       %5934 = OpLoad %v4float %r2
       %5935 = OpCompositeInsert %v4float %5933 %5934 1
               OpStore %r2 %5935
       %5936 = OpLoad %v4float %r2
       %5937 = OpCompositeExtract %float %5936 1
       %5938 = OpBitcast %float %uint_1069066811
       %5939 = OpFMul %float %5937 %5938
       %5940 = OpLoad %v4float %r2
       %5941 = OpCompositeInsert %v4float %5939 %5940 1
               OpStore %r2 %5941
       %5942 = OpLoad %v4float %r2
       %5943 = OpCompositeExtract %float %5942 1
       %5944 = OpExtInst %float %1 Exp2 %5943
       %5945 = OpLoad %v4float %r2
       %5946 = OpCompositeInsert %v4float %5944 %5945 1
               OpStore %r2 %5946
       %5947 = OpLoad %v4float %r2
       %5948 = OpCompositeExtract %float %5947 1
       %5949 = OpFNegate %float %5948
       %5950 = OpBitcast %float %uint_1065353216
       %5951 = OpFAdd %float %5949 %5950
       %5952 = OpLoad %v4float %r2
       %5953 = OpCompositeInsert %v4float %5951 %5952 1
               OpStore %r2 %5953
       %5954 = OpLoad %v4float %r1
       %5955 = OpCompositeExtract %float %5954 1
       %5956 = OpLoad %v4float %r2
       %5957 = OpCompositeExtract %float %5956 1
       %5958 = OpLoad %v4float %r1
       %5959 = OpCompositeExtract %float %5958 3
       %5960 = OpExtInst %float %1 Fma %5955 %5957 %5959
       %5961 = OpExtInst %float %1 NClamp %5960 %float_0 %float_1
       %5962 = OpLoad %v4float %r1
       %5963 = OpCompositeInsert %v4float %5961 %5962 3
               OpStore %r1 %5963
       %5964 = OpLoad %v4float %r1
       %5965 = OpCompositeExtract %float %5964 2
       %5966 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %5967 = OpAccessChain %_ptr_Uniform_float %5966 %uint_2
       %5968 = OpLoad %float %5967
       %5969 = OpFNegate %float %5968
       %5970 = OpFMul %float %5965 %5969
       %5971 = OpLoad %v4float %r1
       %5972 = OpCompositeInsert %v4float %5970 %5971 2
               OpStore %r1 %5972
       %5973 = OpLoad %v4float %r1
       %5974 = OpCompositeExtract %float %5973 2
       %5975 = OpBitcast %float %uint_1069066811
       %5976 = OpFMul %float %5974 %5975
       %5977 = OpLoad %v4float %r1
       %5978 = OpCompositeInsert %v4float %5976 %5977 2
               OpStore %r1 %5978
       %5979 = OpLoad %v4float %r1
       %5980 = OpCompositeExtract %float %5979 2
       %5981 = OpExtInst %float %1 Exp2 %5980
       %5982 = OpLoad %v4float %r1
       %5983 = OpCompositeInsert %v4float %5981 %5982 2
               OpStore %r1 %5983
       %5984 = OpLoad %v4float %r1
       %5985 = OpCompositeExtract %float %5984 2
       %5986 = OpFNegate %float %5985
       %5987 = OpBitcast %float %uint_1065353216
       %5988 = OpFAdd %float %5986 %5987
       %5989 = OpLoad %v4float %r1
       %5990 = OpCompositeInsert %v4float %5988 %5989 2
               OpStore %r1 %5990
       %5992 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %5993 = OpAccessChain %_ptr_Uniform_float %5992 %uint_0
       %5994 = OpLoad %float %5993
       %5995 = OpAccessChain %_ptr_Uniform_float %5992 %uint_1
       %5996 = OpLoad %float %5995
       %5997 = OpAccessChain %_ptr_Uniform_float %5992 %uint_2
       %5998 = OpLoad %float %5997
       %5999 = OpCompositeConstruct %v3float %5994 %5996 %5998
       %6000 = OpFNegate %v3float %5999
       %6002 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_58
       %6003 = OpAccessChain %_ptr_Uniform_float %6002 %uint_0
       %6004 = OpLoad %float %6003
       %6005 = OpAccessChain %_ptr_Uniform_float %6002 %uint_1
       %6006 = OpLoad %float %6005
       %6007 = OpAccessChain %_ptr_Uniform_float %6002 %uint_2
       %6008 = OpLoad %float %6007
       %6009 = OpCompositeConstruct %v3float %6004 %6006 %6008
       %6010 = OpFAdd %v3float %6000 %6009
       %6011 = OpLoad %v4float %r2
       %6012 = OpVectorShuffle %v4float %6011 %6010 0 4 5 6
               OpStore %r2 %6012
       %6013 = OpLoad %v4float %r1
       %6014 = OpVectorShuffle %v3float %6013 %6013 0 0 0
       %6015 = OpLoad %v4float %r2
       %6016 = OpVectorShuffle %v3float %6015 %6015 1 2 3
       %6017 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %6018 = OpAccessChain %_ptr_Uniform_float %6017 %uint_0
       %6019 = OpLoad %float %6018
       %6020 = OpAccessChain %_ptr_Uniform_float %6017 %uint_1
       %6021 = OpLoad %float %6020
       %6022 = OpAccessChain %_ptr_Uniform_float %6017 %uint_2
       %6023 = OpLoad %float %6022
       %6024 = OpCompositeConstruct %v3float %6019 %6021 %6023
       %6025 = OpExtInst %v3float %1 Fma %6014 %6016 %6024
       %6026 = OpLoad %v4float %r2
       %6027 = OpVectorShuffle %v4float %6026 %6025 0 4 5 6
               OpStore %r2 %6027
       %6028 = OpLoad %v4float %r2
       %6029 = OpVectorShuffle %v3float %6028 %6028 1 2 3
       %6030 = OpFNegate %v3float %6029
       %6032 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_55
       %6033 = OpAccessChain %_ptr_Uniform_float %6032 %uint_0
       %6034 = OpLoad %float %6033
       %6035 = OpAccessChain %_ptr_Uniform_float %6032 %uint_1
       %6036 = OpLoad %float %6035
       %6037 = OpAccessChain %_ptr_Uniform_float %6032 %uint_2
       %6038 = OpLoad %float %6037
       %6039 = OpCompositeConstruct %v3float %6034 %6036 %6038
       %6040 = OpFAdd %v3float %6030 %6039
       %6041 = OpLoad %v4float %r3
       %6042 = OpVectorShuffle %v4float %6041 %6040 4 5 6 3
               OpStore %r3 %6042
       %6043 = OpLoad %v4float %r2
       %6044 = OpVectorShuffle %v3float %6043 %6043 0 0 0
       %6045 = OpLoad %v4float %r3
       %6046 = OpVectorShuffle %v3float %6045 %6045 0 1 2
       %6047 = OpLoad %v4float %r2
       %6048 = OpVectorShuffle %v3float %6047 %6047 1 2 3
       %6049 = OpExtInst %v3float %1 Fma %6044 %6046 %6048
       %6050 = OpLoad %v4float %r2
       %6051 = OpVectorShuffle %v4float %6050 %6049 4 5 6 3
               OpStore %r2 %6051
       %6052 = OpLoad %v4float %r2
       %6053 = OpVectorShuffle %v3float %6052 %6052 0 1 2
       %6055 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6056 = OpAccessChain %_ptr_Uniform_float %6055 %uint_0
       %6057 = OpLoad %float %6056
       %6058 = OpAccessChain %_ptr_Uniform_float %6055 %uint_1
       %6059 = OpLoad %float %6058
       %6060 = OpAccessChain %_ptr_Uniform_float %6055 %uint_2
       %6061 = OpLoad %float %6060
       %6062 = OpCompositeConstruct %v3float %6057 %6059 %6061
       %6063 = OpFNegate %v3float %6062
       %6064 = OpFAdd %v3float %6053 %6063
       %6065 = OpLoad %v4float %r2
       %6066 = OpVectorShuffle %v4float %6065 %6064 4 5 6 3
               OpStore %r2 %6066
       %6067 = OpLoad %v4float %r1
       %6068 = OpVectorShuffle %v3float %6067 %6067 2 2 2
       %6069 = OpLoad %v4float %r2
       %6070 = OpVectorShuffle %v3float %6069 %6069 0 1 2
       %6071 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6072 = OpAccessChain %_ptr_Uniform_float %6071 %uint_0
       %6073 = OpLoad %float %6072
       %6074 = OpAccessChain %_ptr_Uniform_float %6071 %uint_1
       %6075 = OpLoad %float %6074
       %6076 = OpAccessChain %_ptr_Uniform_float %6071 %uint_2
       %6077 = OpLoad %float %6076
       %6078 = OpCompositeConstruct %v3float %6073 %6075 %6077
       %6079 = OpExtInst %v3float %1 Fma %6068 %6070 %6078
       %6080 = OpLoad %v4float %r2
       %6081 = OpVectorShuffle %v4float %6080 %6079 4 5 6 3
               OpStore %r2 %6081
       %6082 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_55
       %6083 = OpAccessChain %_ptr_Uniform_float %6082 %uint_3
       %6084 = OpLoad %float %6083
       %6085 = OpLoad %v4float %r3
       %6086 = OpCompositeInsert %v4float %6084 %6085 0
               OpStore %r3 %6086
       %6087 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %6088 = OpAccessChain %_ptr_Uniform_float %6087 %uint_3
       %6089 = OpLoad %float %6088
       %6090 = OpLoad %v4float %r3
       %6091 = OpCompositeInsert %v4float %6089 %6090 1
               OpStore %r3 %6091
       %6092 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6093 = OpAccessChain %_ptr_Uniform_float %6092 %uint_3
       %6094 = OpLoad %float %6093
       %6095 = OpLoad %v4float %r3
       %6096 = OpCompositeInsert %v4float %6094 %6095 2
               OpStore %r3 %6096
       %6097 = OpLoad %v4float %r2
       %6098 = OpVectorShuffle %v3float %6097 %6097 0 1 2
       %6099 = OpFNegate %v3float %6098
       %6100 = OpLoad %v4float %r3
       %6101 = OpVectorShuffle %v3float %6100 %6100 0 1 2
       %6102 = OpFAdd %v3float %6099 %6101
       %6103 = OpLoad %v4float %r3
       %6104 = OpVectorShuffle %v4float %6103 %6102 4 5 6 3
               OpStore %r3 %6104
       %6105 = OpLoad %v4float %r1
       %6106 = OpVectorShuffle %v3float %6105 %6105 1 1 1
       %6107 = OpLoad %v4float %r3
       %6108 = OpVectorShuffle %v3float %6107 %6107 0 1 2
       %6109 = OpLoad %v4float %r2
       %6110 = OpVectorShuffle %v3float %6109 %6109 0 1 2
       %6111 = OpExtInst %v3float %1 Fma %6106 %6108 %6110
       %6112 = OpLoad %v4float %r1
       %6113 = OpVectorShuffle %v4float %6112 %6111 4 5 6 3
               OpStore %r1 %6113
       %6114 = OpBitcast %float %uint_0
       %6115 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_19
       %6116 = OpAccessChain %_ptr_Uniform_float %6115 %uint_1
       %6117 = OpLoad %float %6116
       %6118 = OpFOrdLessThan %bool %6114 %6117
       %6119 = OpSelect %uint %6118 %uint_4294967295 %uint_0
       %6120 = OpBitcast %float %6119
       %6121 = OpLoad %v4float %r2
       %6122 = OpCompositeInsert %v4float %6120 %6121 0
               OpStore %r2 %6122
       %6123 = OpLoad %v4float %r2
       %6124 = OpCompositeExtract %float %6123 0
       %6125 = OpBitcast %uint %6124
       %6126 = OpINotEqual %bool %6125 %uint_0
               OpSelectionMerge %6128 None
               OpBranchConditional %6126 %6127 %6164
       %6127 = OpLabel
       %6129 = OpAccessChain %_ptr_Private_v4float %shader_in %int_7
       %6130 = OpLoad %v4float %6129
       %6131 = OpVectorShuffle %v2float %6130 %6130 0 1
       %6132 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_15
       %6133 = OpAccessChain %_ptr_Uniform_float %6132 %uint_2
       %6134 = OpLoad %float %6133
       %6135 = OpAccessChain %_ptr_Uniform_float %6132 %uint_3
       %6136 = OpLoad %float %6135
       %6137 = OpCompositeConstruct %v2float %6134 %6136
       %6138 = OpFMul %v2float %6131 %6137
       %6139 = OpLoad %v4float %r2
       %6140 = OpVectorShuffle %v4float %6139 %6138 4 5 2 3
               OpStore %r2 %6140
       %6141 = OpLoad %v4float %r2
       %6142 = OpVectorShuffle %v4float %6141 %6141 0 1 0 0
       %6143 = OpVectorShuffle %v2float %6142 %6142 0 1
       %6144 = OpLoad %56 %s11
       %6145 = OpLoad %64 %t11
       %6146 = OpSampledImage %105 %6145 %6144
       %6147 = OpImageSampleImplicitLod %v4float %6146 %6143
               OpStore %r2 %6147
       %6148 = OpLoad %v4float %r2
       %6149 = OpCompositeExtract %float %6148 0
       %6150 = OpBitcast %float %uint_3212836864
       %6151 = OpFAdd %float %6149 %6150
       %6152 = OpLoad %v4float %r2
       %6153 = OpCompositeInsert %v4float %6151 %6152 0
               OpStore %r2 %6153
       %6154 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_19
       %6155 = OpAccessChain %_ptr_Uniform_float %6154 %uint_1
       %6156 = OpLoad %float %6155
       %6157 = OpLoad %v4float %r2
       %6158 = OpCompositeExtract %float %6157 0
       %6159 = OpBitcast %float %uint_1065353216
       %6160 = OpExtInst %float %1 Fma %6156 %6158 %6159
       %6161 = OpExtInst %float %1 NClamp %6160 %float_0 %float_1
       %6162 = OpLoad %v4float %r2
       %6163 = OpCompositeInsert %v4float %6161 %6162 0
               OpStore %r2 %6163
               OpBranch %6128
       %6164 = OpLabel
       %6165 = OpBitcast %float %uint_1065353216
       %6166 = OpLoad %v4float %r2
       %6167 = OpCompositeInsert %v4float %6165 %6166 0
               OpStore %r2 %6167
               OpBranch %6128
       %6128 = OpLabel
       %6168 = OpLoad %v4float %r1
       %6169 = OpVectorShuffle %v3float %6168 %6168 0 1 2
       %6170 = OpLoad %v4float %r2
       %6171 = OpVectorShuffle %v3float %6170 %6170 0 0 0
       %6172 = OpLoad %v4float %r0
       %6173 = OpVectorShuffle %v3float %6172 %6172 0 1 2
       %6174 = OpFNegate %v3float %6173
       %6175 = OpExtInst %v3float %1 Fma %6169 %6171 %6174
       %6176 = OpLoad %v4float %r1
       %6177 = OpVectorShuffle %v4float %6176 %6175 4 5 6 3
               OpStore %r1 %6177
       %6178 = OpLoad %v4float %r1
       %6179 = OpVectorShuffle %v3float %6178 %6178 3 3 3
       %6180 = OpLoad %v4float %r1
       %6181 = OpVectorShuffle %v3float %6180 %6180 0 1 2
       %6182 = OpLoad %v4float %r0
       %6183 = OpVectorShuffle %v3float %6182 %6182 0 1 2
       %6184 = OpExtInst %v3float %1 Fma %6179 %6181 %6183
       %6185 = OpLoad %v4float %r1
       %6186 = OpVectorShuffle %v4float %6185 %6184 4 5 6 3
               OpStore %r1 %6186
               OpBranch %5664
       %6187 = OpLabel
       %6188 = OpLoad %v4float %r8
       %6189 = OpVectorShuffle %v3float %6188 %6188 0 1 2
       %6190 = OpLoad %v4float %r8
       %6191 = OpVectorShuffle %v3float %6190 %6190 0 1 2
       %6192 = OpDot %float %6189 %6191
       %6193 = OpLoad %v4float %r1
       %6194 = OpCompositeInsert %v4float %6192 %6193 3
               OpStore %r1 %6194
       %6195 = OpLoad %v4float %r1
       %6196 = OpCompositeExtract %float %6195 3
       %6197 = OpExtInst %float %1 Sqrt %6196
       %6198 = OpLoad %v4float %r2
       %6199 = OpCompositeInsert %v4float %6197 %6198 0
               OpStore %r2 %6199
       %6200 = OpLoad %v4float %r2
       %6201 = OpCompositeExtract %float %6200 0
       %6202 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_50
       %6203 = OpAccessChain %_ptr_Uniform_float %6202 %uint_0
       %6204 = OpLoad %float %6203
       %6205 = OpFNegate %float %6204
       %6206 = OpFAdd %float %6201 %6205
       %6207 = OpLoad %v4float %r2
       %6208 = OpCompositeInsert %v4float %6206 %6207 1
               OpStore %r2 %6208
       %6209 = OpLoad %v4float %r2
       %6210 = OpCompositeExtract %float %6209 1
       %6211 = OpBitcast %float %uint_0
       %6212 = OpExtInst %float %1 NMax %6210 %6211
       %6213 = OpLoad %v4float %r2
       %6214 = OpCompositeInsert %v4float %6212 %6213 1
               OpStore %r2 %6214
       %6215 = OpLoad %v4float %r2
       %6216 = OpCompositeExtract %float %6215 1
       %6217 = OpLoad %v4float %r2
       %6218 = OpCompositeExtract %float %6217 0
       %6219 = OpFDiv %float %6216 %6218
       %6220 = OpLoad %v4float %r2
       %6221 = OpCompositeInsert %v4float %6219 %6220 0
               OpStore %r2 %6221
       %6222 = OpLoad %v4float %r2
       %6223 = OpCompositeExtract %float %6222 0
       %6224 = OpLoad %v4float %r8
       %6225 = OpCompositeExtract %float %6224 2
       %6226 = OpFMul %float %6223 %6225
       %6227 = OpLoad %v4float %r2
       %6228 = OpCompositeInsert %v4float %6226 %6227 0
               OpStore %r2 %6228
       %6229 = OpLoad %v4float %r2
       %6230 = OpCompositeExtract %float %6229 0
       %6231 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %6232 = OpAccessChain %_ptr_Uniform_float %6231 %uint_2
       %6233 = OpLoad %float %6232
       %6234 = OpFMul %float %6230 %6233
       %6235 = OpLoad %v4float %r2
       %6236 = OpCompositeInsert %v4float %6234 %6235 2
               OpStore %r2 %6236
       %6237 = OpBitcast %float %uint_1008981770
       %6238 = OpLoad %v4float %r2
       %6239 = OpCompositeExtract %float %6238 0
       %6240 = OpExtInst %float %1 FAbs %6239
       %6241 = OpFOrdLessThan %bool %6237 %6240
       %6242 = OpSelect %uint %6241 %uint_4294967295 %uint_0
       %6243 = OpBitcast %float %6242
       %6244 = OpLoad %v4float %r2
       %6245 = OpCompositeInsert %v4float %6243 %6244 0
               OpStore %r2 %6245
       %6246 = OpLoad %v4float %r2
       %6247 = OpCompositeExtract %float %6246 2
       %6248 = OpBitcast %float %uint_3216550459
       %6249 = OpFMul %float %6247 %6248
       %6250 = OpLoad %v4float %r2
       %6251 = OpCompositeInsert %v4float %6249 %6250 3
               OpStore %r2 %6251
       %6252 = OpLoad %v4float %r2
       %6253 = OpCompositeExtract %float %6252 3
       %6254 = OpExtInst %float %1 Exp2 %6253
       %6255 = OpLoad %v4float %r2
       %6256 = OpCompositeInsert %v4float %6254 %6255 3
               OpStore %r2 %6256
       %6257 = OpLoad %v4float %r2
       %6258 = OpCompositeExtract %float %6257 3
       %6259 = OpFNegate %float %6258
       %6260 = OpBitcast %float %uint_1065353216
       %6261 = OpFAdd %float %6259 %6260
       %6262 = OpLoad %v4float %r2
       %6263 = OpCompositeInsert %v4float %6261 %6262 3
               OpStore %r2 %6263
       %6264 = OpLoad %v4float %r2
       %6265 = OpCompositeExtract %float %6264 3
       %6266 = OpLoad %v4float %r2
       %6267 = OpCompositeExtract %float %6266 2
       %6268 = OpFDiv %float %6265 %6267
       %6269 = OpLoad %v4float %r2
       %6270 = OpCompositeInsert %v4float %6268 %6269 2
               OpStore %r2 %6270
       %6271 = OpLoad %v4float %r2
       %6272 = OpCompositeExtract %float %6271 0
       %6273 = OpBitcast %uint %6272
       %6274 = OpLoad %v4float %r2
       %6275 = OpCompositeExtract %float %6274 2
       %6276 = OpBitcast %float %uint_1065353216
       %6277 = OpINotEqual %bool %6273 %uint_0
       %6278 = OpSelect %float %6277 %6275 %6276
       %6279 = OpLoad %v4float %r2
       %6280 = OpCompositeInsert %v4float %6278 %6279 0
               OpStore %r2 %6280
       %6281 = OpLoad %v4float %r2
       %6282 = OpCompositeExtract %float %6281 1
       %6283 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %6284 = OpAccessChain %_ptr_Uniform_float %6283 %uint_3
       %6285 = OpLoad %float %6284
       %6286 = OpFMul %float %6282 %6285
       %6287 = OpLoad %v4float %r2
       %6288 = OpCompositeInsert %v4float %6286 %6287 2
               OpStore %r2 %6288
       %6289 = OpLoad %v4float %r2
       %6290 = OpCompositeExtract %float %6289 0
       %6291 = OpLoad %v4float %r2
       %6292 = OpCompositeExtract %float %6291 2
       %6293 = OpFMul %float %6290 %6292
       %6294 = OpLoad %v4float %r2
       %6295 = OpCompositeInsert %v4float %6293 %6294 0
               OpStore %r2 %6295
       %6296 = OpLoad %v4float %r2
       %6297 = OpCompositeExtract %float %6296 0
       %6298 = OpBitcast %float %uint_1065353216
       %6299 = OpExtInst %float %1 NMin %6297 %6298
       %6300 = OpLoad %v4float %r2
       %6301 = OpCompositeInsert %v4float %6299 %6300 0
               OpStore %r2 %6301
       %6302 = OpLoad %v4float %r2
       %6303 = OpCompositeExtract %float %6302 0
       %6304 = OpBitcast %float %uint_1069066811
       %6305 = OpFMul %float %6303 %6304
       %6306 = OpLoad %v4float %r2
       %6307 = OpCompositeInsert %v4float %6305 %6306 0
               OpStore %r2 %6307
       %6308 = OpLoad %v4float %r2
       %6309 = OpCompositeExtract %float %6308 0
       %6310 = OpExtInst %float %1 Exp2 %6309
       %6311 = OpLoad %v4float %r2
       %6312 = OpCompositeInsert %v4float %6310 %6311 0
               OpStore %r2 %6312
       %6313 = OpLoad %v4float %r2
       %6314 = OpCompositeExtract %float %6313 0
       %6315 = OpBitcast %float %uint_1065353216
       %6316 = OpExtInst %float %1 NMin %6314 %6315
       %6317 = OpLoad %v4float %r2
       %6318 = OpCompositeInsert %v4float %6316 %6317 0
               OpStore %r2 %6318
       %6319 = OpLoad %v4float %r2
       %6320 = OpCompositeExtract %float %6319 0
       %6321 = OpFNegate %float %6320
       %6322 = OpBitcast %float %uint_1065353216
       %6323 = OpFAdd %float %6321 %6322
       %6324 = OpLoad %v4float %r2
       %6325 = OpCompositeInsert %v4float %6323 %6324 0
               OpStore %r2 %6325
       %6326 = OpLoad %v4float %r2
       %6327 = OpCompositeExtract %float %6326 0
       %6328 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %6329 = OpAccessChain %_ptr_Uniform_float %6328 %uint_1
       %6330 = OpLoad %float %6329
       %6331 = OpFMul %float %6327 %6330
       %6332 = OpLoad %v4float %r2
       %6333 = OpCompositeInsert %v4float %6331 %6332 2
               OpStore %r2 %6333
       %6334 = OpLoad %v4float %r1
       %6335 = OpCompositeExtract %float %6334 3
       %6336 = OpExtInst %float %1 InverseSqrt %6335
       %6337 = OpLoad %v4float %r1
       %6338 = OpCompositeInsert %v4float %6336 %6337 3
               OpStore %r1 %6338
       %6339 = OpLoad %v4float %r1
       %6340 = OpVectorShuffle %v3float %6339 %6339 3 3 3
       %6341 = OpLoad %v4float %r8
       %6342 = OpVectorShuffle %v3float %6341 %6341 0 1 2
       %6343 = OpFMul %v3float %6340 %6342
       %6344 = OpLoad %v4float %r3
       %6345 = OpVectorShuffle %v4float %6344 %6343 4 5 6 3
               OpStore %r3 %6345
       %6346 = OpLoad %v4float %r3
       %6347 = OpVectorShuffle %v3float %6346 %6346 0 1 2
       %6348 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_54
       %6349 = OpAccessChain %_ptr_Uniform_float %6348 %uint_0
       %6350 = OpLoad %float %6349
       %6351 = OpAccessChain %_ptr_Uniform_float %6348 %uint_1
       %6352 = OpLoad %float %6351
       %6353 = OpAccessChain %_ptr_Uniform_float %6348 %uint_2
       %6354 = OpLoad %float %6353
       %6355 = OpCompositeConstruct %v3float %6350 %6352 %6354
       %6356 = OpDot %float %6347 %6355
       %6357 = OpExtInst %float %1 NClamp %6356 %float_0 %float_1
       %6358 = OpLoad %v4float %r1
       %6359 = OpCompositeInsert %v4float %6357 %6358 3
               OpStore %r1 %6359
       %6360 = OpLoad %v4float %r1
       %6361 = OpCompositeExtract %float %6360 3
       %6362 = OpExtInst %float %1 Log2 %6361
       %6363 = OpLoad %v4float %r1
       %6364 = OpCompositeInsert %v4float %6362 %6363 3
               OpStore %r1 %6364
       %6365 = OpLoad %v4float %r1
       %6366 = OpCompositeExtract %float %6365 3
       %6367 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_54
       %6368 = OpAccessChain %_ptr_Uniform_float %6367 %uint_3
       %6369 = OpLoad %float %6368
       %6370 = OpFMul %float %6366 %6369
       %6371 = OpLoad %v4float %r1
       %6372 = OpCompositeInsert %v4float %6370 %6371 3
               OpStore %r1 %6372
       %6373 = OpLoad %v4float %r1
       %6374 = OpCompositeExtract %float %6373 3
       %6375 = OpExtInst %float %1 Exp2 %6374
       %6376 = OpLoad %v4float %r1
       %6377 = OpCompositeInsert %v4float %6375 %6376 3
               OpStore %r1 %6377
       %6378 = OpLoad %v4float %r3
       %6379 = OpVectorShuffle %v3float %6378 %6378 0 1 2
       %6380 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_53
       %6381 = OpAccessChain %_ptr_Uniform_float %6380 %uint_0
       %6382 = OpLoad %float %6381
       %6383 = OpAccessChain %_ptr_Uniform_float %6380 %uint_1
       %6384 = OpLoad %float %6383
       %6385 = OpAccessChain %_ptr_Uniform_float %6380 %uint_2
       %6386 = OpLoad %float %6385
       %6387 = OpCompositeConstruct %v3float %6382 %6384 %6386
       %6388 = OpDot %float %6379 %6387
       %6389 = OpExtInst %float %1 NClamp %6388 %float_0 %float_1
       %6390 = OpLoad %v4float %r2
       %6391 = OpCompositeInsert %v4float %6389 %6390 3
               OpStore %r2 %6391
       %6392 = OpLoad %v4float %r2
       %6393 = OpCompositeExtract %float %6392 3
       %6394 = OpExtInst %float %1 Log2 %6393
       %6395 = OpLoad %v4float %r2
       %6396 = OpCompositeInsert %v4float %6394 %6395 3
               OpStore %r2 %6396
       %6397 = OpLoad %v4float %r2
       %6398 = OpCompositeExtract %float %6397 3
       %6399 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_53
       %6400 = OpAccessChain %_ptr_Uniform_float %6399 %uint_3
       %6401 = OpLoad %float %6400
       %6402 = OpFMul %float %6398 %6401
       %6403 = OpLoad %v4float %r2
       %6404 = OpCompositeInsert %v4float %6402 %6403 3
               OpStore %r2 %6404
       %6405 = OpLoad %v4float %r2
       %6406 = OpCompositeExtract %float %6405 3
       %6407 = OpExtInst %float %1 Exp2 %6406
       %6408 = OpLoad %v4float %r2
       %6409 = OpCompositeInsert %v4float %6407 %6408 3
               OpStore %r2 %6409
       %6410 = OpLoad %v4float %r2
       %6411 = OpCompositeExtract %float %6410 0
       %6412 = OpFNegate %float %6411
       %6413 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %6414 = OpAccessChain %_ptr_Uniform_float %6413 %uint_1
       %6415 = OpLoad %float %6414
       %6416 = OpBitcast %float %uint_1065353216
       %6417 = OpExtInst %float %1 Fma %6412 %6415 %6416
       %6418 = OpLoad %v4float %r2
       %6419 = OpCompositeInsert %v4float %6417 %6418 0
               OpStore %r2 %6419
       %6420 = OpLoad %v4float %r2
       %6421 = OpCompositeExtract %float %6420 0
       %6422 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %6423 = OpAccessChain %_ptr_Uniform_float %6422 %uint_1
       %6424 = OpLoad %float %6423
       %6425 = OpFMul %float %6421 %6424
       %6426 = OpLoad %v4float %r2
       %6427 = OpCompositeInsert %v4float %6425 %6426 0
               OpStore %r2 %6427
       %6428 = OpLoad %v4float %r2
       %6429 = OpCompositeExtract %float %6428 1
       %6430 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_52
       %6431 = OpAccessChain %_ptr_Uniform_float %6430 %uint_0
       %6432 = OpLoad %float %6431
       %6433 = OpFNegate %float %6432
       %6434 = OpFAdd %float %6429 %6433
       %6435 = OpLoad %v4float %r3
       %6436 = OpCompositeInsert %v4float %6434 %6435 0
               OpStore %r3 %6436
       %6437 = OpLoad %v4float %r3
       %6438 = OpCompositeExtract %float %6437 0
       %6439 = OpBitcast %float %uint_0
       %6440 = OpExtInst %float %1 NMax %6438 %6439
       %6441 = OpLoad %v4float %r3
       %6442 = OpCompositeInsert %v4float %6440 %6441 0
               OpStore %r3 %6442
       %6443 = OpLoad %v4float %r3
       %6444 = OpCompositeExtract %float %6443 0
       %6445 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %6446 = OpAccessChain %_ptr_Uniform_float %6445 %uint_0
       %6447 = OpLoad %float %6446
       %6448 = OpFMul %float %6444 %6447
       %6449 = OpLoad %v4float %r3
       %6450 = OpCompositeInsert %v4float %6448 %6449 0
               OpStore %r3 %6450
       %6451 = OpLoad %v4float %r3
       %6452 = OpCompositeExtract %float %6451 0
       %6453 = OpBitcast %float %uint_1069066811
       %6454 = OpFMul %float %6452 %6453
       %6455 = OpLoad %v4float %r3
       %6456 = OpCompositeInsert %v4float %6454 %6455 0
               OpStore %r3 %6456
       %6457 = OpLoad %v4float %r3
       %6458 = OpCompositeExtract %float %6457 0
       %6459 = OpExtInst %float %1 Exp2 %6458
       %6460 = OpLoad %v4float %r3
       %6461 = OpCompositeInsert %v4float %6459 %6460 0
               OpStore %r3 %6461
       %6462 = OpLoad %v4float %r3
       %6463 = OpCompositeExtract %float %6462 0
       %6464 = OpFNegate %float %6463
       %6465 = OpBitcast %float %uint_1065353216
       %6466 = OpFAdd %float %6464 %6465
       %6467 = OpLoad %v4float %r3
       %6468 = OpCompositeInsert %v4float %6466 %6467 0
               OpStore %r3 %6468
       %6469 = OpLoad %v4float %r2
       %6470 = OpCompositeExtract %float %6469 0
       %6471 = OpLoad %v4float %r3
       %6472 = OpCompositeExtract %float %6471 0
       %6473 = OpLoad %v4float %r2
       %6474 = OpCompositeExtract %float %6473 2
       %6475 = OpExtInst %float %1 Fma %6470 %6472 %6474
       %6476 = OpExtInst %float %1 NClamp %6475 %float_0 %float_1
       %6477 = OpLoad %v4float %r2
       %6478 = OpCompositeInsert %v4float %6476 %6477 2
               OpStore %r2 %6478
       %6479 = OpLoad %v4float %r2
       %6480 = OpCompositeExtract %float %6479 1
       %6481 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_51
       %6482 = OpAccessChain %_ptr_Uniform_float %6481 %uint_2
       %6483 = OpLoad %float %6482
       %6484 = OpFNegate %float %6483
       %6485 = OpFMul %float %6480 %6484
       %6486 = OpLoad %v4float %r2
       %6487 = OpCompositeInsert %v4float %6485 %6486 1
               OpStore %r2 %6487
       %6488 = OpLoad %v4float %r2
       %6489 = OpCompositeExtract %float %6488 1
       %6490 = OpBitcast %float %uint_1069066811
       %6491 = OpFMul %float %6489 %6490
       %6492 = OpLoad %v4float %r2
       %6493 = OpCompositeInsert %v4float %6491 %6492 1
               OpStore %r2 %6493
       %6494 = OpLoad %v4float %r2
       %6495 = OpCompositeExtract %float %6494 1
       %6496 = OpExtInst %float %1 Exp2 %6495
       %6497 = OpLoad %v4float %r2
       %6498 = OpCompositeInsert %v4float %6496 %6497 1
               OpStore %r2 %6498
       %6499 = OpLoad %v4float %r2
       %6500 = OpCompositeExtract %float %6499 1
       %6501 = OpFNegate %float %6500
       %6502 = OpBitcast %float %uint_1065353216
       %6503 = OpFAdd %float %6501 %6502
       %6504 = OpLoad %v4float %r2
       %6505 = OpCompositeInsert %v4float %6503 %6504 1
               OpStore %r2 %6505
       %6506 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %6507 = OpAccessChain %_ptr_Uniform_float %6506 %uint_0
       %6508 = OpLoad %float %6507
       %6509 = OpAccessChain %_ptr_Uniform_float %6506 %uint_1
       %6510 = OpLoad %float %6509
       %6511 = OpAccessChain %_ptr_Uniform_float %6506 %uint_2
       %6512 = OpLoad %float %6511
       %6513 = OpCompositeConstruct %v3float %6508 %6510 %6512
       %6514 = OpFNegate %v3float %6513
       %6515 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_58
       %6516 = OpAccessChain %_ptr_Uniform_float %6515 %uint_0
       %6517 = OpLoad %float %6516
       %6518 = OpAccessChain %_ptr_Uniform_float %6515 %uint_1
       %6519 = OpLoad %float %6518
       %6520 = OpAccessChain %_ptr_Uniform_float %6515 %uint_2
       %6521 = OpLoad %float %6520
       %6522 = OpCompositeConstruct %v3float %6517 %6519 %6521
       %6523 = OpFAdd %v3float %6514 %6522
       %6524 = OpLoad %v4float %r3
       %6525 = OpVectorShuffle %v4float %6524 %6523 4 5 6 3
               OpStore %r3 %6525
       %6526 = OpLoad %v4float %r1
       %6527 = OpVectorShuffle %v3float %6526 %6526 3 3 3
       %6528 = OpLoad %v4float %r3
       %6529 = OpVectorShuffle %v3float %6528 %6528 0 1 2
       %6530 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %6531 = OpAccessChain %_ptr_Uniform_float %6530 %uint_0
       %6532 = OpLoad %float %6531
       %6533 = OpAccessChain %_ptr_Uniform_float %6530 %uint_1
       %6534 = OpLoad %float %6533
       %6535 = OpAccessChain %_ptr_Uniform_float %6530 %uint_2
       %6536 = OpLoad %float %6535
       %6537 = OpCompositeConstruct %v3float %6532 %6534 %6536
       %6538 = OpExtInst %v3float %1 Fma %6527 %6529 %6537
       %6539 = OpLoad %v4float %r3
       %6540 = OpVectorShuffle %v4float %6539 %6538 4 5 6 3
               OpStore %r3 %6540
       %6541 = OpLoad %v4float %r3
       %6542 = OpVectorShuffle %v3float %6541 %6541 0 1 2
       %6543 = OpFNegate %v3float %6542
       %6544 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_55
       %6545 = OpAccessChain %_ptr_Uniform_float %6544 %uint_0
       %6546 = OpLoad %float %6545
       %6547 = OpAccessChain %_ptr_Uniform_float %6544 %uint_1
       %6548 = OpLoad %float %6547
       %6549 = OpAccessChain %_ptr_Uniform_float %6544 %uint_2
       %6550 = OpLoad %float %6549
       %6551 = OpCompositeConstruct %v3float %6546 %6548 %6550
       %6552 = OpFAdd %v3float %6543 %6551
       %6553 = OpLoad %v4float %r4
       %6554 = OpVectorShuffle %v4float %6553 %6552 4 5 6 3
               OpStore %r4 %6554
       %6555 = OpLoad %v4float %r2
       %6556 = OpVectorShuffle %v3float %6555 %6555 3 3 3
       %6557 = OpLoad %v4float %r4
       %6558 = OpVectorShuffle %v3float %6557 %6557 0 1 2
       %6559 = OpLoad %v4float %r3
       %6560 = OpVectorShuffle %v3float %6559 %6559 0 1 2
       %6561 = OpExtInst %v3float %1 Fma %6556 %6558 %6560
       %6562 = OpLoad %v4float %r3
       %6563 = OpVectorShuffle %v4float %6562 %6561 4 5 6 3
               OpStore %r3 %6563
       %6564 = OpLoad %v4float %r3
       %6565 = OpVectorShuffle %v3float %6564 %6564 0 1 2
       %6566 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6567 = OpAccessChain %_ptr_Uniform_float %6566 %uint_0
       %6568 = OpLoad %float %6567
       %6569 = OpAccessChain %_ptr_Uniform_float %6566 %uint_1
       %6570 = OpLoad %float %6569
       %6571 = OpAccessChain %_ptr_Uniform_float %6566 %uint_2
       %6572 = OpLoad %float %6571
       %6573 = OpCompositeConstruct %v3float %6568 %6570 %6572
       %6574 = OpFNegate %v3float %6573
       %6575 = OpFAdd %v3float %6565 %6574
       %6576 = OpLoad %v4float %r3
       %6577 = OpVectorShuffle %v4float %6576 %6575 4 5 6 3
               OpStore %r3 %6577
       %6578 = OpLoad %v4float %r2
       %6579 = OpVectorShuffle %v3float %6578 %6578 1 1 1
       %6580 = OpLoad %v4float %r3
       %6581 = OpVectorShuffle %v3float %6580 %6580 0 1 2
       %6582 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6583 = OpAccessChain %_ptr_Uniform_float %6582 %uint_0
       %6584 = OpLoad %float %6583
       %6585 = OpAccessChain %_ptr_Uniform_float %6582 %uint_1
       %6586 = OpLoad %float %6585
       %6587 = OpAccessChain %_ptr_Uniform_float %6582 %uint_2
       %6588 = OpLoad %float %6587
       %6589 = OpCompositeConstruct %v3float %6584 %6586 %6588
       %6590 = OpExtInst %v3float %1 Fma %6579 %6581 %6589
       %6591 = OpLoad %v4float %r3
       %6592 = OpVectorShuffle %v4float %6591 %6590 4 5 6 3
               OpStore %r3 %6592
       %6593 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_55
       %6594 = OpAccessChain %_ptr_Uniform_float %6593 %uint_3
       %6595 = OpLoad %float %6594
       %6596 = OpLoad %v4float %r4
       %6597 = OpCompositeInsert %v4float %6595 %6596 0
               OpStore %r4 %6597
       %6598 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_56
       %6599 = OpAccessChain %_ptr_Uniform_float %6598 %uint_3
       %6600 = OpLoad %float %6599
       %6601 = OpLoad %v4float %r4
       %6602 = OpCompositeInsert %v4float %6600 %6601 1
               OpStore %r4 %6602
       %6603 = OpAccessChain %_ptr_Uniform_v4float %cb3 %int_0 %int_57
       %6604 = OpAccessChain %_ptr_Uniform_float %6603 %uint_3
       %6605 = OpLoad %float %6604
       %6606 = OpLoad %v4float %r4
       %6607 = OpCompositeInsert %v4float %6605 %6606 2
               OpStore %r4 %6607
       %6608 = OpLoad %v4float %r3
       %6609 = OpVectorShuffle %v3float %6608 %6608 0 1 2
       %6610 = OpFNegate %v3float %6609
       %6611 = OpLoad %v4float %r4
       %6612 = OpVectorShuffle %v3float %6611 %6611 0 1 2
       %6613 = OpFAdd %v3float %6610 %6612
       %6614 = OpLoad %v4float %r4
       %6615 = OpVectorShuffle %v4float %6614 %6613 4 5 6 3
               OpStore %r4 %6615
       %6616 = OpLoad %v4float %r2
       %6617 = OpVectorShuffle %v3float %6616 %6616 0 0 0
       %6618 = OpLoad %v4float %r4
       %6619 = OpVectorShuffle %v3float %6618 %6618 0 1 2
       %6620 = OpLoad %v4float %r3
       %6621 = OpVectorShuffle %v3float %6620 %6620 0 1 2
       %6622 = OpExtInst %v3float %1 Fma %6617 %6619 %6621
       %6623 = OpLoad %v4float %r2
       %6624 = OpVectorShuffle %v4float %6623 %6622 4 5 2 6
               OpStore %r2 %6624
       %6625 = OpLoad %v4float %r0
       %6626 = OpVectorShuffle %v3float %6625 %6625 0 1 2
       %6627 = OpFNegate %v3float %6626
       %6628 = OpLoad %v4float %r2
       %6629 = OpVectorShuffle %v3float %6628 %6628 0 1 3
       %6630 = OpFAdd %v3float %6627 %6629
       %6631 = OpLoad %v4float %r2
       %6632 = OpVectorShuffle %v4float %6631 %6630 4 5 2 6
               OpStore %r2 %6632
       %6633 = OpLoad %v4float %r2
       %6634 = OpVectorShuffle %v3float %6633 %6633 2 2 2
       %6635 = OpLoad %v4float %r2
       %6636 = OpVectorShuffle %v3float %6635 %6635 0 1 3
       %6637 = OpLoad %v4float %r0
       %6638 = OpVectorShuffle %v3float %6637 %6637 0 1 2
       %6639 = OpExtInst %v3float %1 Fma %6634 %6636 %6638
       %6640 = OpLoad %v4float %r1
       %6641 = OpVectorShuffle %v4float %6640 %6639 4 5 6 3
               OpStore %r1 %6641
               OpBranch %5664
       %5664 = OpLabel
       %6642 = OpLoad %v4float %r1
       %6643 = OpVectorShuffle %v3float %6642 %6642 0 1 2
       %6644 = OpAccessChain %_ptr_Uniform_v4float %cb2 %int_0 %int_14
       %6645 = OpAccessChain %_ptr_Uniform_float %6644 %uint_2
       %6646 = OpLoad %float %6645
       %6647 = OpCompositeConstruct %v3float %6646 %6646 %6646
       %6648 = OpFMul %v3float %6643 %6647
       %6649 = OpLoad %v4float %o0
       %6650 = OpVectorShuffle %v4float %6649 %6648 4 5 6 3
               OpStore %o0 %6650
       %6652 = OpBitcast %float %uint_1050253722
       %6653 = OpLoad %v4float %r0
       %6654 = OpCompositeExtract %float %6653 3
       %6655 = OpFOrdLessThan %bool %6652 %6654
       %6656 = OpSelect %uint %6655 %uint_4294967295 %uint_0
       %6657 = OpBitcast %float %6656
       %6658 = OpLoad %v4float %r0
       %6659 = OpCompositeInsert %v4float %6657 %6658 0
               OpStore %r0 %6659
       %6660 = OpLoad %v4float %r0
       %6661 = OpCompositeExtract %float %6660 0
       %6662 = OpBitcast %uint %6661
       %6663 = OpBitwiseAnd %uint %6662 %uint_1065353216
       %6664 = OpBitcast %float %6663
       %6665 = OpLoad %v4float %r0
       %6666 = OpCompositeInsert %v4float %6664 %6665 0
               OpStore %r0 %6666
       %6667 = OpLoad %v4float %r0
       %6668 = OpCompositeExtract %float %6667 0
       %6669 = OpAccessChain %_ptr_Private_v4float %shader_in %int_1
       %6670 = OpLoad %v4float %6669
       %6671 = OpCompositeExtract %float %6670 2
       %6672 = OpFMul %float %6668 %6671
               OpStore %o1 %6672
       %6673 = OpLoad %v4float %r0
       %6674 = OpCompositeExtract %float %6673 3
       %6675 = OpLoad %v4float %o0
       %6676 = OpCompositeInsert %v4float %6674 %6675 3
               OpStore %o0 %6676
       %6677 = OpLoad %v4float %r0
       %6678 = OpCompositeExtract %float %6677 0
               OpStore %o2 %6678
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %17
       %6679 = OpLabel
       %6680 = OpLoad %v4float %v0
       %6681 = OpAccessChain %_ptr_Private_v4float %shader_in %int_0
               OpStore %6681 %6680
       %6682 = OpLoad %v3float %v1
       %6683 = OpAccessChain %_ptr_Private_v4float %shader_in %int_1
       %6684 = OpLoad %v4float %6683
       %6685 = OpVectorShuffle %v4float %6684 %6682 4 5 6 3
               OpStore %6683 %6685
       %6686 = OpLoad %v3float %v2
       %6687 = OpAccessChain %_ptr_Private_v4float %shader_in %int_2
       %6688 = OpLoad %v4float %6687
       %6689 = OpVectorShuffle %v4float %6688 %6686 4 5 6 3
               OpStore %6687 %6689
       %6690 = OpLoad %v3float %v3
       %6691 = OpAccessChain %_ptr_Private_v4float %shader_in %int_3
       %6692 = OpLoad %v4float %6691
       %6693 = OpVectorShuffle %v4float %6692 %6690 4 5 6 3
               OpStore %6691 %6693
       %6694 = OpLoad %v3float %v4
       %6695 = OpAccessChain %_ptr_Private_v4float %shader_in %int_4
       %6696 = OpLoad %v4float %6695
       %6697 = OpVectorShuffle %v4float %6696 %6694 4 5 6 3
               OpStore %6695 %6697
       %6698 = OpLoad %v3float %v5
       %6699 = OpAccessChain %_ptr_Private_v4float %shader_in %int_5
       %6700 = OpLoad %v4float %6699
       %6701 = OpVectorShuffle %v4float %6700 %6698 4 5 6 3
               OpStore %6699 %6701
       %6702 = OpLoad %v4float %v6
       %6703 = OpAccessChain %_ptr_Private_v4float %shader_in %int_6
               OpStore %6703 %6702
       %6705 = OpLoad %v4float %ps_frag_coord
       %6706 = OpCompositeExtract %float %6705 3
       %6707 = OpFDiv %float %float_1 %6706
       %6708 = OpCompositeInsert %v4float %6707 %6705 3
       %6709 = OpVectorShuffle %v2float %6708 %6708 0 1
       %6710 = OpAccessChain %_ptr_Private_v4float %shader_in %int_7
       %6711 = OpLoad %v4float %6710
       %6712 = OpVectorShuffle %v4float %6711 %6709 4 5 2 3
               OpStore %6710 %6712
       %6714 = OpAccessChain %_ptr_Input_float %clip_distances %int_0
       %6715 = OpLoad %float %6714
       %6716 = OpAccessChain %_ptr_Input_float %clip_distances %int_1
       %6717 = OpLoad %float %6716
       %6718 = OpAccessChain %_ptr_Input_float %clip_distances %int_2
       %6719 = OpLoad %float %6718
       %6720 = OpAccessChain %_ptr_Input_float %clip_distances %int_3
       %6721 = OpLoad %float %6720
       %6722 = OpCompositeConstruct %v4float %6715 %6717 %6719 %6721
       %6723 = OpAccessChain %_ptr_Private_v4float %shader_in %int_8
               OpStore %6723 %6722
       %6724 = OpFunctionCall %void %ps_main
       %6725 = OpLoad %v4float %o0
       %6727 = OpVectorExtractDynamic %float %6725 %omap0_r
       %6729 = OpVectorExtractDynamic %float %6725 %omap0_g
       %6731 = OpVectorExtractDynamic %float %6725 %omap0_b
       %6733 = OpVectorExtractDynamic %float %6725 %omap0_a
       %6734 = OpCompositeConstruct %v4float %6727 %6729 %6731 %6733
               OpStore %o0 %6734
               OpReturn
               OpFunctionEnd
